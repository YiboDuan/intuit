)]}'
{"version":3,"sources":["angularui:angular-ui-bootstrap/ui-bootstrap-tpls.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,E;AACA,uB;AACA,yC;;AAEA,+B;AACA,e;AACA,G;AACA,uhB;AACA,ijC;AACA,2C;;AAEA,2D;;AAEA,Y;AACA,8C;AACA,2B;AACA,iE;AACA,4C;AACA,0D;AACA,8B;AACA,S;;AAEA,+B;AACA,4C;AACA,wC;AACA,S;;AAEA,6B;AACA,iB;AACA,kF;AACA,2E;AACA,0D;AACA,0D;AACA,iF;AACA,qE;AACA,oC;AACA,oC;;AAEA,+C;AACA,6B;AACA,gC;AACA,S;;AAEA,iC;AACA,mG;AACA,4C;AACA,uC;AACA,S;;AAEA,gE;AACA,+B;AACA,uB;AACA,kB;AACA,qB;AACA,W;AACA,W;AACA,O;AACA,M;AACA,M;;AAEA,mE;;AAEA,8B;AACA,mB;AACA,E;;AAEA,uH;;AAEA,mD;AACA,mB;;AAEA,wG;AACA,0C;AACA,6H;AACA,wB;AACA,qD;AACA,oC;AACA,+B;AACA,S;AACA,S;AACA,K;AACA,I;;AAEA,qF;AACA,wC;AACA,oB;AACA,iC;;AAEA,iD;AACA,mC;AACA,O;AACA,I;;AAEA,4E;AACA,sC;AACA,2C;AACA,yB;AACA,mC;AACA,K;AACA,I;;AAEA,G;;AAEA,kE;AACA,qD;AACA,qC;AACA,U;AACA,kB;AACA,qC;AACA,qB;AACA,mB;AACA,oD;AACA,I;AACA,E;;AAEA,wG;AACA,yC;AACA,U;AACA,qF;AACA,kB;AACA,mG;AACA,4G;AACA,0D;AACA,Y;AACA,sF;AACA,mB;AACA,sB;AACA,M;AACA,4B;AACA,2C;AACA,+B;AACA,Q;AACA,M;AACA,0D;AACA,oC;;AAEA,8C;AACA,sB;AACA,2C;AACA,S;AACA,S;;AAEA,qC;AACA,kC;AACA,uC;AACA,S;AACA,Q;AACA,K;AACA,I;AACA,E;;AAEA,sF;AACA,oB;AACA,qF;AACA,qB;AACA,2C;AACA,U;AACA,mB;AACA,sE;AACA,yD;AACA,kB;AACA,+B;AACA,0E;AACA,2D;AACA,2E;AACA,6G;AACA,qE;AACA,K;AACA,I;AACA,E;;AAEA,+F;AACA,yG;AACA,gC;AACA,wF;AACA,Q;AACA,S;AACA,8C;AACA,U;AACA,+B;AACA,sD;AACA,mG;AACA,wB;AACA,2B;AACA,kC;AACA,S;AACA,S;AACA,K;AACA,I;AACA,E;;AAEA,C;;AAEA,wC;;AAEA,+E;AACA,uC;AACA,4B;AACA,G;;AAEA,iC;AACA,U;AACA,kB;AACA,iC;AACA,4C;AACA,oB;AACA,iB;AACA,Y;AACA,gB;AACA,gB;AACA,K;AACA,I;AACA,E;;AAEA,gE;AACA,U;AACA,qB;AACA,sD;AACA,0B;AACA,0B;AACA,+C;AACA,K;AACA,I;AACA,I;;AAEA,2C;;AAEA,4C;AACA,4C;AACA,2E;AACA,mF;AACA,kC;AACA,S;AACA,M;AACA,K;AACA,0C;;AAEA,2B;AACA,wB;AACA,sB;AACA,E;;AAEA,0E;AACA,0D;AACA,yD;AACA,G;;AAEA,oC;AACA,U;AACA,qC;AACA,oC;AACA,mD;AACA,yD;;AAEA,mB;AACA,yC;AACA,2H;AACA,Q;;AAEA,iB;AACA,yD;AACA,iE;;AAEA,gE;AACA,oC;AACA,qF;AACA,kC;AACA,a;AACA,S;AACA,S;AACA,K;AACA,I;AACA,E;;AAEA,uC;AACA,U;AACA,wC;AACA,oC;AACA,mD;AACA,yD;;AAEA,+B;AACA,6D;AACA,O;;AAEA,gC;AACA,+D;AACA,O;;AAEA,+D;AACA,8C;AACA,2D;AACA,O;;AAEA,mB;AACA,yC;AACA,8G;AACA,Q;;AAEA,iB;AACA,yD;AACA,kC;AACA,kH;AACA,gC;AACA,W;AACA,S;AACA,K;AACA,I;AACA,G;;AAEA,G;AACA,iB;AACA,6B;AACA,C;AACA,c;AACA,yC;AACA,C;AACA,E;AACA,2C;AACA,8G;AACA,kB;AACA,8C;AACA,sB;AACA,+B;AACA,2B;;AAEA,wB;AACA,mC;AACA,gE;AACA,iD;AACA,wC;AACA,kC;AACA,uE;AACA,K;AACA,uD;AACA,e;AACA,K;AACA,uB;AACA,6C;AACA,gC;;AAEA,sE;AACA,qF;AACA,6E;AACA,yC;AACA,qE;AACA,2C;AACA,W;AACA,O;;AAEA,oC;AACA,+B;AACA,qD;AACA,qB;AACA,K;AACA,I;AACA,sC;AACA,qB;AACA,K;;AAEA,mC;AACA,mD;AACA,2B;AACA,K;AACA,+B;AACA,yC;AACA,qC;AACA,yB;AACA,O;AACA,K;AACA,G;;AAEA,qC;AACA,0E;AACA,sC;AACA,K;AACA,wB;AACA,I;;AAEA,4D;AACA,uC;AACA,iF;AACA,I;;AAEA,4B;AACA,gE;;AAEA,+F;AACA,qC;AACA,4D;AACA,K;AACA,I;;AAEA,4B;AACA,mG;;AAEA,+F;AACA,qC;AACA,4D;AACA,K;AACA,I;;AAEA,qC;AACA,wC;AACA,I;;AAEA,0C;AACA,qC;;AAEA,2B;AACA,iB;AACA,oC;AACA,2C;AACA,qD;AACA,K;AACA,G;;AAEA,yB;AACA,0B;AACA,wC;AACA,6B;AACA,K;AACA,G;;AAEA,sB;AACA,oC;AACA,wD;AACA,oB;AACA,Y;AACA,qB;AACA,K;AACA,G;;AAEA,4B;AACA,qB;AACA,uB;AACA,qB;AACA,K;AACA,I;AACA,6B;AACA,0B;AACA,wB;AACA,mB;AACA,K;AACA,I;;AAEA,4C;AACA,6B;AACA,uB;AACA,yE;AACA,6C;AACA,2C;AACA,+B;AACA,sB;AACA,O;AACA,Y;AACA,2B;AACA,K;AACA,I;;AAEA,sC;AACA,yC;AACA,kC;AACA,mC;AACA,S;AACA,K;AACA,oD;AACA,sC;AACA,4B;AACA,4C;AACA,mC;AACA,qC;AACA,c;AACA,mC;AACA,O;AACA,sC;AACA,qB;AACA,K;AACA,I;;AAEA,G;;AAEA,G;AACA,mB;AACA,iD;AACA,e;AACA,E;AACA,e;AACA,2E;AACA,E;AACA,+G;AACA,iF;AACA,4H;AACA,E;AACA,W;AACA,+B;AACA,0B;AACA,c;AACA,a;AACA,uE;AACA,sC;AACA,2B;AACA,c;AACA,c;AACA,a;AACA,uE;AACA,sC;AACA,uB;AACA,c;AACA,c;AACA,e;AACA,S;AACA,wB;AACA,0B;AACA,gB;AACA,mB;AACA,K;AACA,S;AACA,U;AACA,G;AACA,oC;AACA,U;AACA,mB;AACA,qB;AACA,kB;AACA,qC;AACA,wB;AACA,mD;AACA,Y;AACA,oB;AACA,wB;AACA,kB;AACA,K;AACA,I;AACA,G;;AAEA,G;AACA,mB;AACA,8C;AACA,e;AACA,E;AACA,e;AACA,wI;AACA,E;AACA,yF;AACA,8F;AACA,E;AACA,W;AACA,+B;AACA,0B;AACA,sC;AACA,Y;AACA,4E;AACA,yD;AACA,oC;AACA,iC;AACA,6B;AACA,Y;AACA,Y;AACA,a;AACA,wE;AACA,qD;AACA,M;AACA,S;AACA,yB;AACA,mC;AACA,2B;AACA,C;AACA,S;AACA,wB;AACA,0B;AACA,gB;AACA,mB;AACA,K;AACA,S;AACA,U;AACA,E;;AAEA,gC;AACA,U;AACA,yB;AACA,mB;AACA,qB;AACA,kB;AACA,gD;AACA,Y;AACA,mB;AACA,iB;AACA,M;AACA,0D;AACA,4C;AACA,uF;AACA,wC;AACA,wC;AACA,S;;AAEA,+C;AACA,qB;AACA,qC;AACA,S;AACA,S;AACA,K;AACA,I;AACA,E;;AAEA,qB;AACA,oB;AACA,qB;AACA,U;AACA,yD;AACA,wE;AACA,sD;AACA,mD;AACA,4B;AACA,yD;AACA,oE;AACA,oC;AACA,qE;AACA,yB;AACA,kE;AACA,W;AACA,iB;AACA,W;;AAEA,4B;AACA,yB;AACA,U;AACA,O;AACA,a;AACA,M;AACA,4D;AACA,wE;AACA,sD;AACA,mD;AACA,4B;AACA,yD;AACA,oE;AACA,qE;AACA,yB;AACA,gD;AACA,W;AACA,iB;AACA,W;AACA,4B;AACA,yB;AACA,U;AACA,O;AACA,a;AACA,K;AACA,I;;AAEA,G;;;AAGA,C;;AAEA,6C;;AAEA,sF;AACA,iF;AACA,oE;;AAEA,oB;;AAEA,2B;AACA,a;AACA,sB;AACA,oD;AACA,M;AACA,W;AACA,sB;AACA,2D;AACA,M;AACA,U;AACA,wB;AACA,oD;AACA,M;AACA,a;AACA,sD;AACA,4F;AACA,M;AACA,Y;AACA,2D;AACA,iG;AACA,M;AACA,W;AACA,6B;AACA,wD;AACA,M;AACA,U;AACA,4B;AACA,wD;AACA,M;AACA,W;AACA,uC;AACA,oD;AACA,M;AACA,U;AACA,wC;AACA,oD;AACA,M;AACA,a;AACA,mD;AACA,M;AACA,Y;AACA,wD;AACA,M;AACA,W;AACA,mC;AACA,qD;AACA,M;AACA,U;AACA,8B;AACA,qD;AACA,M;AACA,W;AACA,0B;AACA,uD;AACA,M;AACA,U;AACA,gC;AACA,uD;AACA,M;AACA,Y;AACA,+B;AACA,4D;AACA,M;AACA,W;AACA,0B;AACA,uD;AACA,M;AACA,U;AACA,gC;AACA,uD;AACA,K;AACA,I;;AAEA,iC;AACA,2C;;AAEA,6D;AACA,uC;;AAEA,uB;AACA,kC;;AAEA,8C;AACA,+E;AACA,sE;AACA,wB;AACA,0B;AACA,S;AACA,iC;;AAEA,sD;AACA,O;AACA,O;;AAEA,Y;AACA,oD;AACA,sC;AACA,M;AACA,G;;AAEA,kD;AACA,gD;AACA,mB;AACA,K;;AAEA,wD;AACA,+D;;AAEA,kC;AACA,kD;AACA,K;;AAEA,sC;AACA,6B;AACA,yB;AACA,qC;;AAEA,sC;AACA,qB;AACA,qB;AACA,kB;AACA,uC;AACA,qC;AACA,mC;AACA,qC;AACA,yC;AACA,yC;AACA,kD;AACA,U;AACA,c;AACA,sG;AACA,O;;AAEA,wD;AACA,8B;AACA,6B;AACA,gD;AACA,S;AACA,O;;AAEA,8D;AACA,2G;AACA,oC;AACA,O;;AAEA,gB;AACA,K;AACA,I;;AAEA,uE;AACA,iC;AACA,uC;AACA,mB;AACA,mB;AACA,K;;AAEA,oC;AACA,yF;AACA,K;;AAEA,qE;AACA,yB;AACA,K;;AAEA,gB;AACA,G;AACA,I;;AAEA,2C;;AAEA,G;AACA,iF;AACA,4E;AACA,iF;AACA,+B;AACA,G;AACA,gF;;AAEA,oC;AACA,iC;AACA,wC;AACA,4C;AACA,qD;AACA,O;AACA,yC;AACA,+B;AACA,K;;AAEA,O;AACA,yD;AACA,uC;AACA,O;AACA,0C;AACA,uE;AACA,K;;AAEA,O;AACA,qF;AACA,qB;AACA,O;AACA,6C;AACA,kC;AACA,0D;AACA,8F;AACA,iD;AACA,O;AACA,sC;AACA,M;;AAEA,Y;AACA,S;AACA,qE;AACA,wC;AACA,S;AACA,oC;AACA,yC;AACA,kD;AACA,wD;AACA,6C;AACA,yE;AACA,qF;AACA,wF;AACA,S;;AAEA,oE;AACA,gB;AACA,yE;AACA,4E;AACA,+C;AACA,iD;AACA,U;AACA,Q;;AAEA,S;AACA,mE;AACA,sC;AACA,S;AACA,kC;AACA,oE;AACA,gB;AACA,yE;AACA,4E;AACA,wG;AACA,0G;AACA,U;AACA,Q;;AAEA,S;AACA,oE;AACA,S;AACA,gF;;AAEA,sD;AACA,+E;;AAEA,sB;AACA,wB;AACA,yB;AACA,sB;;AAEA,+E;;AAEA,qD;AACA,uD;;AAEA,0B;AACA,+B;AACA,4E;AACA,Y;AACA,6B;AACA,kC;AACA,Y;AACA,8B;AACA,oD;AACA,W;AACA,U;;AAEA,2B;AACA,+B;AACA,6E;AACA,Y;AACA,4B;AACA,iC;AACA,Y;AACA,+B;AACA,oD;AACA,W;AACA,U;;AAEA,uB;AACA,uB;AACA,2B;AACA,uC;AACA,sC;AACA,c;AACA,kB;AACA,sB;AACA,2B;AACA,uC;AACA,kD;AACA,c;AACA,kB;AACA,wB;AACA,2B;AACA,uC;AACA,sC;AACA,c;AACA,kB;AACA,kB;AACA,2B;AACA,kD;AACA,sC;AACA,c;AACA,kB;AACA,S;;AAEA,2B;AACA,O;AACA,M;AACA,M;;AAEA,+F;;AAEA,+B;AACA,kB;AACA,sB;AACA,qB;AACA,yB;AACA,8B;AACA,2B;AACA,wB;AACA,iB;AACA,kB;AACA,kB;AACA,iB;AACA,gB;AACA,gB;AACA,gB;AACA,4B;AACA,E;;AAEA,uO;AACA,kB;AACA,sE;;AAEA,gB;AACA,wC;;AAEA,6B;AACA,qH;AACA,kI;AACA,qK;AACA,K;;AAEA,8B;AACA,2D;AACA,wB;AACA,kE;AACA,mD;AACA,2B;AACA,S;AACA,Y;AACA,iF;AACA,K;AACA,K;;AAEA,mF;AACA,gC;AACA,yF;;AAEA,0C;AACA,0E;AACA,8D;AACA,8F;AACA,mC;AACA,2B;AACA,O;AACA,O;AACA,U;AACA,kC;AACA,G;;AAEA,0C;AACA,+D;AACA,2C;AACA,kB;AACA,K;AACA,iB;AACA,I;;AAEA,wC;AACA,+B;;AAEA,sC;AACA,oB;AACA,M;AACA,I;;AAEA,4B;AACA,mC;AACA,oD;AACA,iC;;AAEA,sB;AACA,+B;AACA,c;AACA,oL;AACA,O;AACA,gD;AACA,K;AACA,uB;AACA,I;;AAEA,iC;AACA,yB;AACA,0B;;AAEA,kF;AACA,mG;AACA,K;AACA,I;;AAEA,kD;AACA,iF;AACA,Y;AACA,iB;AACA,sC;AACA,yD;AACA,sC;AACA,oD;AACA,yC;AACA,M;AACA,I;;AAEA,sC;AACA,yN;AACA,I;;AAEA,yC;AACA,2E;AACA,M;;AAEA,oC;AACA,oC;AACA,oB;AACA,4B;AACA,uC;AACA,K;AACA,kB;AACA,I;;AAEA,oC;AACA,mD;AACA,2G;AACA,4E;AACA,sC;AACA,4B;AACA,Y;AACA,6B;AACA,4F;AACA,K;AACA,I;;AAEA,uC;AACA,kF;AACA,iF;AACA,gD;AACA,uB;AACA,I;;AAEA,6C;AACA,+B;;AAEA,sI;AACA,a;AACA,K;;AAEA,kG;AACA,I;;AAEA,qB;AACA,uI;;AAEA,iC;AACA,yB;AACA,8B;AACA,kB;AACA,I;;AAEA,mD;AACA,+C;;AAEA,oC;AACA,qC;;AAEA,+C;AACA,a;AACA,K;;AAEA,yB;AACA,kC;AACA,8B;AACA,K;;AAEA,6C;AACA,8C;AACA,6B;AACA,O;AACA,qC;AACA,qB;AACA,iE;AACA,+C;AACA,qB;AACA,Y;AACA,mC;AACA,yB;AACA,K;AACA,I;AACA,G;;AAEA,uC;AACA,U;AACA,mB;AACA,kB;AACA,uD;AACA,Y;AACA,2B;AACA,wB;AACA,uB;AACA,+B;AACA,M;AACA,yC;AACA,uC;AACA,kD;AACA,4D;;AAEA,0B;AACA,2C;AACA,O;AACA,K;AACA,I;AACA,E;;AAEA,8D;AACA,U;AACA,mB;AACA,kB;AACA,gD;AACA,2B;AACA,iD;AACA,uC;;AAEA,gC;AACA,6B;;AAEA,2E;AACA,8C;AACA,6H;AACA,O;;AAEA,uC;AACA,uE;AACA,+E;AACA,yB;AACA,yC;AACA,mD;AACA,S;AACA,qB;AACA,O;;AAEA,sC;AACA,iD;AACA,6C;AACA,qD;AACA,mE;AACA,2F;AACA,gD;;AAEA,kD;AACA,mE;AACA,S;;AAEA,2D;AACA,2C;AACA,uC;AACA,oF;AACA,oD;AACA,yC;AACA,a;AACA,S;;AAEA,oC;AACA,qC;AACA,6B;AACA,iE;AACA,kD;AACA,Y;AACA,S;;AAEA,uE;AACA,yC;;AAEA,gC;AACA,iC;AACA,6D;AACA,2C;AACA,gE;AACA,mC;AACA,+E;AACA,W;AACA,S;AACA,Q;;AAEA,6C;AACA,0J;AACA,Q;;AAEA,2C;AACA,uC;AACA,2F;AACA,uC;AACA,oD;AACA,6B;AACA,6E;AACA,O;;AAEA,iD;AACA,6C;;AAEA,6B;AACA,kC;AACA,kC;AACA,oC;AACA,qC;AACA,oC;AACA,oC;AACA,0B;AACA,4D;AACA,gF;AACA,6C;AACA,2G;AACA,oC;AACA,mB;AACA,mC;AACA,2F;AACA,S;AACA,sC;AACA,Q;;AAEA,yB;AACA,K;AACA,I;AACA,G;;AAEA,gE;AACA,U;AACA,mB;AACA,kB;AACA,kD;AACA,2B;AACA,iD;AACA,+B;AACA,6B;;AAEA,sC;AACA,mC;AACA,iD;;AAEA,wC;AACA,qG;AACA,yC;AACA,a;AACA,S;;AAEA,yE;AACA,2C;AACA,Q;;AAEA,6C;AACA,qH;AACA,Q;;AAEA,iD;AACA,8C;;AAEA,6B;AACA,kC;AACA,kC;AACA,oC;AACA,qC;AACA,oC;AACA,oC;AACA,0B;AACA,4D;AACA,kF;AACA,4C;AACA,oC;AACA,mB;AACA,mC;AACA,oB;AACA,S;AACA,uC;AACA,Q;;AAEA,yB;AACA,K;AACA,I;AACA,G;;AAEA,+D;AACA,U;AACA,mB;AACA,kB;AACA,iD;AACA,2B;AACA,iD;AACA,iC;;AAEA,mC;AACA,6B;;AAEA,wC;AACA,4D;AACA,O;;AAEA,sC;AACA,qC;;AAEA,mG;AACA,wG;AACA,yC;AACA,a;AACA,S;;AAEA,2E;AACA,0C;AACA,Q;;AAEA,6C;AACA,yD;AACA,Q;;AAEA,iD;AACA,iD;;AAEA,6B;AACA,kC;AACA,kC;AACA,oC;AACA,qC;AACA,oC;AACA,oC;AACA,0B;AACA,4D;AACA,iE;AACA,oC;AACA,kE;AACA,mC;AACA,8E;AACA,S;AACA,0C;AACA,Q;;AAEA,yB;AACA,K;AACA,I;AACA,G;;AAEA,oC;AACA,gC;AACA,e;AACA,uB;AACA,gD;AACA,sB;AACA,I;AACA,uB;AACA,qB;AACA,oB;AACA,6B;AACA,sB;AACA,qB;AACA,E;;AAEA,mI;AACA,kG;AACA,U;AACA,mB;AACA,uB;AACA,Y;AACA,mB;AACA,uB;AACA,qB;AACA,qB;AACA,wB;AACA,sB;AACA,M;AACA,oD;AACA,qB;AACA,8K;AACA,kK;;AAEA,oJ;;AAEA,uC;AACA,0E;AACA,Q;;AAEA,mC;AACA,yD;AACA,kE;AACA,gC;AACA,c;AACA,oF;AACA,qE;AACA,+E;AACA,0E;AACA,kG;AACA,+C;AACA,yC;AACA,yC;;AAEA,gC;AACA,sF;AACA,e;AACA,a;AACA,W;AACA,O;;AAEA,wB;AACA,8E;AACA,O;;AAEA,sD;AACA,iF;AACA,O;;AAEA,+C;AACA,+F;AACA,oB;AACA,2B;AACA,sC;AACA,S;;AAEA,qC;AACA,2F;AACA,O;;AAEA,2B;AACA,gE;AACA,6B;AACA,oC;AACA,0D;AACA,iD;AACA,S;AACA,O;;AAEA,sC;AACA,mE;AACA,8B;AACA,4C;AACA,uD;AACA,kC;AACA,S;AACA,4D;AACA,0D;AACA,W;AACA,O;;AAEA,2B;AACA,oH;AACA,2B;AACA,gD;AACA,6D;AACA,yC;AACA,a;AACA,kE;;AAEA,yD;AACA,2C;AACA,mD;AACA,wE;AACA,yC;AACA,mD;AACA,e;AACA,e;AACA,W;AACA,S;AACA,S;AACA,+B;AACA,uF;AACA,O;;AAEA,4B;AACA,yD;AACA,O;;AAEA,6B;AACA,qF;AACA,O;;AAEA,qC;AACA,0C;AACA,gD;AACA,0C;AACA,S;;AAEA,yB;AACA,sB;AACA,oE;AACA,2B;AACA,iD;AACA,gG;AACA,4B;AACA,6B;AACA,kB;AACA,wB;AACA,W;AACA,gB;AACA,2B;AACA,S;AACA,O;;AAEA,iD;AACA,4C;AACA,sC;AACA,kC;AACA,S;AACA,qB;AACA,sB;AACA,4D;AACA,sB;AACA,6C;AACA,4E;AACA,8B;AACA,gB;AACA,uB;AACA,S;AACA,O;;AAEA,8B;AACA,sE;AACA,sC;AACA,6C;AACA,4C;AACA,mD;AACA,6B;AACA,iF;AACA,W;AACA,O;AACA,Y;AACA,mD;AACA,6B;AACA,uB;AACA,W;AACA,O;;AAEA,qB;AACA,0C;AACA,oC;AACA,0B;AACA,S;AACA,wE;AACA,0B;AACA,oC;;AAEA,qC;AACA,+B;AACA,6B;AACA,S;AACA,Q;;AAEA,qD;AACA,qD;AACA,kH;AACA,S;;AAEA,+C;AACA,0D;AACA,mC;AACA,iC;AACA,a;AACA,S;AACA,Q;;AAEA,4C;AACA,2B;AACA,Q;AACA,uC;;AAEA,qC;AACA,+B;AACA,+B;AACA,6B;AACA,kC;AACA,W;AACA,wB;AACA,uD;AACA,8B;AACA,S;AACA,Q;;AAEA,8C;AACA,oB;AACA,+C;AACA,kG;AACA,iF;;AAEA,qD;AACA,gB;AACA,uD;AACA,S;AACA,S;;AAEA,uC;AACA,+B;AACA,iC;AACA,2C;AACA,wC;AACA,qF;AACA,kB;AACA,wD;AACA,W;AACA,S;AACA,oC;AACA,Q;;AAEA,gC;AACA,6B;AACA,2B;AACA,Q;;AAEA,4C;AACA,mF;AACA,uB;;AAEA,2B;AACA,8C;AACA,c;AACA,8B;AACA,O;;AAEA,wC;AACA,wB;AACA,2C;AACA,qD;AACA,S;AACA,K;AACA,I;AACA,G;;AAEA,8C;AACA,U;AACA,kB;AACA,kB;AACA,qB;AACA,kD;AACA,2C;AACA,6C;AACA,+B;AACA,gC;AACA,S;AACA,K;AACA,I;AACA,G;;AAEA,kE;;AAEA,6B;AACA,mB;AACA,E;;AAEA,yF;AACA,uB;;AAEA,yC;AACA,uB;AACA,6C;AACA,+C;AACA,K;;AAEA,qD;AACA,iC;AACA,K;;AAEA,8B;AACA,I;;AAEA,0C;AACA,wC;AACA,uB;AACA,+C;AACA,iD;AACA,K;AACA,I;;AAEA,uC;AACA,uE;AACA,wE;AACA,+B;;AAEA,sE;;AAEA,qD;AACA,0E;AACA,e;AACA,K;;AAEA,0C;AACA,8G;AACA,a;AACA,K;;AAEA,6B;;AAEA,8B;AACA,yB;AACA,K;AACA,I;;AAEA,uC;AACA,6B;AACA,qC;AACA,sB;AACA,K;AACA,I;AACA,G;;AAEA,+O;AACA,kB;AACA,yF;AACA,2C;AACA,gB;AACA,+B;AACA,+E;AACA,2B;;AAEA,mC;AACA,4B;;AAEA,0B;AACA,wC;AACA,mC;;AAEA,gD;AACA,+B;AACA,S;AACA,K;;AAEA,kE;;AAEA,8C;AACA,yD;AACA,4D;AACA,mC;AACA,S;AACA,K;AACA,I;;AAEA,kC;AACA,oE;AACA,I;;AAEA,2C;AACA,4B;AACA,wB;AACA,I;;AAEA,uC;AACA,8B;AACA,I;;AAEA,mC;AACA,0E;AACA,I;;AAEA,iC;AACA,yB;AACA,I;;AAEA,yC;AACA,+B;AACA,oC;AACA,K;AACA,I;;AAEA,sD;AACA,8C;AACA,kG;AACA,6B;AACA,4B;AACA,8B;AACA,0C;AACA,S;AACA,K;;AAEA,4E;;AAEA,mB;AACA,iC;AACA,oC;AACA,Y;AACA,qC;AACA,K;;AAEA,8B;AACA,0D;AACA,gD;AACA,K;AACA,K;;AAEA,mD;AACA,yB;AACA,K;;AAEA,qC;AACA,qB;AACA,K;AACA,G;;AAEA,mC;AACA,U;AACA,qC;AACA,yD;AACA,mC;AACA,K;AACA,I;AACA,E;;AAEA,uC;AACA,U;AACA,mB;AACA,0B;AACA,yD;AACA,4B;AACA,e;AACA,O;AACA,0C;AACA,K;AACA,I;AACA,E;;AAEA,yC;AACA,U;AACA,0B;AACA,yD;AACA,4B;AACA,e;AACA,O;;AAEA,2C;;AAEA,4C;AACA,+B;;AAEA,iE;AACA,mC;AACA,kC;AACA,a;AACA,S;AACA,Q;;AAEA,4C;;AAEA,iB;AACA,sE;AACA,4D;AACA,gD;AACA,S;;AAEA,wC;AACA,gD;AACA,S;AACA,K;AACA,I;AACA,G;;AAEA,wC;;AAEA,G;AACA,0F;AACA,6B;AACA,G;AACA,wC;AACA,Y;AACA,8B;AACA,uB;;AAEA,gB;AACA,sC;AACA,wB;AACA,uB;AACA,0B;AACA,e;AACA,Y;AACA,+B;AACA,oD;AACA,wC;AACA,gC;AACA,e;AACA,a;AACA,Y;AACA,4B;AACA,0B;AACA,oD;AACA,sC;AACA,a;AACA,wB;AACA,Y;AACA,4B;AACA,2C;AACA,Y;AACA,kC;AACA,yB;AACA,oD;AACA,wC;AACA,wB;AACA,sB;AACA,e;AACA,a;AACA,2C;AACA,Y;AACA,kC;AACA,wD;AACA,Y;AACA,+B;AACA,gC;AACA,W;AACA,U;AACA,O;AACA,M;AACA,I;;AAEA,G;AACA,4E;AACA,G;AACA,gE;AACA,Y;AACA,qB;AACA,oB;AACA,kD;AACA,4C;AACA,gD;AACA,sB;AACA,O;AACA,M;;AAEA,4C;AACA,4B;;AAEA,+B;AACA,4B;AACA,6B;AACA,S;AACA,K;AACA,K;;AAEA,8E;AACA,Y;AACA,qB;AACA,c;AACA,mB;AACA,oB;AACA,Q;AACA,oB;AACA,uB;AACA,+C;AACA,kE;AACA,Q;AACA,8C;AACA,kD;AACA,gC;;AAEA,sC;AACA,2C;AACA,wH;AACA,iC;AACA,kC;AACA,6D;AACA,W;AACA,U;;AAEA,iH;AACA,gH;AACA,mG;AACA,iC;;AAEA,2E;AACA,6C;AACA,kH;AACA,kI;AACA,wD;AACA,gC;AACA,0C;AACA,W;AACA,W;;AAEA,sD;AACA,oC;AACA,+B;;AAEA,+E;AACA,a;AACA,sF;AACA,kF;AACA,+E;AACA,qF;AACA,yF;AACA,kF;AACA,a;AACA,2C;AACA,2C;AACA,kB;AACA,+B;AACA,W;;AAEA,+D;AACA,2C;AACA,sB;AACA,iD;AACA,W;AACA,W;AACA,O;AACA,M;AACA,K;;AAEA,qC;AACA,iB;AACA,c;AACA,8C;AACA,sC;AACA,0D;AACA,W;AACA,S;AACA,Q;AACA,O;;AAEA,6C;AACA,Y;AACA,yE;AACA,qD;AACA,2B;AACA,iC;AACA,W;AACA,O;AACA,M;AACA,I;;AAEA,yG;AACA,kF;;AAEA,4C;;AAEA,uC;AACA,mD;AACA,2B;;AAEA,gC;AACA,kC;AACA,0C;AACA,iD;AACA,4D;AACA,iC;AACA,W;AACA,S;AACA,gC;AACA,O;;AAEA,kE;AACA,4B;AACA,iD;AACA,S;AACA,S;;AAEA,iD;;AAEA,gD;AACA,iE;;AAEA,4B;AACA,4C;;AAEA,mC;AACA,uF;AACA,2E;AACA,gC;AACA,W;AACA,O;;AAEA,sC;AACA,+C;AACA,uD;AACA,iD;AACA,0E;AACA,sC;AACA,e;AACA,sC;AACA,sC;AACA,W;AACA,O;;AAEA,uD;AACA,4B;AACA,8B;;AAEA,kE;AACA,2B;AACA,0D;AACA,kD;AACA,a;AACA,gB;AACA,sC;AACA,mC;AACA,S;;AAEA,mC;AACA,oC;AACA,mB;AACA,W;AACA,qC;;AAEA,yB;AACA,2B;AACA,qB;AACA,mB;AACA,W;AACA,S;AACA,O;;AAEA,gD;AACA,kB;;AAEA,+B;AACA,sC;AACA,8C;AACA,iC;AACA,2C;AACA,iE;AACA,e;AACA,W;AACA,S;AACA,S;;AAEA,0D;;AAEA,qD;;AAEA,0C;AACA,mC;AACA,+C;AACA,kC;AACA,mC;AACA,kC;AACA,W;;AAEA,gD;AACA,gD;;AAEA,uD;AACA,gD;AACA,kD;AACA,sG;AACA,6E;AACA,gC;AACA,mE;AACA,W;AACA,0E;AACA,qC;AACA,S;;AAEA,sF;AACA,2B;AACA,kD;AACA,4C;AACA,6B;AACA,8C;AACA,8B;AACA,+B;AACA,8B;AACA,uD;AACA,S;;AAEA,6D;AACA,0D;AACA,4D;AACA,gC;AACA,0C;AACA,Q;;AAEA,uE;AACA,qH;AACA,O;;AAEA,4D;AACA,2D;AACA,yE;AACA,qD;AACA,2C;AACA,gD;AACA,sB;AACA,S;AACA,4B;AACA,Q;;AAEA,8D;AACA,2D;AACA,0E;AACA,oD;AACA,2C;AACA,gD;AACA,sB;AACA,S;AACA,4B;AACA,Q;;AAEA,kD;AACA,qC;AACA,gE;AACA,mC;AACA,S;AACA,Q;;AAEA,wC;AACA,mC;AACA,Q;;AAEA,4D;AACA,2D;AACA,0B;AACA,qD;AACA,S;AACA,Q;;AAEA,yB;AACA,O;;AAEA,mC;;AAEA,0B;AACA,gB;AACA,wB;AACA,uD;AACA,sB;AACA,Q;AACA,+F;AACA,0F;;AAEA,0B;;AAEA,gD;AACA,iE;AACA,wH;AACA,W;;AAEA,iD;AACA,iC;AACA,wD;AACA,wE;AACA,mE;AACA,e;AACA,e;AACA,+B;AACA,W;;AAEA,iD;;AAEA,iD;AACA,iD;AACA,iD;;AAEA,qG;AACA,iC;AACA,kD;AACA,kD;AACA,oD;AACA,wC;AACA,gE;AACA,gB;AACA,0C;AACA,kE;AACA,e;AACA,c;;AAEA,wC;AACA,oF;AACA,8D;;AAEA,4B;AACA,sE;AACA,qF;AACA,a;;AAEA,2C;AACA,0G;;;AAGA,gF;;AAEA,yE;AACA,sD;AACA,0D;;AAEA,gD;AACA,kC;;AAEA,2B;AACA,4C;AACA,+C;AACA,0D;AACA,6E;AACA,8D;AACA,mB;;AAEA,gF;AACA,gD;AACA,uE;AACA,iB;AACA,e;;AAEA,+C;AACA,kC;AACA,8C;AACA,oD;AACA,uC;AACA,kD;AACA,gD;AACA,gD;AACA,0D;AACA,sD;AACA,kE;AACA,uC;AACA,iB;;AAEA,8C;AACA,iD;AACA,e;;AAEA,wD;AACA,gD;AACA,kC;AACA,iD;AACA,e;;AAEA,iC;AACA,Y;;AAEA,wB;AACA,U;AACA,M;;AAEA,0B;AACA,K;;AAEA,6C;;AAEA,sG;AACA,kB;AACA,qE;AACA,oF;;AAEA,8C;AACA,+B;AACA,yB;;AAEA,sC;AACA,oB;AACA,M;;AAEA,8B;AACA,0E;AACA,gD;AACA,uD;AACA,S;AACA,Y;AACA,8C;AACA,K;;AAEA,4C;AACA,qD;AACA,O;;AAEA,iD;AACA,8D;;AAEA,kC;AACA,iC;AACA,c;AACA,8B;AACA,O;AACA,O;AACA,I;;AAEA,yC;AACA,kG;AACA,wC;AACA,I;;AAEA,4B;AACA,4D;AACA,I;;AAEA,2C;AACA,yE;AACA,8B;AACA,0B;AACA,O;AACA,sC;AACA,4B;AACA,K;AACA,I;;AAEA,oC;AACA,6D;AACA,I;AACA,kC;AACA,6B;AACA,I;AACA,8B;AACA,6C;AACA,I;AACA,G;;AAEA,+B;AACA,mB;AACA,uB;AACA,uB;AACA,qB;AACA,2B;AACA,mB;AACA,mB;AACA,c;AACA,E;;AAEA,4F;AACA,U;AACA,mB;AACA,Y;AACA,sB;AACA,qB;AACA,wB;AACA,oB;AACA,mB;AACA,M;AACA,wC;AACA,uC;AACA,uD;AACA,kB;AACA,kD;AACA,4D;;AAEA,yB;AACA,6C;AACA,O;;AAEA,uC;AACA,qH;AACA,iH;AACA,+I;AACA,mJ;;AAEA,yD;;AAEA,0B;AACA,qE;AACA,wC;AACA,kC;AACA,W;AACA,O;;AAEA,4C;AACA,iD;AACA,gB;AACA,yB;AACA,qB;AACA,0B;AACA,U;AACA,O;;AAEA,kD;AACA,uB;;AAEA,8B;AACA,gD;AACA,gF;;AAEA,+B;AACA,2B;AACA,yB;AACA,0E;AACA,yE;AACA,gD;;AAEA,0C;AACA,uC;AACA,qC;AACA,gD;AACA,a;AACA,kB;AACA,uD;AACA,+E;;AAEA,oD;AACA,oE;AACA,W;AACA,S;;AAEA,gC;AACA,mE;AACA,sE;AACA,2B;AACA,S;;AAEA,8C;AACA,uC;AACA,gC;AACA,wE;AACA,2C;AACA,W;;AAEA,uC;AACA,kE;AACA,oC;AACA,W;AACA,S;;AAEA,qB;AACA,O;;AAEA,iD;AACA,0C;AACA,yB;AACA,+D;AACA,+D;AACA,S;AACA,Q;AACA,K;AACA,I;AACA,G;;AAEA,0B;AACA,mB;AACA,6B;AACA,qB;AACA,a;AACA,E;;AAEA,2D;AACA,U;AACA,mB;AACA,Y;AACA,sB;AACA,wB;AACA,mB;AACA,M;AACA,mC;AACA,uC;AACA,kD;AACA,kB;AACA,kD;AACA,4D;;AAEA,yB;AACA,6C;AACA,O;;AAEA,0G;AACA,oD;AACA,K;AACA,I;AACA,I;;AAEA,G;AACA,+D;AACA,4E;AACA,kE;AACA,G;AACA,8F;;AAEA,G;AACA,+E;AACA,kC;AACA,G;AACA,oC;AACA,6C;AACA,wB;AACA,qB;AACA,oB;AACA,kB;AACA,wB;AACA,I;;AAEA,gD;AACA,oB;AACA,+B;AACA,qB;AACA,mB;AACA,I;;AAEA,oD;AACA,yB;;AAEA,K;AACA,qE;AACA,iB;AACA,I;AACA,gG;AACA,yD;AACA,2D;AACA,U;AACA,K;AACA,mC;AACA,yC;AACA,G;;AAEA,K;AACA,2E;AACA,I;AACA,qE;AACA,K;AACA,wD;AACA,2C;AACA,I;;AAEA,K;AACA,wE;AACA,K;AACA,4B;AACA,0B;AACA,wB;AACA,uD;AACA,2D;AACA,O;AACA,G;;AAEA,K;AACA,yD;AACA,mC;AACA,K;AACA,2K;AACA,4E;AACA,6E;;AAEA,S;AACA,qD;AACA,Q;AACA,kC;AACA,6E;AACA,6E;AACA,mE;AACA,Q;AACA,+E;AACA,6E;AACA,6E;AACA,yE;AACA,yD;AACA,S;AACA,wC;AACA,oE;AACA,4C;AACA,gB;AACA,qB;AACA,oB;AACA,U;AACA,O;;AAEA,6C;;AAEA,gD;AACA,4C;AACA,oB;AACA,0C;AACA,iD;AACA,kC;AACA,2C;AACA,yD;AACA,yD;AACA,4D;AACA,mC;AACA,6B;AACA,sC;AACA,c;AACA,iB;;AAEA,c;AACA,uB;AACA,2C;AACA,mD;;AAEA,uE;AACA,wB;AACA,mC;AACA,kC;AACA,6B;AACA,wG;AACA,oD;AACA,yE;AACA,2C;;AAEA,+C;AACA,uC;;AAEA,6G;AACA,qC;AACA,sC;;AAEA,oD;AACA,wC;AACA,c;;AAEA,mE;AACA,sC;;AAEA,mD;AACA,uD;AACA,mC;;AAEA,2C;AACA,uC;AACA,kC;AACA,sB;AACA,kC;AACA,e;AACA,a;;AAEA,sF;AACA,wC;AACA,wE;AACA,uB;AACA,e;;AAEA,+B;;AAEA,yC;AACA,6E;AACA,iG;AACA,oC;AACA,6E;AACA,yE;AACA,iB;AACA,sB;AACA,yB;AACA,e;AACA,a;;AAEA,yC;AACA,wC;AACA,uB;AACA,iB;AACA,a;;AAEA,8C;AACA,6B;;AAEA,kC;;AAEA,qF;AACA,iD;AACA,wC;AACA,qD;AACA,yC;AACA,e;;AAEA,2C;AACA,wF;AACA,oC;AACA,e;;AAEA,8B;;AAEA,6C;AACA,iE;AACA,gC;;AAEA,gC;;AAEA,sC;AACA,oC;AACA,0E;;AAEA,4E;AACA,wC;AACA,qC;AACA,a;;AAEA,8C;AACA,6B;AACA,8D;AACA,qC;;AAEA,gF;AACA,8C;AACA,kC;;AAEA,qF;AACA,0D;AACA,oF;AACA,wC;AACA,yC;AACA,mE;AACA,iB;AACA,sB;AACA,gC;AACA,e;AACA,a;;AAEA,sC;AACA,mF;AACA,4B;AACA,gC;AACA,e;AACA,kD;AACA,8E;AACA,qC;AACA,6D;AACA,wB;AACA,2C;AACA,iB;AACA,iB;;AAEA,qD;AACA,oD;AACA,iB;;AAEA,0C;AACA,0E;AACA,gD;AACA,2B;AACA,mB;AACA,mB;AACA,e;AACA,a;;AAEA,sC;AACA,uC;AACA,4B;AACA,iC;AACA,+B;AACA,e;AACA,uC;AACA,8C;AACA,0C;AACA,e;AACA,a;;AAEA,uC;AACA,+B;AACA,8B;AACA,+B;AACA,a;;AAEA,8C;AACA,8C;AACA,c;;AAEA,e;AACA,+C;AACA,e;AACA,yC;AACA,sD;AACA,sC;;AAEA,8C;AACA,yB;AACA,iB;AACA,iB;AACA,a;;AAEA,0D;AACA,2C;AACA,uB;AACA,e;AACA,e;;AAEA,8D;AACA,kC;AACA,e;;AAEA,uC;AACA,2D;AACA,a;;AAEA,sC;AACA,sD;AACA,qF;AACA,a;;AAEA,uC;AACA,uD;AACA,8C;AACA,+E;AACA,a;;AAEA,kD;AACA,6D;AACA,6D;AACA,c;;AAEA,qC;AACA,oD;AACA,mC;;AAEA,4C;;AAEA,sD;AACA,iE;AACA,sB;AACA,+D;AACA,+D;AACA,e;AACA,a;AACA,2B;;AAEA,qE;AACA,+F;;AAEA,8E;AACA,+F;;AAEA,yE;AACA,iF;AACA,6B;AACA,iC;AACA,mG;AACA,qC;AACA,uB;AACA,e;AACA,e;AACA,a;;AAEA,0D;AACA,+D;AACA,mD;AACA,8C;AACA,mC;AACA,8B;AACA,6B;AACA,e;AACA,Y;AACA,S;AACA,Q;AACA,M;AACA,K;AACA,E;;AAEA,wD;AACA,0C;AACA,4D;AACA,6D;AACA,U;AACA,2C;AACA,wE;;AAEA,4B;AACA,qB;AACA,wB;AACA,uB;;AAEA,kD;AACA,8B;AACA,mC;AACA,iC;AACA,S;AACA,2B;AACA,kC;AACA,8B;AACA,S;AACA,6B;AACA,0D;AACA,mC;AACA,a;AACA,2C;AACA,gC;AACA,S;AACA,Q;;AAEA,6F;AACA,2C;;AAEA,kB;AACA,4F;AACA,iD;AACA,+D;AACA,2D;AACA,4C;AACA,oC;;AAEA,sE;AACA,0C;AACA,0C;AACA,e;;AAEA,oC;AACA,mC;;AAEA,6D;AACA,yB;AACA,iD;AACA,0C;AACA,uD;AACA,a;AACA,a;AACA,uD;AACA,gB;AACA,sC;AACA,S;AACA,S;;AAEA,uD;AACA,K;AACA,I;AACA,G;;AAEA,G;AACA,oF;AACA,gF;AACA,kB;AACA,G;AACA,0C;AACA,U;AACA,kB;AACA,4C;AACA,4B;AACA,0C;AACA,O;AACA,6B;AACA,2C;AACA,O;AACA,8B;AACA,sD;AACA,O;AACA,K;AACA,I;AACA,E;;AAEA,yC;AACA,U;AACA,mB;AACA,kB;AACA,0F;AACA,sD;AACA,I;AACA,E;;AAEA,4D;AACA,wD;AACA,G;;AAEA,iD;AACA,U;AACA,mB;AACA,kB;AACA,2F;AACA,yB;AACA,+D;AACA,I;AACA,E;;AAEA,oE;AACA,+D;AACA,uB;AACA,K;AACA,G;;AAEA,6C;AACA,U;AACA,mB;AACA,kB;AACA,6F;AACA,2D;AACA,I;AACA,E;;AAEA,gE;AACA,2D;AACA,uB;AACA,K;AACA,G;;AAEA,E;AACA,U;AACA,E;AACA,mD;AACA,U;AACA,mB;AACA,kB;AACA,0F;AACA,kE;AACA,I;AACA,E;;AAEA,oD;AACA,kC;AACA,oE;AACA,qE;AACA,6C;AACA,sG;AACA,G;AACA,kE;AACA,I;;AAEA,G;AACA,4E;AACA,4E;AACA,oE;AACA,G;AACA,oE;;AAEA,iD;AACA,U;AACA,mB;AACA,kB;AACA,uG;AACA,yB;AACA,yD;AACA,I;AACA,E;;AAEA,oE;AACA,2D;AACA,uB;AACA,M;AACA,G;;AAEA,yC;AACA,U;AACA,mB;AACA,kB;AACA,sG;AACA,gD;AACA,I;AACA,E;;AAEA,4D;AACA,mD;AACA,I;;AAEA,8C;;AAEA,6B;AACA,gB;AACA,U;AACA,E;;AAEA,mH;AACA,oB;AACA,oH;;AAEA,mB;AACA,iF;;AAEA,0C;AACA,yB;AACA,gD;AACA,S;;AAEA,4B;;AAEA,+C;AACA,iE;AACA,W;;AAEA,wC;AACA,2B;AACA,gC;AACA,W;AACA,M;;AAEA,oC;AACA,oD;AACA,M;AACA,G;;AAEA,mC;AACA,Y;AACA,uB;AACA,sB;AACA,yB;AACA,yC;AACA,4B;AACA,kB;AACA,yD;AACA,M;AACA,E;;AAEA,8B;AACA,Y;AACA,uB;AACA,sB;AACA,yB;AACA,6B;AACA,gB;AACA,uB;AACA,sB;AACA,qB;AACA,U;AACA,qD;AACA,6D;AACA,gD;AACA,S;AACA,M;AACA,E;;AAEA,sC;AACA,Y;AACA,uB;AACA,sB;AACA,yB;AACA,yC;AACA,gB;AACA,uB;AACA,sB;AACA,qB;AACA,U;AACA,6D;AACA,6D;AACA,+E;AACA,S;AACA,M;AACA,G;;AAEA,yC;;AAEA,2B;AACA,S;AACA,gB;AACA,gB;AACA,E;;AAEA,6G;AACA,qD;;AAEA,sC;AACA,+B;AACA,sC;;AAEA,kD;AACA,4D;AACA,kC;AACA,O;AACA,mB;AACA,O;;AAEA,mH;AACA,uH;;AAEA,2G;AACA,yH;AACA,2D;AACA,I;;AAEA,gD;AACA,oD;AACA,8G;AACA,K;AACA,kB;AACA,I;;AAEA,iC;AACA,2E;AACA,uC;AACA,4B;AACA,K;AACA,I;;AAEA,kC;AACA,6B;AACA,2B;AACA,K;AACA,mC;AACA,I;;AAEA,6B;AACA,0C;AACA,qB;AACA,I;;AAEA,oC;AACA,0C;AACA,2B;AACA,4B;AACA,oF;AACA,K;AACA,I;;AAEA,4B;AACA,0C;AACA,I;AACA,G;;AAEA,iC;AACA,U;AACA,mB;AACA,mC;AACA,Y;AACA,qB;AACA,mB;AACA,kB;AACA,M;AACA,mC;AACA,+C;AACA,kB;AACA,kD;AACA,wD;AACA,qC;AACA,K;AACA,I;AACA,G;;AAEA,G;AACA,kB;AACA,0B;AACA,E;AACA,e;AACA,2C;AACA,G;;AAEA,uC;;AAEA,wE;AACA,kB;AACA,0C;;AAEA,uC;AACA,yC;AACA,8C;AACA,2B;AACA,yB;AACA,O;AACA,O;AACA,8B;AACA,2B;AACA,I;;AAEA,sC;AACA,mB;AACA,wD;AACA,uC;AACA,oD;AACA,wB;AACA,4B;AACA,uB;AACA,K;AACA,U;AACA,yB;AACA,K;AACA,I;;AAEA,4C;AACA,kC;AACA,6E;AACA,sD;AACA,6E;AACA,4E;AACA,wC;AACA,K;AACA,0B;AACA,I;;AAEA,gB;AACA,qC;AACA,qB;AACA,K;AACA,G;;AAEA,G;AACA,mB;AACA,2C;AACA,e;AACA,E;AACA,e;AACA,uD;AACA,E;AACA,kF;AACA,oF;AACA,E;AACA,W;AACA,+B;AACA,0B;AACA,Y;AACA,sD;AACA,uD;AACA,a;AACA,U;AACA,4B;AACA,wE;AACA,yE;AACA,a;AACA,6B;AACA,0E;AACA,2E;AACA,a;AACA,S;AACA,U;AACA,G;AACA,iC;AACA,U;AACA,mB;AACA,qB;AACA,kB;AACA,Y;AACA,e;AACA,M;AACA,mC;AACA,6C;AACA,2C;AACA,uG;AACA,0G;AACA,K;AACA,I;AACA,E;;AAEA,G;AACA,mB;AACA,wC;AACA,e;AACA,E;AACA,wJ;AACA,8E;AACA,mF;AACA,qF;AACA,E;AACA,e;AACA,uH;AACA,E;AACA,W;AACA,+B;AACA,0B;AACA,sC;AACA,sE;AACA,2C;AACA,e;AACA,sF;AACA,qD;AACA,e;AACA,Y;AACA,c;AACA,4C;AACA,gC;AACA,wE;AACA,2D;AACA,c;AACA,sC;AACA,kC;AACA,kC;AACA,+B;AACA,0B;AACA,c;AACA,e;AACA,U;AACA,S;AACA,yB;AACA,mC;AACA,sB;AACA,8D;AACA,6E;AACA,Q;;AAEA,mC;AACA,+B;AACA,kD;AACA,W;AACA,Q;AACA,M;AACA,S;AACA,U;AACA,G;;AAEA,G;AACA,mB;AACA,+C;AACA,e;AACA,E;AACA,e;AACA,yH;AACA,E;AACA,W;AACA,+B;AACA,0B;AACA,Y;AACA,W;AACA,6D;AACA,8B;AACA,Y;AACA,W;AACA,6E;AACA,qB;AACA,Y;AACA,a;AACA,S;AACA,U;AACA,G;AACA,6D;AACA,U;AACA,uB;AACA,mB;AACA,kB;AACA,0C;AACA,qB;AACA,Y;AACA,mB;AACA,mB;AACA,gF;AACA,0E;AACA,6B;AACA,M;AACA,4B;AACA,4E;AACA,M;AACA,+C;AACA,+D;AACA,iD;AACA,uB;AACA,qC;AACA,W;AACA,W;;AAEA,+B;AACA,8B;AACA,uE;AACA,sC;AACA,a;AACA,S;;AAEA,sD;AACA,6E;AACA,sF;AACA,qD;AACA,+B;AACA,6F;AACA,wE;AACA,sC;AACA,a;AACA,S;;AAEA,mC;AACA,kC;AACA,gC;AACA,W;AACA,U;;AAEA,iC;AACA,0C;AACA,sC;AACA,W;;AAEA,2E;AACA,6D;AACA,yC;AACA,Q;AACA,K;AACA,I;AACA,G;;AAEA,gD;AACA,U;AACA,kB;AACA,oB;AACA,gD;AACA,6E;AACA,sB;AACA,uB;AACA,8B;AACA,S;AACA,S;AACA,K;AACA,I;AACA,G;;AAEA,+C;AACA,U;AACA,kB;AACA,uB;AACA,uC;AACA,wD;;AAEA,yE;AACA,kE;AACA,yD;AACA,kD;AACA,mC;AACA,4C;AACA,sC;AACA,kB;AACA,6B;AACA,W;AACA,W;AACA,S;AACA,K;AACA,I;AACA,+B;AACA,6B;AACA,yC;AACA,8C;AACA,qD;AACA,uD;AACA,M;AACA,G;AACA,E;;AAEA,C;;AAEA,6C;;AAEA,+B;AACA,c;AACA,gB;AACA,qB;AACA,kB;AACA,uB;AACA,mB;AACA,iB;AACA,E;;AAEA,6K;AACA,4B;AACA,qE;AACA,8J;;AAEA,gD;AACA,+B;AACA,sC;;AAEA,2D;AACA,wD;AACA,O;;AAEA,oC;AACA,sC;;AAEA,kI;AACA,uB;AACA,iE;AACA,K;;AAEA,8H;AACA,oB;AACA,+D;AACA,K;;AAEA,iJ;AACA,0D;AACA,I;;AAEA,2C;AACA,wB;AACA,oE;AACA,qC;AACA,O;AACA,G;;AAEA,+C;AACA,0B;AACA,sE;AACA,uC;AACA,O;AACA,G;;AAEA,mB;AACA,sD;AACA,4B;AACA,wE;AACA,oC;;AAEA,sC;AACA,iC;AACA,+E;AACA,yE;AACA,qC;AACA,oB;AACA,S;AACA,c;AACA,yB;AACA,O;AACA,O;AACA,G;;AAEA,0C;AACA,qC;AACA,6C;AACA,iG;AACA,mB;AACA,uB;AACA,K;;AAEA,gC;AACA,2B;AACA,kB;AACA,O;AACA,+C;AACA,2B;AACA,O;AACA,K;AACA,iB;AACA,G;;AAEA,qC;AACA,+C;AACA,kE;AACA,G;;AAEA,yB;AACA,wG;AACA,G;;AAEA,+B;AACA,yE;AACA,qC;AACA,4B;AACA,4B;AACA,O;AACA,sD;AACA,4D;AACA,qC;AACA,M;;AAEA,uD;AACA,8F;AACA,yB;AACA,O;;AAEA,yD;AACA,kG;AACA,yB;AACA,O;;AAEA,I;;AAEA,iC;AACA,uE;AACA,8C;AACA,mC;AACA,2B;AACA,gC;AACA,wB;AACA,O;AACA,0C;AACA,2B;AACA,gC;AACA,wB;AACA,O;AACA,O;;AAEA,gD;AACA,mC;AACA,2B;AACA,kC;AACA,wB;AACA,O;AACA,0C;AACA,2B;AACA,kC;AACA,wB;AACA,O;AACA,O;AACA,I;;AAEA,oE;AACA,iC;AACA,wC;AACA,0C;AACA,a;AACA,K;;AAEA,6D;AACA,wC;AACA,8C;AACA,4C;AACA,2C;AACA,O;AACA,8C;AACA,+C;AACA,O;AACA,M;;AAEA,qC;AACA,yC;;AAEA,uC;AACA,mC;AACA,uB;AACA,c;AACA,yB;AACA,O;AACA,M;;AAEA,2C;AACA,uD;AACA,mC;AACA,6C;AACA,W;AACA,O;AACA,O;;AAEA,uC;AACA,6C;;AAEA,yC;AACA,uC;AACA,uB;AACA,c;AACA,oC;AACA,O;AACA,M;;AAEA,6C;AACA,4D;AACA,mC;AACA,iD;AACA,W;AACA,O;AACA,O;;AAEA,I;;AAEA,4B;AACA,sC;;AAEA,wB;AACA,8C;AACA,kL;AACA,Y;AACA,mB;AACA,wB;AACA,O;AACA,kB;AACA,uB;AACA,K;AACA,I;;AAEA,sD;AACA,sC;AACA,gB;AACA,oD;AACA,qC;AACA,G;;AAEA,wB;AACA,2C;AACA,gC;AACA,kC;AACA,G;;AAEA,6C;AACA,qE;;AAEA,gC;AACA,gG;AACA,K;;AAEA,+D;AACA,iC;AACA,oC;AACA,K;AACA,6E;AACA,G;;AAEA,kC;AACA,8D;AACA,wD;AACA,c;AACA,G;;AAEA,sC;AACA,gC;AACA,I;AACA,sC;AACA,kC;AACA,I;AACA,wC;AACA,6B;AACA,I;AACA,wC;AACA,+B;AACA,I;AACA,sC;AACA,oE;AACA,I;AACA,G;;AAEA,sC;AACA,U;AACA,mB;AACA,yC;AACA,sC;AACA,kB;AACA,c;AACA,uD;AACA,kD;AACA,4D;;AAEA,0B;AACA,kE;AACA,O;AACA,K;AACA,I;AACA,G;;AAEA,6C;;AAEA,8C;AACA,G;AACA,0H;AACA,sE;AACA,+F;AACA,2E;AACA,2F;AACA,oG;AACA,8E;AACA,G;AACA,yB;AACA,gF;AACA,iF;;AAEA,uC;AACA,qF;AACA,G;;AAEA,yD;AACA,4B;AACA,8B;AACA,2G;;AAEA,gD;AACA,oC;AACA,2D;AACA,kC;AACA,S;AACA,M;;AAEA,uB;AACA,uD;AACA,K;;AAEA,sG;AACA,yB;AACA,wC;AACA,kC;AACA,iD;AACA,yB;AACA,+C;AACA,6B;AACA,O;AACA,kE;AACA,4B;AACA,kC;AACA,O;AACA,O;;AAEA,qE;AACA,wH;AACA,mF;AACA,0C;AACA,2B;AACA,2D;AACA,O;AACA,8C;AACA,M;;AAEA,4B;AACA,I;;AAEA,iD;AACA,qD;AACA,iC;AACA,8C;AACA,qC;AACA,oC;AACA,iC;AACA,I;AACA,gC;AACA,6C;AACA,oC;AACA,mC;AACA,gC;AACA,I;AACA,4C;AACA,oC;AACA,mD;AACA,mC;AACA,O;AACA,K;AACA,G;AACA,iF;AACA,+E;AACA,qB;AACA,I;;AAEA,4F;;AAEA,G;AACA,gF;AACA,2D;AACA,G;AACA,4D;;AAEA,iG;AACA,kH;;AAEA,U;AACA,4B;;AAEA,gD;AACA,mB;AACA,wB;AACA,iH;AACA,yC;AACA,O;;AAEA,c;AACA,0B;AACA,gC;AACA,gD;AACA,oC;AACA,Q;AACA,K;AACA,I;AACA,G;;AAEA,+G;AACA,sF;;AAEA,qC;;AAEA,U;AACA,sB;AACA,8D;;AAEA,sC;;AAEA,mF;AACA,yE;;AAEA,8E;AACA,qE;;AAEA,iF;AACA,8E;;AAEA,0F;AACA,kF;;AAEA,oD;AACA,6D;;AAEA,6G;;AAEA,iH;;AAEA,gF;;AAEA,0B;;AAEA,kD;AACA,wD;;AAEA,qC;AACA,gE;;AAEA,mB;;AAEA,+F;AACA,0D;AACA,uC;AACA,+C;AACA,yB;AACA,S;;AAEA,iB;AACA,uF;AACA,oB;AACA,oC;AACA,+B;AACA,4B;AACA,S;;AAEA,8C;AACA,mE;AACA,oB;AACA,oB;AACA,2B;AACA,4B;AACA,oC;AACA,uB;AACA,4B;AACA,S;AACA,4B;AACA,0D;AACA,iE;AACA,O;;AAEA,qC;AACA,2B;AACA,6B;AACA,6C;AACA,Q;;AAEA,wC;AACA,4C;AACA,Q;;AAEA,iH;AACA,uF;AACA,iD;AACA,wB;AACA,sD;AACA,gB;AACA,mE;AACA,S;AACA,S;;AAEA,kD;;AAEA,8C;AACA,6C;AACA,oF;;AAEA,kG;AACA,6F;AACA,uE;AACA,6C;AACA,gD;;AAEA,oD;AACA,uC;;AAEA,gC;AACA,mD;AACA,2D;AACA,oC;AACA,oC;AACA,gE;AACA,mC;AACA,mB;AACA,e;;AAEA,uC;AACA,qH;AACA,2H;AACA,oD;AACA,sG;AACA,qF;;AAEA,kD;AACA,oB;AACA,6B;AACA,a;AACA,W;AACA,iC;AACA,kD;AACA,W;AACA,sB;AACA,yB;AACA,gD;AACA,W;AACA,Q;;AAEA,qB;;AAEA,oE;AACA,8B;;AAEA,+G;AACA,yB;;AAEA,4D;AACA,+C;AACA,sC;AACA,qB;AACA,Q;;AAEA,8C;AACA,6B;AACA,0C;AACA,S;AACA,Q;;AAEA,0F;AACA,+G;AACA,wD;;AAEA,wB;;AAEA,2D;AACA,6B;AACA,oC;AACA,kD;AACA,kB;AACA,wC;AACA,W;AACA,gB;AACA,gD;AACA,kC;AACA,yB;AACA,S;;AAEA,yB;AACA,4B;AACA,gB;AACA,4B;AACA,iE;AACA,qD;AACA,8B;AACA,kB;AACA,sD;AACA,6B;AACA,W;AACA,S;AACA,S;;AAEA,wD;;AAEA,+C;AACA,wB;;AAEA,uE;AACA,mE;AACA,wD;AACA,0B;AACA,mD;AACA,S;;AAEA,6B;;AAEA,qC;AACA,uD;;AAEA,gB;;AAEA,yF;AACA,iH;AACA,qD;AACA,8E;AACA,oD;AACA,0E;;AAEA,wF;AACA,S;AACA,S;;AAEA,2C;AACA,gD;AACA,wB;AACA,wB;;AAEA,8E;AACA,gE;AACA,6C;AACA,iD;AACA,8C;;AAEA,yC;AACA,sB;AACA,wB;AACA,gE;AACA,W;;AAEA,uB;;AAEA,2F;AACA,uD;AACA,+D;AACA,Q;;AAEA,qF;AACA,8C;;AAEA,gE;AACA,+E;AACA,iB;AACA,S;;AAEA,4F;AACA,6E;AACA,iB;AACA,S;;AAEA,6B;;AAEA,+B;AACA,yE;AACA,0B;;AAEA,sC;AACA,+F;AACA,0B;;AAEA,yD;AACA,oC;AACA,0C;AACA,a;;AAEA,sC;AACA,gC;;AAEA,yB;AACA,0B;AACA,S;AACA,S;;AAEA,2C;AACA,yB;AACA,S;;AAEA,sD;AACA,gD;AACA,wC;AACA,yB;AACA,0B;AACA,S;AACA,Q;;AAEA,mD;;AAEA,+C;AACA,uD;AACA,2B;AACA,0B;AACA,S;AACA,2C;AACA,yB;AACA,S;;AAEA,4C;;AAEA,yB;AACA,8C;AACA,c;AACA,8B;AACA,O;AACA,K;AACA,I;;AAEA,G;;AAEA,4C;AACA,Y;AACA,oB;AACA,a;AACA,oB;AACA,kB;AACA,mB;AACA,qB;AACA,kB;AACA,Q;AACA,mB;AACA,4D;AACA,6C;;AAEA,8C;;AAEA,oC;AACA,0C;AACA,U;;AAEA,8C;AACA,0C;AACA,U;;AAEA,kD;AACA,kC;AACA,U;;AAEA,kD;AACA,8C;AACA,U;AACA,O;AACA,M;AACA,I;;AAEA,yH;AACA,Y;AACA,oB;AACA,a;AACA,kB;AACA,kB;AACA,iB;AACA,Q;AACA,6C;AACA,2G;AACA,4D;AACA,qE;AACA,+C;AACA,a;AACA,W;AACA,O;AACA,M;AACA,K;;AAEA,4C;;AAEA,0C;AACA,qE;AACA,K;;AAEA,uC;AACA,wH;AACA,M;AACA,K;;AAEA,+G;AACA,+D;AACA,6C;AACA,yC;AACA,wC;AACA,wN;AACA,mB;AACA,kB;AACA,wE;AACA,2D;AACA,kB;AACA,gB;AACA,Q;AACA,I;;AAEA,yG;AACA,yD;AACA,uD;AACA,I;;AAEA,iG;AACA,iD;AACA,oI;AACA,iG;AACA,2D;AACA,sD;AACA,uB;AACA,uC;AACA,gB;AACA,Q;AACA,I;;AAEA,uG;AACA,uD;AACA,wI;AACA,8E;AACA,6J;AACA,mB;AACA,gE;AACA,+J;AACA,iK;AACA,gB;AACA,Q;AACA,I;;AAEA,oG;AACA,oD;AACA,2B;AACA,8B;AACA,+D;AACA,Q;AACA,I;;AAEA,2G;AACA,2D;AACA,gG;AACA,yE;AACA,+E;AACA,4E;AACA,c;AACA,I;;AAEA,oG;AACA,oD;AACA,iH;AACA,mB;AACA,kB;AACA,6L;AACA,sV;AACA,8L;AACA,mB;AACA,kB;AACA,qE;AACA,wJ;AACA,mB;AACA,oB;AACA,mB;AACA,4D;AACA,0G;AACA,uL;AACA,4U;AACA,qB;AACA,mB;AACA,oB;AACA,kB;AACA,Q;AACA,I;;AAEA,sG;AACA,sD;AACA,iH;AACA,mB;AACA,kB;AACA,6L;AACA,wT;AACA,8L;AACA,mB;AACA,oB;AACA,mB;AACA,4D;AACA,2J;AACA,yS;AACA,qB;AACA,mB;AACA,oB;AACA,kB;AACA,Q;AACA,I;;AAEA,sG;AACA,sD;AACA,6K;AACA,kC;AACA,sE;AACA,gD;AACA,iI;AACA,8H;AACA,mB;AACA,oI;AACA,gB;AACA,e;AACA,Q;AACA,I;;AAEA,qG;AACA,qD;AACA,iH;AACA,mB;AACA,kB;AACA,6L;AACA,sU;AACA,8L;AACA,mB;AACA,oB;AACA,mB;AACA,4D;AACA,2J;AACA,yS;AACA,qB;AACA,mB;AACA,oB;AACA,kB;AACA,Q;AACA,I;;AAEA,oG;AACA,oD;AACA,uC;AACA,6C;AACA,yC;AACA,4E;AACA,iB;AACA,Q;AACA,I;;AAEA,kG;AACA,kD;AACA,+F;AACA,4C;AACA,6H;AACA,6I;AACA,gB;AACA,Q;AACA,I;;AAEA,sG;AACA,sD;AACA,8B;AACA,yJ;AACA,6I;AACA,a;AACA,I;;AAEA,2G;AACA,2D;AACA,mC;AACA,sJ;AACA,iK;AACA,0K;AACA,yJ;AACA,0J;AACA,a;AACA,I;;AAEA,gH;AACA,gE;AACA,gC;AACA,4C;AACA,2B;AACA,0C;AACA,+C;AACA,6E;AACA,gB;AACA,Q;AACA,I;;AAEA,uH;AACA,uE;AACA,gC;AACA,4C;AACA,2B;AACA,0C;AACA,+C;AACA,4E;AACA,gB;AACA,Q;AACA,I;;AAEA,2G;AACA,2D;AACA,gC;AACA,4C;AACA,2B;AACA,0C;AACA,+C;AACA,mE;AACA,gB;AACA,Q;AACA,I;;AAEA,oH;AACA,oE;AACA,gC;AACA,4C;AACA,2B;AACA,0C;AACA,+C;AACA,wC;AACA,0D;AACA,wE;AACA,gB;AACA,Q;AACA,I;;AAEA,8G;AACA,8D;AACA,gC;AACA,4C;AACA,2B;AACA,0C;AACA,uC;AACA,U;AACA,yC;AACA,mF;AACA,8C;AACA,8D;AACA,4E;AACA,kB;AACA,gB;AACA,Q;AACA,I;;AAEA,4G;AACA,4D;AACA,4F;AACA,uC;AACA,U;AACA,yC;AACA,qF;AACA,iF;AACA,kB;AACA,gB;AACA,Q;AACA,I;;AAEA,qG;AACA,qD;AACA,gC;AACA,4C;AACA,2B;AACA,0C;AACA,uC;AACA,U;AACA,yC;AACA,mF;AACA,yE;AACA,kB;AACA,gB;AACA,Q;AACA,I;;AAEA,qG;AACA,qD;AACA,4S;AACA,Q;AACA,I;;AAEA,0G;AACA,0D;AACA,oD;AACA,I;;AAEA,6G;AACA,6D;AACA,kC;AACA,8S;AACA,gB;AACA,Q;AACA,I;;AAEA,mG;AACA,mD;AACA,6L;AACA,yP;AACA,mF;AACA,kB;AACA,e;AACA,I;;AAEA,8F;AACA,8C;AACA,gE;AACA,gF;AACA,e;AACA,Q;AACA,I;;AAEA,iG;AACA,iD;AACA,e;AACA,2I;AACA,uC;AACA,sC;AACA,6C;AACA,oD;AACA,kD;AACA,oB;AACA,kB;AACA,gB;AACA,Q;AACA,I;;AAEA,2G;AACA,2D;AACA,iB;AACA,kB;AACA,sC;AACA,wI;AACA,4B;AACA,0I;AACA,+C;AACA,iB;AACA,gB;AACA,+E;AACA,yL;AACA,kB;AACA,uB;AACA,iF;AACA,6L;AACA,kB;AACA,gK;AACA,iB;AACA,sC;AACA,0I;AACA,4B;AACA,4I;AACA,+C;AACA,iB;AACA,mB;AACA,kB;AACA,Q;AACA,I;;AAEA,+G;AACA,+D;AACA,2F;AACA,I;;AAEA,+G;AACA,+D;AACA,oM;AACA,sN;AACA,2H;AACA,mB;AACA,e;AACA,Q;AACA,I;AACA,oN","file":"/packages/angularui_angular-ui-bootstrap.js","sourcesContent":["/*\n * angular-ui-bootstrap\n * http://angular-ui.github.io/bootstrap/\n\n * Version: 0.13.0 - 2015-05-02\n * License: MIT\n */\nangular.module(\"ui.bootstrap\", [\"ui.bootstrap.tpls\", \"ui.bootstrap.collapse\",\"ui.bootstrap.accordion\",\"ui.bootstrap.alert\",\"ui.bootstrap.bindHtml\",\"ui.bootstrap.buttons\",\"ui.bootstrap.carousel\",\"ui.bootstrap.dateparser\",\"ui.bootstrap.position\",\"ui.bootstrap.datepicker\",\"ui.bootstrap.dropdown\",\"ui.bootstrap.modal\",\"ui.bootstrap.pagination\",\"ui.bootstrap.tooltip\",\"ui.bootstrap.popover\",\"ui.bootstrap.progressbar\",\"ui.bootstrap.rating\",\"ui.bootstrap.tabs\",\"ui.bootstrap.timepicker\",\"ui.bootstrap.transition\",\"ui.bootstrap.typeahead\"]);\nangular.module(\"ui.bootstrap.tpls\", [\"template/accordion/accordion-group.html\",\"template/accordion/accordion.html\",\"template/alert/alert.html\",\"template/carousel/carousel.html\",\"template/carousel/slide.html\",\"template/datepicker/datepicker.html\",\"template/datepicker/day.html\",\"template/datepicker/month.html\",\"template/datepicker/popup.html\",\"template/datepicker/year.html\",\"template/modal/backdrop.html\",\"template/modal/window.html\",\"template/pagination/pager.html\",\"template/pagination/pagination.html\",\"template/tooltip/tooltip-html-popup.html\",\"template/tooltip/tooltip-html-unsafe-popup.html\",\"template/tooltip/tooltip-popup.html\",\"template/tooltip/tooltip-template-popup.html\",\"template/popover/popover-template.html\",\"template/popover/popover.html\",\"template/progressbar/bar.html\",\"template/progressbar/progress.html\",\"template/progressbar/progressbar.html\",\"template/rating/rating.html\",\"template/tabs/tab.html\",\"template/tabs/tabset.html\",\"template/timepicker/timepicker.html\",\"template/typeahead/typeahead-match.html\",\"template/typeahead/typeahead-popup.html\"]);\nangular.module('ui.bootstrap.collapse', [])\n\n  .directive('collapse', ['$animate', function ($animate) {\n\n    return {\n      link: function (scope, element, attrs) {\n        function expand() {\n          element.removeClass('collapse').addClass('collapsing');\n          $animate.addClass(element, 'in', {\n            to: { height: element[0].scrollHeight + 'px' }\n          }).then(expandDone);\n        }\n\n        function expandDone() {\n          element.removeClass('collapsing');\n          element.css({height: 'auto'});\n        }\n\n        function collapse() {\n          element\n            // IMPORTANT: The height must be set before adding \"collapsing\" class.\n            // Otherwise, the browser attempts to animate from height 0 (in\n            // collapsing class) to the given height here.\n            .css({height: element[0].scrollHeight + 'px'})\n            // initially all panel collapse have the collapse class, this removal\n            // prevents the animation from jumping to collapsed state\n            .removeClass('collapse')\n            .addClass('collapsing');\n\n          $animate.removeClass(element, 'in', {\n            to: {height: '0'}\n          }).then(collapseDone);\n        }\n\n        function collapseDone() {\n          element.css({height: '0'}); // Required so that collapse works when animation is disabled\n          element.removeClass('collapsing');\n          element.addClass('collapse');\n        }\n\n        scope.$watch(attrs.collapse, function (shouldCollapse) {\n          if (shouldCollapse) {\n            collapse();\n          } else {\n            expand();\n          }\n        });\n      }\n    };\n  }]);\n\nangular.module('ui.bootstrap.accordion', ['ui.bootstrap.collapse'])\n\n.constant('accordionConfig', {\n  closeOthers: true\n})\n\n.controller('AccordionController', ['$scope', '$attrs', 'accordionConfig', function ($scope, $attrs, accordionConfig) {\n\n  // This array keeps track of the accordion groups\n  this.groups = [];\n\n  // Ensure that all the groups in this accordion are closed, unless close-others explicitly says not to\n  this.closeOthers = function(openGroup) {\n    var closeOthers = angular.isDefined($attrs.closeOthers) ? $scope.$eval($attrs.closeOthers) : accordionConfig.closeOthers;\n    if ( closeOthers ) {\n      angular.forEach(this.groups, function (group) {\n        if ( group !== openGroup ) {\n          group.isOpen = false;\n        }\n      });\n    }\n  };\n\n  // This is called from the accordion-group directive to add itself to the accordion\n  this.addGroup = function(groupScope) {\n    var that = this;\n    this.groups.push(groupScope);\n\n    groupScope.$on('$destroy', function (event) {\n      that.removeGroup(groupScope);\n    });\n  };\n\n  // This is called from the accordion-group directive when to remove itself\n  this.removeGroup = function(group) {\n    var index = this.groups.indexOf(group);\n    if ( index !== -1 ) {\n      this.groups.splice(index, 1);\n    }\n  };\n\n}])\n\n// The accordion directive simply sets up the directive controller\n// and adds an accordion CSS class to itself element.\n.directive('accordion', function () {\n  return {\n    restrict:'EA',\n    controller:'AccordionController',\n    transclude: true,\n    replace: false,\n    templateUrl: 'template/accordion/accordion.html'\n  };\n})\n\n// The accordion-group directive indicates a block of html that will expand and collapse in an accordion\n.directive('accordionGroup', function() {\n  return {\n    require:'^accordion',         // We need this directive to be inside an accordion\n    restrict:'EA',\n    transclude:true,              // It transcludes the contents of the directive into the template\n    replace: true,                // The element containing the directive will be replaced with the template\n    templateUrl:'template/accordion/accordion-group.html',\n    scope: {\n      heading: '@',               // Interpolate the heading attribute onto this scope\n      isOpen: '=?',\n      isDisabled: '=?'\n    },\n    controller: function() {\n      this.setHeading = function(element) {\n        this.heading = element;\n      };\n    },\n    link: function(scope, element, attrs, accordionCtrl) {\n      accordionCtrl.addGroup(scope);\n\n      scope.$watch('isOpen', function(value) {\n        if ( value ) {\n          accordionCtrl.closeOthers(scope);\n        }\n      });\n\n      scope.toggleOpen = function() {\n        if ( !scope.isDisabled ) {\n          scope.isOpen = !scope.isOpen;\n        }\n      };\n    }\n  };\n})\n\n// Use accordion-heading below an accordion-group to provide a heading containing HTML\n// <accordion-group>\n//   <accordion-heading>Heading containing HTML - <img src=\"...\"></accordion-heading>\n// </accordion-group>\n.directive('accordionHeading', function() {\n  return {\n    restrict: 'EA',\n    transclude: true,   // Grab the contents to be used as the heading\n    template: '',       // In effect remove this element!\n    replace: true,\n    require: '^accordionGroup',\n    link: function(scope, element, attr, accordionGroupCtrl, transclude) {\n      // Pass the heading to the accordion-group controller\n      // so that it can be transcluded into the right place in the template\n      // [The second parameter to transclude causes the elements to be cloned so that they work in ng-repeat]\n      accordionGroupCtrl.setHeading(transclude(scope, angular.noop));\n    }\n  };\n})\n\n// Use in the accordion-group template to indicate where you want the heading to be transcluded\n// You must provide the property on the accordion-group controller that will hold the transcluded element\n// <div class=\"accordion-group\">\n//   <div class=\"accordion-heading\" ><a ... accordion-transclude=\"heading\">...</a></div>\n//   ...\n// </div>\n.directive('accordionTransclude', function() {\n  return {\n    require: '^accordionGroup',\n    link: function(scope, element, attr, controller) {\n      scope.$watch(function() { return controller[attr.accordionTransclude]; }, function(heading) {\n        if ( heading ) {\n          element.html('');\n          element.append(heading);\n        }\n      });\n    }\n  };\n})\n\n;\n\nangular.module('ui.bootstrap.alert', [])\n\n.controller('AlertController', ['$scope', '$attrs', function ($scope, $attrs) {\n  $scope.closeable = 'close' in $attrs;\n  this.close = $scope.close;\n}])\n\n.directive('alert', function () {\n  return {\n    restrict:'EA',\n    controller:'AlertController',\n    templateUrl:'template/alert/alert.html',\n    transclude:true,\n    replace:true,\n    scope: {\n      type: '@',\n      close: '&'\n    }\n  };\n})\n\n.directive('dismissOnTimeout', ['$timeout', function($timeout) {\n  return {\n    require: 'alert',\n    link: function(scope, element, attrs, alertCtrl) {\n      $timeout(function(){\n        alertCtrl.close();\n      }, parseInt(attrs.dismissOnTimeout, 10));\n    }\n  };\n}]);\n\nangular.module('ui.bootstrap.bindHtml', [])\n\n  .directive('bindHtmlUnsafe', function () {\n    return function (scope, element, attr) {\n      element.addClass('ng-binding').data('$binding', attr.bindHtmlUnsafe);\n      scope.$watch(attr.bindHtmlUnsafe, function bindHtmlUnsafeWatchAction(value) {\n        element.html(value || '');\n      });\n    };\n  });\nangular.module('ui.bootstrap.buttons', [])\n\n.constant('buttonConfig', {\n  activeClass: 'active',\n  toggleEvent: 'click'\n})\n\n.controller('ButtonsController', ['buttonConfig', function(buttonConfig) {\n  this.activeClass = buttonConfig.activeClass || 'active';\n  this.toggleEvent = buttonConfig.toggleEvent || 'click';\n}])\n\n.directive('btnRadio', function () {\n  return {\n    require: ['btnRadio', 'ngModel'],\n    controller: 'ButtonsController',\n    link: function (scope, element, attrs, ctrls) {\n      var buttonsCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      //model -> UI\n      ngModelCtrl.$render = function () {\n        element.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, scope.$eval(attrs.btnRadio)));\n      };\n\n      //ui->model\n      element.bind(buttonsCtrl.toggleEvent, function () {\n        var isActive = element.hasClass(buttonsCtrl.activeClass);\n\n        if (!isActive || angular.isDefined(attrs.uncheckable)) {\n          scope.$apply(function () {\n            ngModelCtrl.$setViewValue(isActive ? null : scope.$eval(attrs.btnRadio));\n            ngModelCtrl.$render();\n          });\n        }\n      });\n    }\n  };\n})\n\n.directive('btnCheckbox', function () {\n  return {\n    require: ['btnCheckbox', 'ngModel'],\n    controller: 'ButtonsController',\n    link: function (scope, element, attrs, ctrls) {\n      var buttonsCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      function getTrueValue() {\n        return getCheckboxValue(attrs.btnCheckboxTrue, true);\n      }\n\n      function getFalseValue() {\n        return getCheckboxValue(attrs.btnCheckboxFalse, false);\n      }\n\n      function getCheckboxValue(attributeValue, defaultValue) {\n        var val = scope.$eval(attributeValue);\n        return angular.isDefined(val) ? val : defaultValue;\n      }\n\n      //model -> UI\n      ngModelCtrl.$render = function () {\n        element.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, getTrueValue()));\n      };\n\n      //ui->model\n      element.bind(buttonsCtrl.toggleEvent, function () {\n        scope.$apply(function () {\n          ngModelCtrl.$setViewValue(element.hasClass(buttonsCtrl.activeClass) ? getFalseValue() : getTrueValue());\n          ngModelCtrl.$render();\n        });\n      });\n    }\n  };\n});\n\n/**\n* @ngdoc overview\n* @name ui.bootstrap.carousel\n*\n* @description\n* AngularJS version of an image carousel.\n*\n*/\nangular.module('ui.bootstrap.carousel', [])\n.controller('CarouselController', ['$scope', '$interval', '$animate', function ($scope, $interval, $animate) {\n  var self = this,\n    slides = self.slides = $scope.slides = [],\n    currentIndex = -1,\n    currentInterval, isPlaying;\n  self.currentSlide = null;\n\n  var destroyed = false;\n  /* direction: \"prev\" or \"next\" */\n  self.select = $scope.select = function(nextSlide, direction) {\n    var nextIndex = self.indexOfSlide(nextSlide);\n    //Decide direction if it's not given\n    if (direction === undefined) {\n      direction = nextIndex > self.getCurrentIndex() ? 'next' : 'prev';\n    }\n    if (nextSlide && nextSlide !== self.currentSlide) {\n      goNext();\n    }\n    function goNext() {\n      // Scope has been destroyed, stop here.\n      if (destroyed) { return; }\n\n      angular.extend(nextSlide, {direction: direction, active: true});\n      angular.extend(self.currentSlide || {}, {direction: direction, active: false});\n      if ($animate.enabled() && !$scope.noTransition && nextSlide.$element) {\n        $scope.$currentTransition = true;\n        nextSlide.$element.one('$animate:close', function closeFn() {\n          $scope.$currentTransition = null;\n        });\n      }\n\n      self.currentSlide = nextSlide;\n      currentIndex = nextIndex;\n      //every time you change slides, reset the timer\n      restartTimer();\n    }\n  };\n  $scope.$on('$destroy', function () {\n    destroyed = true;\n  });\n\n  function getSlideByIndex(index) {\n    if (angular.isUndefined(slides[index].index)) {\n      return slides[index];\n    }\n    var i, len = slides.length;\n    for (i = 0; i < slides.length; ++i) {\n      if (slides[i].index == index) {\n        return slides[i];\n      }\n    }\n  }\n\n  self.getCurrentIndex = function() {\n    if (self.currentSlide && angular.isDefined(self.currentSlide.index)) {\n      return +self.currentSlide.index;\n    }\n    return currentIndex;\n  };\n\n  /* Allow outside people to call indexOf on slides array */\n  self.indexOfSlide = function(slide) {\n    return angular.isDefined(slide.index) ? +slide.index : slides.indexOf(slide);\n  };\n\n  $scope.next = function() {\n    var newIndex = (self.getCurrentIndex() + 1) % slides.length;\n\n    //Prevent this user-triggered transition from occurring if there is already one in progress\n    if (!$scope.$currentTransition) {\n      return self.select(getSlideByIndex(newIndex), 'next');\n    }\n  };\n\n  $scope.prev = function() {\n    var newIndex = self.getCurrentIndex() - 1 < 0 ? slides.length - 1 : self.getCurrentIndex() - 1;\n\n    //Prevent this user-triggered transition from occurring if there is already one in progress\n    if (!$scope.$currentTransition) {\n      return self.select(getSlideByIndex(newIndex), 'prev');\n    }\n  };\n\n  $scope.isActive = function(slide) {\n     return self.currentSlide === slide;\n  };\n\n  $scope.$watch('interval', restartTimer);\n  $scope.$on('$destroy', resetTimer);\n\n  function restartTimer() {\n    resetTimer();\n    var interval = +$scope.interval;\n    if (!isNaN(interval) && interval > 0) {\n      currentInterval = $interval(timerFn, interval);\n    }\n  }\n\n  function resetTimer() {\n    if (currentInterval) {\n      $interval.cancel(currentInterval);\n      currentInterval = null;\n    }\n  }\n\n  function timerFn() {\n    var interval = +$scope.interval;\n    if (isPlaying && !isNaN(interval) && interval > 0) {\n      $scope.next();\n    } else {\n      $scope.pause();\n    }\n  }\n\n  $scope.play = function() {\n    if (!isPlaying) {\n      isPlaying = true;\n      restartTimer();\n    }\n  };\n  $scope.pause = function() {\n    if (!$scope.noPause) {\n      isPlaying = false;\n      resetTimer();\n    }\n  };\n\n  self.addSlide = function(slide, element) {\n    slide.$element = element;\n    slides.push(slide);\n    //if this is the first slide or the slide is set to active, select it\n    if(slides.length === 1 || slide.active) {\n      self.select(slides[slides.length-1]);\n      if (slides.length == 1) {\n        $scope.play();\n      }\n    } else {\n      slide.active = false;\n    }\n  };\n\n  self.removeSlide = function(slide) {\n    if (angular.isDefined(slide.index)) {\n      slides.sort(function(a, b) {\n        return +a.index > +b.index;\n      });\n    }\n    //get the index of the slide inside the carousel\n    var index = slides.indexOf(slide);\n    slides.splice(index, 1);\n    if (slides.length > 0 && slide.active) {\n      if (index >= slides.length) {\n        self.select(slides[index-1]);\n      } else {\n        self.select(slides[index]);\n      }\n    } else if (currentIndex > index) {\n      currentIndex--;\n    }\n  };\n\n}])\n\n/**\n * @ngdoc directive\n * @name ui.bootstrap.carousel.directive:carousel\n * @restrict EA\n *\n * @description\n * Carousel is the outer container for a set of image 'slides' to showcase.\n *\n * @param {number=} interval The time, in milliseconds, that it will take the carousel to go to the next slide.\n * @param {boolean=} noTransition Whether to disable transitions on the carousel.\n * @param {boolean=} noPause Whether to disable pausing on the carousel (by default, the carousel interval pauses on hover).\n *\n * @example\n<example module=\"ui.bootstrap\">\n  <file name=\"index.html\">\n    <carousel>\n      <slide>\n        <img src=\"http://placekitten.com/150/150\" style=\"margin:auto;\">\n        <div class=\"carousel-caption\">\n          <p>Beautiful!</p>\n        </div>\n      </slide>\n      <slide>\n        <img src=\"http://placekitten.com/100/150\" style=\"margin:auto;\">\n        <div class=\"carousel-caption\">\n          <p>D'aww!</p>\n        </div>\n      </slide>\n    </carousel>\n  </file>\n  <file name=\"demo.css\">\n    .carousel-indicators {\n      top: auto;\n      bottom: 15px;\n    }\n  </file>\n</example>\n */\n.directive('carousel', [function() {\n  return {\n    restrict: 'EA',\n    transclude: true,\n    replace: true,\n    controller: 'CarouselController',\n    require: 'carousel',\n    templateUrl: 'template/carousel/carousel.html',\n    scope: {\n      interval: '=',\n      noTransition: '=',\n      noPause: '='\n    }\n  };\n}])\n\n/**\n * @ngdoc directive\n * @name ui.bootstrap.carousel.directive:slide\n * @restrict EA\n *\n * @description\n * Creates a slide inside a {@link ui.bootstrap.carousel.directive:carousel carousel}.  Must be placed as a child of a carousel element.\n *\n * @param {boolean=} active Model binding, whether or not this slide is currently active.\n * @param {number=} index The index of the slide. The slides will be sorted by this parameter.\n *\n * @example\n<example module=\"ui.bootstrap\">\n  <file name=\"index.html\">\n<div ng-controller=\"CarouselDemoCtrl\">\n  <carousel>\n    <slide ng-repeat=\"slide in slides\" active=\"slide.active\" index=\"$index\">\n      <img ng-src=\"{{slide.image}}\" style=\"margin:auto;\">\n      <div class=\"carousel-caption\">\n        <h4>Slide {{$index}}</h4>\n        <p>{{slide.text}}</p>\n      </div>\n    </slide>\n  </carousel>\n  Interval, in milliseconds: <input type=\"number\" ng-model=\"myInterval\">\n  <br />Enter a negative number to stop the interval.\n</div>\n  </file>\n  <file name=\"script.js\">\nfunction CarouselDemoCtrl($scope) {\n  $scope.myInterval = 5000;\n}\n  </file>\n  <file name=\"demo.css\">\n    .carousel-indicators {\n      top: auto;\n      bottom: 15px;\n    }\n  </file>\n</example>\n*/\n\n.directive('slide', function() {\n  return {\n    require: '^carousel',\n    restrict: 'EA',\n    transclude: true,\n    replace: true,\n    templateUrl: 'template/carousel/slide.html',\n    scope: {\n      active: '=?',\n      index: '=?'\n    },\n    link: function (scope, element, attrs, carouselCtrl) {\n      carouselCtrl.addSlide(scope, element);\n      //when the scope is destroyed then remove the slide from the current slides array\n      scope.$on('$destroy', function() {\n        carouselCtrl.removeSlide(scope);\n      });\n\n      scope.$watch('active', function(active) {\n        if (active) {\n          carouselCtrl.select(scope);\n        }\n      });\n    }\n  };\n})\n\n.animation('.item', [\n         '$animate',\nfunction ($animate) {\n  return {\n    beforeAddClass: function (element, className, done) {\n      // Due to transclusion, noTransition property is on parent's scope\n      if (className == 'active' && element.parent() &&\n          !element.parent().scope().noTransition) {\n        var stopped = false;\n        var direction = element.isolateScope().direction;\n        var directionClass = direction == 'next' ? 'left' : 'right';\n        element.addClass(direction);\n        $animate.addClass(element, directionClass).then(function () {\n          if (!stopped) {\n            element.removeClass(directionClass + ' ' + direction);\n          }\n          done();\n        });\n\n        return function () {\n          stopped = true;\n        };\n      }\n      done();\n    },\n    beforeRemoveClass: function (element, className, done) {\n      // Due to transclusion, noTransition property is on parent's scope\n      if (className == 'active' && element.parent() &&\n          !element.parent().scope().noTransition) {\n        var stopped = false;\n        var direction = element.isolateScope().direction;\n        var directionClass = direction == 'next' ? 'left' : 'right';\n        $animate.addClass(element, directionClass).then(function () {\n          if (!stopped) {\n            element.removeClass(directionClass);\n          }\n          done();\n        });\n        return function () {\n          stopped = true;\n        };\n      }\n      done();\n    }\n  };\n\n}])\n\n\n;\n\nangular.module('ui.bootstrap.dateparser', [])\n\n.service('dateParser', ['$locale', 'orderByFilter', function($locale, orderByFilter) {\n  // Pulled from https://github.com/mbostock/d3/blob/master/src/format/requote.js\n  var SPECIAL_CHARACTERS_REGEXP = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\n  this.parsers = {};\n\n  var formatCodeToRegex = {\n    'yyyy': {\n      regex: '\\\\d{4}',\n      apply: function(value) { this.year = +value; }\n    },\n    'yy': {\n      regex: '\\\\d{2}',\n      apply: function(value) { this.year = +value + 2000; }\n    },\n    'y': {\n      regex: '\\\\d{1,4}',\n      apply: function(value) { this.year = +value; }\n    },\n    'MMMM': {\n      regex: $locale.DATETIME_FORMATS.MONTH.join('|'),\n      apply: function(value) { this.month = $locale.DATETIME_FORMATS.MONTH.indexOf(value); }\n    },\n    'MMM': {\n      regex: $locale.DATETIME_FORMATS.SHORTMONTH.join('|'),\n      apply: function(value) { this.month = $locale.DATETIME_FORMATS.SHORTMONTH.indexOf(value); }\n    },\n    'MM': {\n      regex: '0[1-9]|1[0-2]',\n      apply: function(value) { this.month = value - 1; }\n    },\n    'M': {\n      regex: '[1-9]|1[0-2]',\n      apply: function(value) { this.month = value - 1; }\n    },\n    'dd': {\n      regex: '[0-2][0-9]{1}|3[0-1]{1}',\n      apply: function(value) { this.date = +value; }\n    },\n    'd': {\n      regex: '[1-2]?[0-9]{1}|3[0-1]{1}',\n      apply: function(value) { this.date = +value; }\n    },\n    'EEEE': {\n      regex: $locale.DATETIME_FORMATS.DAY.join('|')\n    },\n    'EEE': {\n      regex: $locale.DATETIME_FORMATS.SHORTDAY.join('|')\n    },\n    'HH': {\n      regex: '(?:0|1)[0-9]|2[0-3]',\n      apply: function(value) { this.hours = +value; }\n    },\n    'H': {\n      regex: '1?[0-9]|2[0-3]',\n      apply: function(value) { this.hours = +value; }\n    },\n    'mm': {\n      regex: '[0-5][0-9]',\n      apply: function(value) { this.minutes = +value; }\n    },\n    'm': {\n      regex: '[0-9]|[1-5][0-9]',\n      apply: function(value) { this.minutes = +value; }\n    },\n    'sss': {\n      regex: '[0-9][0-9][0-9]',\n      apply: function(value) { this.milliseconds = +value; }\n    },\n    'ss': {\n      regex: '[0-5][0-9]',\n      apply: function(value) { this.seconds = +value; }\n    },\n    's': {\n      regex: '[0-9]|[1-5][0-9]',\n      apply: function(value) { this.seconds = +value; }\n    }\n  };\n\n  function createParser(format) {\n    var map = [], regex = format.split('');\n\n    angular.forEach(formatCodeToRegex, function(data, code) {\n      var index = format.indexOf(code);\n\n      if (index > -1) {\n        format = format.split('');\n\n        regex[index] = '(' + data.regex + ')';\n        format[index] = '$'; // Custom symbol to define consumed part of format\n        for (var i = index + 1, n = index + code.length; i < n; i++) {\n          regex[i] = '';\n          format[i] = '$';\n        }\n        format = format.join('');\n\n        map.push({ index: index, apply: data.apply });\n      }\n    });\n\n    return {\n      regex: new RegExp('^' + regex.join('') + '$'),\n      map: orderByFilter(map, 'index')\n    };\n  }\n\n  this.parse = function(input, format, baseDate) {\n    if ( !angular.isString(input) || !format ) {\n      return input;\n    }\n\n    format = $locale.DATETIME_FORMATS[format] || format;\n    format = format.replace(SPECIAL_CHARACTERS_REGEXP, '\\\\$&');\n\n    if ( !this.parsers[format] ) {\n      this.parsers[format] = createParser(format);\n    }\n\n    var parser = this.parsers[format],\n        regex = parser.regex,\n        map = parser.map,\n        results = input.match(regex);\n\n    if ( results && results.length ) {\n      var fields, dt;\n      if (baseDate) {\n        fields = {\n          year: baseDate.getFullYear(),\n          month: baseDate.getMonth(),\n          date: baseDate.getDate(),\n          hours: baseDate.getHours(),\n          minutes: baseDate.getMinutes(),\n          seconds: baseDate.getSeconds(),\n          milliseconds: baseDate.getMilliseconds()\n        };\n      } else {\n        fields = { year: 1900, month: 0, date: 1, hours: 0, minutes: 0, seconds: 0, milliseconds: 0 };\n      }\n\n      for( var i = 1, n = results.length; i < n; i++ ) {\n        var mapper = map[i-1];\n        if ( mapper.apply ) {\n          mapper.apply.call(fields, results[i]);\n        }\n      }\n\n      if ( isValid(fields.year, fields.month, fields.date) ) {\n        dt = new Date(fields.year, fields.month, fields.date, fields.hours, fields.minutes, fields.seconds,\n          fields.milliseconds || 0);\n      }\n\n      return dt;\n    }\n  };\n\n  // Check if date is valid for specific month (and year for February).\n  // Month: 0 = Jan, 1 = Feb, etc\n  function isValid(year, month, date) {\n    if (date < 1) {\n      return false;\n    }\n\n    if ( month === 1 && date > 28) {\n        return date === 29 && ((year % 4 === 0 && year % 100 !== 0) || year % 400 === 0);\n    }\n\n    if ( month === 3 || month === 5 || month === 8 || month === 10) {\n        return date < 31;\n    }\n\n    return true;\n  }\n}]);\n\nangular.module('ui.bootstrap.position', [])\n\n/**\n * A set of utility methods that can be use to retrieve position of DOM elements.\n * It is meant to be used where we need to absolute-position DOM elements in\n * relation to other, existing elements (this is the case for tooltips, popovers,\n * typeahead suggestions etc.).\n */\n  .factory('$position', ['$document', '$window', function ($document, $window) {\n\n    function getStyle(el, cssprop) {\n      if (el.currentStyle) { //IE\n        return el.currentStyle[cssprop];\n      } else if ($window.getComputedStyle) {\n        return $window.getComputedStyle(el)[cssprop];\n      }\n      // finally try and get inline style\n      return el.style[cssprop];\n    }\n\n    /**\n     * Checks if a given element is statically positioned\n     * @param element - raw DOM element\n     */\n    function isStaticPositioned(element) {\n      return (getStyle(element, 'position') || 'static' ) === 'static';\n    }\n\n    /**\n     * returns the closest, non-statically positioned parentOffset of a given element\n     * @param element\n     */\n    var parentOffsetEl = function (element) {\n      var docDomEl = $document[0];\n      var offsetParent = element.offsetParent || docDomEl;\n      while (offsetParent && offsetParent !== docDomEl && isStaticPositioned(offsetParent) ) {\n        offsetParent = offsetParent.offsetParent;\n      }\n      return offsetParent || docDomEl;\n    };\n\n    return {\n      /**\n       * Provides read-only equivalent of jQuery's position function:\n       * http://api.jquery.com/position/\n       */\n      position: function (element) {\n        var elBCR = this.offset(element);\n        var offsetParentBCR = { top: 0, left: 0 };\n        var offsetParentEl = parentOffsetEl(element[0]);\n        if (offsetParentEl != $document[0]) {\n          offsetParentBCR = this.offset(angular.element(offsetParentEl));\n          offsetParentBCR.top += offsetParentEl.clientTop - offsetParentEl.scrollTop;\n          offsetParentBCR.left += offsetParentEl.clientLeft - offsetParentEl.scrollLeft;\n        }\n\n        var boundingClientRect = element[0].getBoundingClientRect();\n        return {\n          width: boundingClientRect.width || element.prop('offsetWidth'),\n          height: boundingClientRect.height || element.prop('offsetHeight'),\n          top: elBCR.top - offsetParentBCR.top,\n          left: elBCR.left - offsetParentBCR.left\n        };\n      },\n\n      /**\n       * Provides read-only equivalent of jQuery's offset function:\n       * http://api.jquery.com/offset/\n       */\n      offset: function (element) {\n        var boundingClientRect = element[0].getBoundingClientRect();\n        return {\n          width: boundingClientRect.width || element.prop('offsetWidth'),\n          height: boundingClientRect.height || element.prop('offsetHeight'),\n          top: boundingClientRect.top + ($window.pageYOffset || $document[0].documentElement.scrollTop),\n          left: boundingClientRect.left + ($window.pageXOffset || $document[0].documentElement.scrollLeft)\n        };\n      },\n\n      /**\n       * Provides coordinates for the targetEl in relation to hostEl\n       */\n      positionElements: function (hostEl, targetEl, positionStr, appendToBody) {\n\n        var positionStrParts = positionStr.split('-');\n        var pos0 = positionStrParts[0], pos1 = positionStrParts[1] || 'center';\n\n        var hostElPos,\n          targetElWidth,\n          targetElHeight,\n          targetElPos;\n\n        hostElPos = appendToBody ? this.offset(hostEl) : this.position(hostEl);\n\n        targetElWidth = targetEl.prop('offsetWidth');\n        targetElHeight = targetEl.prop('offsetHeight');\n\n        var shiftWidth = {\n          center: function () {\n            return hostElPos.left + hostElPos.width / 2 - targetElWidth / 2;\n          },\n          left: function () {\n            return hostElPos.left;\n          },\n          right: function () {\n            return hostElPos.left + hostElPos.width;\n          }\n        };\n\n        var shiftHeight = {\n          center: function () {\n            return hostElPos.top + hostElPos.height / 2 - targetElHeight / 2;\n          },\n          top: function () {\n            return hostElPos.top;\n          },\n          bottom: function () {\n            return hostElPos.top + hostElPos.height;\n          }\n        };\n\n        switch (pos0) {\n          case 'right':\n            targetElPos = {\n              top: shiftHeight[pos1](),\n              left: shiftWidth[pos0]()\n            };\n            break;\n          case 'left':\n            targetElPos = {\n              top: shiftHeight[pos1](),\n              left: hostElPos.left - targetElWidth\n            };\n            break;\n          case 'bottom':\n            targetElPos = {\n              top: shiftHeight[pos0](),\n              left: shiftWidth[pos1]()\n            };\n            break;\n          default:\n            targetElPos = {\n              top: hostElPos.top - targetElHeight,\n              left: shiftWidth[pos1]()\n            };\n            break;\n        }\n\n        return targetElPos;\n      }\n    };\n  }]);\n\nangular.module('ui.bootstrap.datepicker', ['ui.bootstrap.dateparser', 'ui.bootstrap.position'])\n\n.constant('datepickerConfig', {\n  formatDay: 'dd',\n  formatMonth: 'MMMM',\n  formatYear: 'yyyy',\n  formatDayHeader: 'EEE',\n  formatDayTitle: 'MMMM yyyy',\n  formatMonthTitle: 'yyyy',\n  datepickerMode: 'day',\n  minMode: 'day',\n  maxMode: 'year',\n  showWeeks: true,\n  startingDay: 0,\n  yearRange: 20,\n  minDate: null,\n  maxDate: null,\n  shortcutPropagation: false\n})\n\n.controller('DatepickerController', ['$scope', '$attrs', '$parse', '$interpolate', '$timeout', '$log', 'dateFilter', 'datepickerConfig', function($scope, $attrs, $parse, $interpolate, $timeout, $log, dateFilter, datepickerConfig) {\n  var self = this,\n      ngModelCtrl = { $setViewValue: angular.noop }; // nullModelCtrl;\n\n  // Modes chain\n  this.modes = ['day', 'month', 'year'];\n\n  // Configuration attributes\n  angular.forEach(['formatDay', 'formatMonth', 'formatYear', 'formatDayHeader', 'formatDayTitle', 'formatMonthTitle',\n                   'minMode', 'maxMode', 'showWeeks', 'startingDay', 'yearRange', 'shortcutPropagation'], function( key, index ) {\n    self[key] = angular.isDefined($attrs[key]) ? (index < 8 ? $interpolate($attrs[key])($scope.$parent) : $scope.$parent.$eval($attrs[key])) : datepickerConfig[key];\n  });\n\n  // Watchable date attributes\n  angular.forEach(['minDate', 'maxDate'], function( key ) {\n    if ( $attrs[key] ) {\n      $scope.$parent.$watch($parse($attrs[key]), function(value) {\n        self[key] = value ? new Date(value) : null;\n        self.refreshView();\n      });\n    } else {\n      self[key] = datepickerConfig[key] ? new Date(datepickerConfig[key]) : null;\n    }\n  });\n\n  $scope.datepickerMode = $scope.datepickerMode || datepickerConfig.datepickerMode;\n  $scope.maxMode = self.maxMode;\n  $scope.uniqueId = 'datepicker-' + $scope.$id + '-' + Math.floor(Math.random() * 10000);\n\n  if(angular.isDefined($attrs.initDate)) {\n    this.activeDate = $scope.$parent.$eval($attrs.initDate) || new Date();\n    $scope.$parent.$watch($attrs.initDate, function(initDate){\n      if(initDate && (ngModelCtrl.$isEmpty(ngModelCtrl.$modelValue) || ngModelCtrl.$invalid)){\n        self.activeDate = initDate;\n        self.refreshView();\n      }\n    });\n  } else {\n    this.activeDate =  new Date();\n  }\n\n  $scope.isActive = function(dateObject) {\n    if (self.compare(dateObject.date, self.activeDate) === 0) {\n      $scope.activeDateId = dateObject.uid;\n      return true;\n    }\n    return false;\n  };\n\n  this.init = function( ngModelCtrl_ ) {\n    ngModelCtrl = ngModelCtrl_;\n\n    ngModelCtrl.$render = function() {\n      self.render();\n    };\n  };\n\n  this.render = function() {\n    if ( ngModelCtrl.$viewValue ) {\n      var date = new Date( ngModelCtrl.$viewValue ),\n          isValid = !isNaN(date);\n\n      if ( isValid ) {\n        this.activeDate = date;\n      } else {\n        $log.error('Datepicker directive: \"ng-model\" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.');\n      }\n      ngModelCtrl.$setValidity('date', isValid);\n    }\n    this.refreshView();\n  };\n\n  this.refreshView = function() {\n    if ( this.element ) {\n      this._refreshView();\n\n      var date = ngModelCtrl.$viewValue ? new Date(ngModelCtrl.$viewValue) : null;\n      ngModelCtrl.$setValidity('date-disabled', !date || (this.element && !this.isDisabled(date)));\n    }\n  };\n\n  this.createDateObject = function(date, format) {\n    var model = ngModelCtrl.$viewValue ? new Date(ngModelCtrl.$viewValue) : null;\n    return {\n      date: date,\n      label: dateFilter(date, format),\n      selected: model && this.compare(date, model) === 0,\n      disabled: this.isDisabled(date),\n      current: this.compare(date, new Date()) === 0,\n      customClass: this.customClass(date)\n    };\n  };\n\n  this.isDisabled = function( date ) {\n    return ((this.minDate && this.compare(date, this.minDate) < 0) || (this.maxDate && this.compare(date, this.maxDate) > 0) || ($attrs.dateDisabled && $scope.dateDisabled({date: date, mode: $scope.datepickerMode})));\n  };\n\n    this.customClass = function( date ) {\n      return $scope.customClass({date: date, mode: $scope.datepickerMode});\n    };\n\n  // Split array into smaller arrays\n  this.split = function(arr, size) {\n    var arrays = [];\n    while (arr.length > 0) {\n      arrays.push(arr.splice(0, size));\n    }\n    return arrays;\n  };\n\n  $scope.select = function( date ) {\n    if ( $scope.datepickerMode === self.minMode ) {\n      var dt = ngModelCtrl.$viewValue ? new Date( ngModelCtrl.$viewValue ) : new Date(0, 0, 0, 0, 0, 0, 0);\n      dt.setFullYear( date.getFullYear(), date.getMonth(), date.getDate() );\n      ngModelCtrl.$setViewValue( dt );\n      ngModelCtrl.$render();\n    } else {\n      self.activeDate = date;\n      $scope.datepickerMode = self.modes[ self.modes.indexOf( $scope.datepickerMode ) - 1 ];\n    }\n  };\n\n  $scope.move = function( direction ) {\n    var year = self.activeDate.getFullYear() + direction * (self.step.years || 0),\n        month = self.activeDate.getMonth() + direction * (self.step.months || 0);\n    self.activeDate.setFullYear(year, month, 1);\n    self.refreshView();\n  };\n\n  $scope.toggleMode = function( direction ) {\n    direction = direction || 1;\n\n    if (($scope.datepickerMode === self.maxMode && direction === 1) || ($scope.datepickerMode === self.minMode && direction === -1)) {\n      return;\n    }\n\n    $scope.datepickerMode = self.modes[ self.modes.indexOf( $scope.datepickerMode ) + direction ];\n  };\n\n  // Key event mapper\n  $scope.keys = { 13:'enter', 32:'space', 33:'pageup', 34:'pagedown', 35:'end', 36:'home', 37:'left', 38:'up', 39:'right', 40:'down' };\n\n  var focusElement = function() {\n    $timeout(function() {\n      self.element[0].focus();\n    }, 0 , false);\n  };\n\n  // Listen for focus requests from popup directive\n  $scope.$on('datepicker.focus', focusElement);\n\n  $scope.keydown = function( evt ) {\n    var key = $scope.keys[evt.which];\n\n    if ( !key || evt.shiftKey || evt.altKey ) {\n      return;\n    }\n\n    evt.preventDefault();\n    if(!self.shortcutPropagation){\n        evt.stopPropagation();\n    }\n\n    if (key === 'enter' || key === 'space') {\n      if ( self.isDisabled(self.activeDate)) {\n        return; // do nothing\n      }\n      $scope.select(self.activeDate);\n      focusElement();\n    } else if (evt.ctrlKey && (key === 'up' || key === 'down')) {\n      $scope.toggleMode(key === 'up' ? 1 : -1);\n      focusElement();\n    } else {\n      self.handleKeyDown(key, evt);\n      self.refreshView();\n    }\n  };\n}])\n\n.directive( 'datepicker', function () {\n  return {\n    restrict: 'EA',\n    replace: true,\n    templateUrl: 'template/datepicker/datepicker.html',\n    scope: {\n      datepickerMode: '=?',\n      dateDisabled: '&',\n      customClass: '&',\n      shortcutPropagation: '&?'\n    },\n    require: ['datepicker', '?^ngModel'],\n    controller: 'DatepickerController',\n    link: function(scope, element, attrs, ctrls) {\n      var datepickerCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      if ( ngModelCtrl ) {\n        datepickerCtrl.init( ngModelCtrl );\n      }\n    }\n  };\n})\n\n.directive('daypicker', ['dateFilter', function (dateFilter) {\n  return {\n    restrict: 'EA',\n    replace: true,\n    templateUrl: 'template/datepicker/day.html',\n    require: '^datepicker',\n    link: function(scope, element, attrs, ctrl) {\n      scope.showWeeks = ctrl.showWeeks;\n\n      ctrl.step = { months: 1 };\n      ctrl.element = element;\n\n      var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n      function getDaysInMonth( year, month ) {\n        return ((month === 1) && (year % 4 === 0) && ((year % 100 !== 0) || (year % 400 === 0))) ? 29 : DAYS_IN_MONTH[month];\n      }\n\n      function getDates(startDate, n) {\n        var dates = new Array(n), current = new Date(startDate), i = 0;\n        current.setHours(12); // Prevent repeated dates because of timezone bug\n        while ( i < n ) {\n          dates[i++] = new Date(current);\n          current.setDate( current.getDate() + 1 );\n        }\n        return dates;\n      }\n\n      ctrl._refreshView = function() {\n        var year = ctrl.activeDate.getFullYear(),\n          month = ctrl.activeDate.getMonth(),\n          firstDayOfMonth = new Date(year, month, 1),\n          difference = ctrl.startingDay - firstDayOfMonth.getDay(),\n          numDisplayedFromPreviousMonth = (difference > 0) ? 7 - difference : - difference,\n          firstDate = new Date(firstDayOfMonth);\n\n        if ( numDisplayedFromPreviousMonth > 0 ) {\n          firstDate.setDate( - numDisplayedFromPreviousMonth + 1 );\n        }\n\n        // 42 is the number of days on a six-month calendar\n        var days = getDates(firstDate, 42);\n        for (var i = 0; i < 42; i ++) {\n          days[i] = angular.extend(ctrl.createDateObject(days[i], ctrl.formatDay), {\n            secondary: days[i].getMonth() !== month,\n            uid: scope.uniqueId + '-' + i\n          });\n        }\n\n        scope.labels = new Array(7);\n        for (var j = 0; j < 7; j++) {\n          scope.labels[j] = {\n            abbr: dateFilter(days[j].date, ctrl.formatDayHeader),\n            full: dateFilter(days[j].date, 'EEEE')\n          };\n        }\n\n        scope.title = dateFilter(ctrl.activeDate, ctrl.formatDayTitle);\n        scope.rows = ctrl.split(days, 7);\n\n        if ( scope.showWeeks ) {\n          scope.weekNumbers = [];\n          var thursdayIndex = (4 + 7 - ctrl.startingDay) % 7,\n              numWeeks = scope.rows.length;\n          for (var curWeek = 0; curWeek < numWeeks; curWeek++) {\n            scope.weekNumbers.push(\n              getISO8601WeekNumber( scope.rows[curWeek][thursdayIndex].date ));\n          }\n        }\n      };\n\n      ctrl.compare = function(date1, date2) {\n        return (new Date( date1.getFullYear(), date1.getMonth(), date1.getDate() ) - new Date( date2.getFullYear(), date2.getMonth(), date2.getDate() ) );\n      };\n\n      function getISO8601WeekNumber(date) {\n        var checkDate = new Date(date);\n        checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7)); // Thursday\n        var time = checkDate.getTime();\n        checkDate.setMonth(0); // Compare with Jan 1\n        checkDate.setDate(1);\n        return Math.floor(Math.round((time - checkDate) / 86400000) / 7) + 1;\n      }\n\n      ctrl.handleKeyDown = function( key, evt ) {\n        var date = ctrl.activeDate.getDate();\n\n        if (key === 'left') {\n          date = date - 1;   // up\n        } else if (key === 'up') {\n          date = date - 7;   // down\n        } else if (key === 'right') {\n          date = date + 1;   // down\n        } else if (key === 'down') {\n          date = date + 7;\n        } else if (key === 'pageup' || key === 'pagedown') {\n          var month = ctrl.activeDate.getMonth() + (key === 'pageup' ? - 1 : 1);\n          ctrl.activeDate.setMonth(month, 1);\n          date = Math.min(getDaysInMonth(ctrl.activeDate.getFullYear(), ctrl.activeDate.getMonth()), date);\n        } else if (key === 'home') {\n          date = 1;\n        } else if (key === 'end') {\n          date = getDaysInMonth(ctrl.activeDate.getFullYear(), ctrl.activeDate.getMonth());\n        }\n        ctrl.activeDate.setDate(date);\n      };\n\n      ctrl.refreshView();\n    }\n  };\n}])\n\n.directive('monthpicker', ['dateFilter', function (dateFilter) {\n  return {\n    restrict: 'EA',\n    replace: true,\n    templateUrl: 'template/datepicker/month.html',\n    require: '^datepicker',\n    link: function(scope, element, attrs, ctrl) {\n      ctrl.step = { years: 1 };\n      ctrl.element = element;\n\n      ctrl._refreshView = function() {\n        var months = new Array(12),\n            year = ctrl.activeDate.getFullYear();\n\n        for ( var i = 0; i < 12; i++ ) {\n          months[i] = angular.extend(ctrl.createDateObject(new Date(year, i, 1), ctrl.formatMonth), {\n            uid: scope.uniqueId + '-' + i\n          });\n        }\n\n        scope.title = dateFilter(ctrl.activeDate, ctrl.formatMonthTitle);\n        scope.rows = ctrl.split(months, 3);\n      };\n\n      ctrl.compare = function(date1, date2) {\n        return new Date( date1.getFullYear(), date1.getMonth() ) - new Date( date2.getFullYear(), date2.getMonth() );\n      };\n\n      ctrl.handleKeyDown = function( key, evt ) {\n        var date = ctrl.activeDate.getMonth();\n\n        if (key === 'left') {\n          date = date - 1;   // up\n        } else if (key === 'up') {\n          date = date - 3;   // down\n        } else if (key === 'right') {\n          date = date + 1;   // down\n        } else if (key === 'down') {\n          date = date + 3;\n        } else if (key === 'pageup' || key === 'pagedown') {\n          var year = ctrl.activeDate.getFullYear() + (key === 'pageup' ? - 1 : 1);\n          ctrl.activeDate.setFullYear(year);\n        } else if (key === 'home') {\n          date = 0;\n        } else if (key === 'end') {\n          date = 11;\n        }\n        ctrl.activeDate.setMonth(date);\n      };\n\n      ctrl.refreshView();\n    }\n  };\n}])\n\n.directive('yearpicker', ['dateFilter', function (dateFilter) {\n  return {\n    restrict: 'EA',\n    replace: true,\n    templateUrl: 'template/datepicker/year.html',\n    require: '^datepicker',\n    link: function(scope, element, attrs, ctrl) {\n      var range = ctrl.yearRange;\n\n      ctrl.step = { years: range };\n      ctrl.element = element;\n\n      function getStartingYear( year ) {\n        return parseInt((year - 1) / range, 10) * range + 1;\n      }\n\n      ctrl._refreshView = function() {\n        var years = new Array(range);\n\n        for ( var i = 0, start = getStartingYear(ctrl.activeDate.getFullYear()); i < range; i++ ) {\n          years[i] = angular.extend(ctrl.createDateObject(new Date(start + i, 0, 1), ctrl.formatYear), {\n            uid: scope.uniqueId + '-' + i\n          });\n        }\n\n        scope.title = [years[0].label, years[range - 1].label].join(' - ');\n        scope.rows = ctrl.split(years, 5);\n      };\n\n      ctrl.compare = function(date1, date2) {\n        return date1.getFullYear() - date2.getFullYear();\n      };\n\n      ctrl.handleKeyDown = function( key, evt ) {\n        var date = ctrl.activeDate.getFullYear();\n\n        if (key === 'left') {\n          date = date - 1;   // up\n        } else if (key === 'up') {\n          date = date - 5;   // down\n        } else if (key === 'right') {\n          date = date + 1;   // down\n        } else if (key === 'down') {\n          date = date + 5;\n        } else if (key === 'pageup' || key === 'pagedown') {\n          date += (key === 'pageup' ? - 1 : 1) * ctrl.step.years;\n        } else if (key === 'home') {\n          date = getStartingYear( ctrl.activeDate.getFullYear() );\n        } else if (key === 'end') {\n          date = getStartingYear( ctrl.activeDate.getFullYear() ) + range - 1;\n        }\n        ctrl.activeDate.setFullYear(date);\n      };\n\n      ctrl.refreshView();\n    }\n  };\n}])\n\n.constant('datepickerPopupConfig', {\n  datepickerPopup: 'yyyy-MM-dd',\n  html5Types: {\n    date: 'yyyy-MM-dd',\n    'datetime-local': 'yyyy-MM-ddTHH:mm:ss.sss',\n    'month': 'yyyy-MM'\n  },\n  currentText: 'Today',\n  clearText: 'Clear',\n  closeText: 'Done',\n  closeOnDateSelection: true,\n  appendToBody: false,\n  showButtonBar: true\n})\n\n.directive('datepickerPopup', ['$compile', '$parse', '$document', '$position', 'dateFilter', 'dateParser', 'datepickerPopupConfig',\nfunction ($compile, $parse, $document, $position, dateFilter, dateParser, datepickerPopupConfig) {\n  return {\n    restrict: 'EA',\n    require: 'ngModel',\n    scope: {\n      isOpen: '=?',\n      currentText: '@',\n      clearText: '@',\n      closeText: '@',\n      dateDisabled: '&',\n      customClass: '&'\n    },\n    link: function(scope, element, attrs, ngModel) {\n      var dateFormat,\n          closeOnDateSelection = angular.isDefined(attrs.closeOnDateSelection) ? scope.$parent.$eval(attrs.closeOnDateSelection) : datepickerPopupConfig.closeOnDateSelection,\n          appendToBody = angular.isDefined(attrs.datepickerAppendToBody) ? scope.$parent.$eval(attrs.datepickerAppendToBody) : datepickerPopupConfig.appendToBody;\n\n      scope.showButtonBar = angular.isDefined(attrs.showButtonBar) ? scope.$parent.$eval(attrs.showButtonBar) : datepickerPopupConfig.showButtonBar;\n\n      scope.getText = function( key ) {\n        return scope[key + 'Text'] || datepickerPopupConfig[key + 'Text'];\n      };\n\n      var isHtml5DateInput = false;\n      if (datepickerPopupConfig.html5Types[attrs.type]) {\n        dateFormat = datepickerPopupConfig.html5Types[attrs.type];\n        isHtml5DateInput = true;\n      } else {\n        dateFormat = attrs.datepickerPopup || datepickerPopupConfig.datepickerPopup;\n        attrs.$observe('datepickerPopup', function(value, oldValue) {\n            var newDateFormat = value || datepickerPopupConfig.datepickerPopup;\n            // Invalidate the $modelValue to ensure that formatters re-run\n            // FIXME: Refactor when PR is merged: https://github.com/angular/angular.js/pull/10764\n            if (newDateFormat !== dateFormat) {\n              dateFormat = newDateFormat;\n              ngModel.$modelValue = null;\n\n              if (!dateFormat) {\n                throw new Error('datepickerPopup must have a date format specified.');\n              }\n            }\n        });\n      }\n\n      if (!dateFormat) {\n        throw new Error('datepickerPopup must have a date format specified.');\n      }\n\n      if (isHtml5DateInput && attrs.datepickerPopup) {\n        throw new Error('HTML5 date input types do not support custom formats.');\n      }\n\n      // popup element used to display calendar\n      var popupEl = angular.element('<div datepicker-popup-wrap><div datepicker></div></div>');\n      popupEl.attr({\n        'ng-model': 'date',\n        'ng-change': 'dateSelection()'\n      });\n\n      function cameltoDash( string ){\n        return string.replace(/([A-Z])/g, function($1) { return '-' + $1.toLowerCase(); });\n      }\n\n      // datepicker element\n      var datepickerEl = angular.element(popupEl.children()[0]);\n      if (isHtml5DateInput) {\n        if (attrs.type == 'month') {\n          datepickerEl.attr('datepicker-mode', '\"month\"');\n          datepickerEl.attr('min-mode', 'month');\n        }\n      }\n\n      if ( attrs.datepickerOptions ) {\n        var options = scope.$parent.$eval(attrs.datepickerOptions);\n        if(options.initDate) {\n          scope.initDate = options.initDate;\n          datepickerEl.attr( 'init-date', 'initDate' );\n          delete options.initDate;\n        }\n        angular.forEach(options, function( value, option ) {\n          datepickerEl.attr( cameltoDash(option), value );\n        });\n      }\n\n      scope.watchData = {};\n      angular.forEach(['minDate', 'maxDate', 'datepickerMode', 'initDate', 'shortcutPropagation'], function( key ) {\n        if ( attrs[key] ) {\n          var getAttribute = $parse(attrs[key]);\n          scope.$parent.$watch(getAttribute, function(value){\n            scope.watchData[key] = value;\n          });\n          datepickerEl.attr(cameltoDash(key), 'watchData.' + key);\n\n          // Propagate changes from datepicker to outside\n          if ( key === 'datepickerMode' ) {\n            var setAttribute = getAttribute.assign;\n            scope.$watch('watchData.' + key, function(value, oldvalue) {\n              if ( value !== oldvalue ) {\n                setAttribute(scope.$parent, value);\n              }\n            });\n          }\n        }\n      });\n      if (attrs.dateDisabled) {\n        datepickerEl.attr('date-disabled', 'dateDisabled({ date: date, mode: mode })');\n      }\n\n      if (attrs.showWeeks) {\n        datepickerEl.attr('show-weeks', attrs.showWeeks);\n      }\n\n      if (attrs.customClass){\n        datepickerEl.attr('custom-class', 'customClass({ date: date, mode: mode })');\n      }\n\n      function parseDate(viewValue) {\n        if (angular.isNumber(viewValue)) {\n          // presumably timestamp to date object\n          viewValue = new Date(viewValue);\n        }\n\n        if (!viewValue) {\n          return null;\n        } else if (angular.isDate(viewValue) && !isNaN(viewValue)) {\n          return viewValue;\n        } else if (angular.isString(viewValue)) {\n          var date = dateParser.parse(viewValue, dateFormat, scope.date) || new Date(viewValue);\n          if (isNaN(date)) {\n            return undefined;\n          } else {\n            return date;\n          }\n        } else {\n          return undefined;\n        }\n      }\n\n      function validator(modelValue, viewValue) {\n        var value = modelValue || viewValue;\n        if (angular.isNumber(value)) {\n          value = new Date(value);\n        }\n        if (!value) {\n          return true;\n        } else if (angular.isDate(value) && !isNaN(value)) {\n          return true;\n        } else if (angular.isString(value)) {\n          var date = dateParser.parse(value, dateFormat) || new Date(value);\n          return !isNaN(date);\n        } else {\n          return false;\n        }\n      }\n\n      if (!isHtml5DateInput) {\n        // Internal API to maintain the correct ng-invalid-[key] class\n        ngModel.$$parserName = 'date';\n        ngModel.$validators.date = validator;\n        ngModel.$parsers.unshift(parseDate);\n        ngModel.$formatters.push(function (value) {\n          scope.date = value;\n          return ngModel.$isEmpty(value) ? value : dateFilter(value, dateFormat);\n        });\n      }\n      else {\n        ngModel.$formatters.push(function (value) {\n          scope.date = value;\n          return value;\n        });\n      }\n\n      // Inner change\n      scope.dateSelection = function(dt) {\n        if (angular.isDefined(dt)) {\n          scope.date = dt;\n        }\n        var date = scope.date ? dateFilter(scope.date, dateFormat) : '';\n        element.val(date);\n        ngModel.$setViewValue(date);\n\n        if ( closeOnDateSelection ) {\n          scope.isOpen = false;\n          element[0].focus();\n        }\n      };\n\n      // Detect changes in the view from the text box\n      ngModel.$viewChangeListeners.push(function () {\n        scope.date = dateParser.parse(ngModel.$viewValue, dateFormat, scope.date) || new Date(ngModel.$viewValue);\n      });\n\n      var documentClickBind = function(event) {\n        if (scope.isOpen && event.target !== element[0]) {\n          scope.$apply(function() {\n            scope.isOpen = false;\n          });\n        }\n      };\n\n      var keydown = function(evt, noApply) {\n        scope.keydown(evt);\n      };\n      element.bind('keydown', keydown);\n\n      scope.keydown = function(evt) {\n        if (evt.which === 27) {\n          evt.preventDefault();\n          if (scope.isOpen) {\n            evt.stopPropagation();\n          }\n          scope.close();\n        } else if (evt.which === 40 && !scope.isOpen) {\n          scope.isOpen = true;\n        }\n      };\n\n      scope.$watch('isOpen', function(value) {\n        if (value) {\n          scope.$broadcast('datepicker.focus');\n          scope.position = appendToBody ? $position.offset(element) : $position.position(element);\n          scope.position.top = scope.position.top + element.prop('offsetHeight');\n\n          $document.bind('click', documentClickBind);\n        } else {\n          $document.unbind('click', documentClickBind);\n        }\n      });\n\n      scope.select = function( date ) {\n        if (date === 'today') {\n          var today = new Date();\n          if (angular.isDate(scope.date)) {\n            date = new Date(scope.date);\n            date.setFullYear(today.getFullYear(), today.getMonth(), today.getDate());\n          } else {\n            date = new Date(today.setHours(0, 0, 0, 0));\n          }\n        }\n        scope.dateSelection( date );\n      };\n\n      scope.close = function() {\n        scope.isOpen = false;\n        element[0].focus();\n      };\n\n      var $popup = $compile(popupEl)(scope);\n      // Prevent jQuery cache memory leak (template is now redundant after linking)\n      popupEl.remove();\n\n      if ( appendToBody ) {\n        $document.find('body').append($popup);\n      } else {\n        element.after($popup);\n      }\n\n      scope.$on('$destroy', function() {\n        $popup.remove();\n        element.unbind('keydown', keydown);\n        $document.unbind('click', documentClickBind);\n      });\n    }\n  };\n}])\n\n.directive('datepickerPopupWrap', function() {\n  return {\n    restrict:'EA',\n    replace: true,\n    transclude: true,\n    templateUrl: 'template/datepicker/popup.html',\n    link:function (scope, element, attrs) {\n      element.bind('click', function(event) {\n        event.preventDefault();\n        event.stopPropagation();\n      });\n    }\n  };\n});\n\nangular.module('ui.bootstrap.dropdown', ['ui.bootstrap.position'])\n\n.constant('dropdownConfig', {\n  openClass: 'open'\n})\n\n.service('dropdownService', ['$document', '$rootScope', function($document, $rootScope) {\n  var openScope = null;\n\n  this.open = function( dropdownScope ) {\n    if ( !openScope ) {\n      $document.bind('click', closeDropdown);\n      $document.bind('keydown', escapeKeyBind);\n    }\n\n    if ( openScope && openScope !== dropdownScope ) {\n        openScope.isOpen = false;\n    }\n\n    openScope = dropdownScope;\n  };\n\n  this.close = function( dropdownScope ) {\n    if ( openScope === dropdownScope ) {\n      openScope = null;\n      $document.unbind('click', closeDropdown);\n      $document.unbind('keydown', escapeKeyBind);\n    }\n  };\n\n  var closeDropdown = function( evt ) {\n    // This method may still be called during the same mouse event that\n    // unbound this event handler. So check openScope before proceeding.\n    if (!openScope) { return; }\n\n    if( evt && openScope.getAutoClose() === 'disabled' )  { return ; }\n\n    var toggleElement = openScope.getToggleElement();\n    if ( evt && toggleElement && toggleElement[0].contains(evt.target) ) {\n        return;\n    }\n\n    var $element = openScope.getElement();\n    if( evt && openScope.getAutoClose() === 'outsideClick' && $element && $element[0].contains(evt.target) ) {\n      return;\n    }\n\n    openScope.isOpen = false;\n\n    if (!$rootScope.$$phase) {\n      openScope.$apply();\n    }\n  };\n\n  var escapeKeyBind = function( evt ) {\n    if ( evt.which === 27 ) {\n      openScope.focusToggleElement();\n      closeDropdown();\n    }\n  };\n}])\n\n.controller('DropdownController', ['$scope', '$attrs', '$parse', 'dropdownConfig', 'dropdownService', '$animate', '$position', '$document', function($scope, $attrs, $parse, dropdownConfig, dropdownService, $animate, $position, $document) {\n  var self = this,\n      scope = $scope.$new(), // create a child scope so we are not polluting original one\n      openClass = dropdownConfig.openClass,\n      getIsOpen,\n      setIsOpen = angular.noop,\n      toggleInvoker = $attrs.onToggle ? $parse($attrs.onToggle) : angular.noop,\n      appendToBody = false;\n\n  this.init = function( element ) {\n    self.$element = element;\n\n    if ( $attrs.isOpen ) {\n      getIsOpen = $parse($attrs.isOpen);\n      setIsOpen = getIsOpen.assign;\n\n      $scope.$watch(getIsOpen, function(value) {\n        scope.isOpen = !!value;\n      });\n    }\n\n    appendToBody = angular.isDefined($attrs.dropdownAppendToBody);\n\n    if ( appendToBody && self.dropdownMenu ) {\n      $document.find('body').append( self.dropdownMenu );\n      element.on('$destroy', function handleDestroyEvent() {\n        self.dropdownMenu.remove();\n      });\n    }\n  };\n\n  this.toggle = function( open ) {\n    return scope.isOpen = arguments.length ? !!open : !scope.isOpen;\n  };\n\n  // Allow other directives to watch status\n  this.isOpen = function() {\n    return scope.isOpen;\n  };\n\n  scope.getToggleElement = function() {\n    return self.toggleElement;\n  };\n\n  scope.getAutoClose = function() {\n    return $attrs.autoClose || 'always'; //or 'outsideClick' or 'disabled'\n  };\n\n  scope.getElement = function() {\n    return self.$element;\n  };\n\n  scope.focusToggleElement = function() {\n    if ( self.toggleElement ) {\n      self.toggleElement[0].focus();\n    }\n  };\n\n  scope.$watch('isOpen', function( isOpen, wasOpen ) {\n    if ( appendToBody && self.dropdownMenu ) {\n      var pos = $position.positionElements(self.$element, self.dropdownMenu, 'bottom-left', true);\n      self.dropdownMenu.css({\n        top: pos.top + 'px',\n        left: pos.left + 'px',\n        display: isOpen ? 'block' : 'none'\n      });\n    }\n\n    $animate[isOpen ? 'addClass' : 'removeClass'](self.$element, openClass);\n\n    if ( isOpen ) {\n      scope.focusToggleElement();\n      dropdownService.open( scope );\n    } else {\n      dropdownService.close( scope );\n    }\n\n    setIsOpen($scope, isOpen);\n    if (angular.isDefined(isOpen) && isOpen !== wasOpen) {\n      toggleInvoker($scope, { open: !!isOpen });\n    }\n  });\n\n  $scope.$on('$locationChangeSuccess', function() {\n    scope.isOpen = false;\n  });\n\n  $scope.$on('$destroy', function() {\n    scope.$destroy();\n  });\n}])\n\n.directive('dropdown', function() {\n  return {\n    controller: 'DropdownController',\n    link: function(scope, element, attrs, dropdownCtrl) {\n      dropdownCtrl.init( element );\n    }\n  };\n})\n\n.directive('dropdownMenu', function() {\n  return {\n    restrict: 'AC',\n    require: '?^dropdown',\n    link: function(scope, element, attrs, dropdownCtrl) {\n      if ( !dropdownCtrl ) {\n        return;\n      }\n      dropdownCtrl.dropdownMenu = element;\n    }\n  };\n})\n\n.directive('dropdownToggle', function() {\n  return {\n    require: '?^dropdown',\n    link: function(scope, element, attrs, dropdownCtrl) {\n      if ( !dropdownCtrl ) {\n        return;\n      }\n\n      dropdownCtrl.toggleElement = element;\n\n      var toggleDropdown = function(event) {\n        event.preventDefault();\n\n        if ( !element.hasClass('disabled') && !attrs.disabled ) {\n          scope.$apply(function() {\n            dropdownCtrl.toggle();\n          });\n        }\n      };\n\n      element.bind('click', toggleDropdown);\n\n      // WAI-ARIA\n      element.attr({ 'aria-haspopup': true, 'aria-expanded': false });\n      scope.$watch(dropdownCtrl.isOpen, function( isOpen ) {\n        element.attr('aria-expanded', !!isOpen);\n      });\n\n      scope.$on('$destroy', function() {\n        element.unbind('click', toggleDropdown);\n      });\n    }\n  };\n});\n\nangular.module('ui.bootstrap.modal', [])\n\n/**\n * A helper, internal data structure that acts as a map but also allows getting / removing\n * elements in the LIFO order\n */\n  .factory('$$stackedMap', function () {\n    return {\n      createNew: function () {\n        var stack = [];\n\n        return {\n          add: function (key, value) {\n            stack.push({\n              key: key,\n              value: value\n            });\n          },\n          get: function (key) {\n            for (var i = 0; i < stack.length; i++) {\n              if (key == stack[i].key) {\n                return stack[i];\n              }\n            }\n          },\n          keys: function() {\n            var keys = [];\n            for (var i = 0; i < stack.length; i++) {\n              keys.push(stack[i].key);\n            }\n            return keys;\n          },\n          top: function () {\n            return stack[stack.length - 1];\n          },\n          remove: function (key) {\n            var idx = -1;\n            for (var i = 0; i < stack.length; i++) {\n              if (key == stack[i].key) {\n                idx = i;\n                break;\n              }\n            }\n            return stack.splice(idx, 1)[0];\n          },\n          removeTop: function () {\n            return stack.splice(stack.length - 1, 1)[0];\n          },\n          length: function () {\n            return stack.length;\n          }\n        };\n      }\n    };\n  })\n\n/**\n * A helper directive for the $modal service. It creates a backdrop element.\n */\n  .directive('modalBackdrop', ['$timeout', function ($timeout) {\n    return {\n      restrict: 'EA',\n      replace: true,\n      templateUrl: 'template/modal/backdrop.html',\n      compile: function (tElement, tAttrs) {\n        tElement.addClass(tAttrs.backdropClass);\n        return linkFn;\n      }\n    };\n\n    function linkFn(scope, element, attrs) {\n      scope.animate = false;\n\n      //trigger CSS transitions\n      $timeout(function () {\n        scope.animate = true;\n      });\n    }\n  }])\n\n  .directive('modalWindow', ['$modalStack', '$q', function ($modalStack, $q) {\n    return {\n      restrict: 'EA',\n      scope: {\n        index: '@',\n        animate: '='\n      },\n      replace: true,\n      transclude: true,\n      templateUrl: function(tElement, tAttrs) {\n        return tAttrs.templateUrl || 'template/modal/window.html';\n      },\n      link: function (scope, element, attrs) {\n        element.addClass(attrs.windowClass || '');\n        scope.size = attrs.size;\n\n        scope.close = function (evt) {\n          var modal = $modalStack.getTop();\n          if (modal && modal.value.backdrop && modal.value.backdrop != 'static' && (evt.target === evt.currentTarget)) {\n            evt.preventDefault();\n            evt.stopPropagation();\n            $modalStack.dismiss(modal.key, 'backdrop click');\n          }\n        };\n\n        // This property is only added to the scope for the purpose of detecting when this directive is rendered.\n        // We can detect that by using this property in the template associated with this directive and then use\n        // {@link Attribute#$observe} on it. For more details please see {@link TableColumnResize}.\n        scope.$isRendered = true;\n\n        // Deferred object that will be resolved when this modal is render.\n        var modalRenderDeferObj = $q.defer();\n        // Observe function will be called on next digest cycle after compilation, ensuring that the DOM is ready.\n        // In order to use this way of finding whether DOM is ready, we need to observe a scope property used in modal's template.\n        attrs.$observe('modalRender', function (value) {\n          if (value == 'true') {\n            modalRenderDeferObj.resolve();\n          }\n        });\n\n        modalRenderDeferObj.promise.then(function () {\n          // trigger CSS transitions\n          scope.animate = true;\n\n          var inputsWithAutofocus = element[0].querySelectorAll('[autofocus]');\n          /**\n           * Auto-focusing of a freshly-opened modal element causes any child elements\n           * with the autofocus attribute to lose focus. This is an issue on touch\n           * based devices which will show and then hide the onscreen keyboard.\n           * Attempts to refocus the autofocus element via JavaScript will not reopen\n           * the onscreen keyboard. Fixed by updated the focusing logic to only autofocus\n           * the modal element if the modal does not contain an autofocus element.\n           */\n          if (inputsWithAutofocus.length) {\n            inputsWithAutofocus[0].focus();\n          } else {\n            element[0].focus();\n          }\n\n          // Notify {@link $modalStack} that modal is rendered.\n          var modal = $modalStack.getTop();\n          if (modal) {\n            $modalStack.modalRendered(modal.key);\n          }\n        });\n      }\n    };\n  }])\n\n  .directive('modalAnimationClass', [\n    function () {\n      return {\n        compile: function (tElement, tAttrs) {\n          if (tAttrs.modalAnimation) {\n            tElement.addClass(tAttrs.modalAnimationClass);\n          }\n        }\n      };\n    }])\n\n  .directive('modalTransclude', function () {\n    return {\n      link: function($scope, $element, $attrs, controller, $transclude) {\n        $transclude($scope.$parent, function(clone) {\n          $element.empty();\n          $element.append(clone);\n        });\n      }\n    };\n  })\n\n  .factory('$modalStack', ['$animate', '$timeout', '$document', '$compile', '$rootScope', '$$stackedMap',\n    function ($animate, $timeout, $document, $compile, $rootScope, $$stackedMap) {\n\n      var OPENED_MODAL_CLASS = 'modal-open';\n\n      var backdropDomEl, backdropScope;\n      var openedWindows = $$stackedMap.createNew();\n      var $modalStack = {};\n\n      function backdropIndex() {\n        var topBackdropIndex = -1;\n        var opened = openedWindows.keys();\n        for (var i = 0; i < opened.length; i++) {\n          if (openedWindows.get(opened[i]).value.backdrop) {\n            topBackdropIndex = i;\n          }\n        }\n        return topBackdropIndex;\n      }\n\n      $rootScope.$watch(backdropIndex, function(newBackdropIndex){\n        if (backdropScope) {\n          backdropScope.index = newBackdropIndex;\n        }\n      });\n\n      function removeModalWindow(modalInstance) {\n\n        var body = $document.find('body').eq(0);\n        var modalWindow = openedWindows.get(modalInstance).value;\n\n        //clean up the stack\n        openedWindows.remove(modalInstance);\n\n        //remove window DOM element\n        removeAfterAnimate(modalWindow.modalDomEl, modalWindow.modalScope, function() {\n          body.toggleClass(OPENED_MODAL_CLASS, openedWindows.length() > 0);\n          checkRemoveBackdrop();\n        });\n      }\n\n      function checkRemoveBackdrop() {\n          //remove backdrop if no longer needed\n          if (backdropDomEl && backdropIndex() == -1) {\n            var backdropScopeRef = backdropScope;\n            removeAfterAnimate(backdropDomEl, backdropScope, function () {\n              backdropScopeRef = null;\n            });\n            backdropDomEl = undefined;\n            backdropScope = undefined;\n          }\n      }\n\n      function removeAfterAnimate(domEl, scope, done) {\n        // Closing animation\n        scope.animate = false;\n\n        if (domEl.attr('modal-animation') && $animate.enabled()) {\n          // transition out\n          domEl.one('$animate:close', function closeFn() {\n            $rootScope.$evalAsync(afterAnimating);\n          });\n        } else {\n          // Ensure this call is async\n          $timeout(afterAnimating);\n        }\n\n        function afterAnimating() {\n          if (afterAnimating.done) {\n            return;\n          }\n          afterAnimating.done = true;\n\n          domEl.remove();\n          scope.$destroy();\n          if (done) {\n            done();\n          }\n        }\n      }\n\n      $document.bind('keydown', function (evt) {\n        var modal;\n\n        if (evt.which === 27) {\n          modal = openedWindows.top();\n          if (modal && modal.value.keyboard) {\n            evt.preventDefault();\n            $rootScope.$apply(function () {\n              $modalStack.dismiss(modal.key, 'escape key press');\n            });\n          }\n        }\n      });\n\n      $modalStack.open = function (modalInstance, modal) {\n\n        var modalOpener = $document[0].activeElement;\n\n        openedWindows.add(modalInstance, {\n          deferred: modal.deferred,\n          renderDeferred: modal.renderDeferred,\n          modalScope: modal.scope,\n          backdrop: modal.backdrop,\n          keyboard: modal.keyboard\n        });\n\n        var body = $document.find('body').eq(0),\n            currBackdropIndex = backdropIndex();\n\n        if (currBackdropIndex >= 0 && !backdropDomEl) {\n          backdropScope = $rootScope.$new(true);\n          backdropScope.index = currBackdropIndex;\n          var angularBackgroundDomEl = angular.element('<div modal-backdrop=\"modal-backdrop\"></div>');\n          angularBackgroundDomEl.attr('backdrop-class', modal.backdropClass);\n          if (modal.animation) {\n            angularBackgroundDomEl.attr('modal-animation', 'true');\n          }\n          backdropDomEl = $compile(angularBackgroundDomEl)(backdropScope);\n          body.append(backdropDomEl);\n        }\n\n        var angularDomEl = angular.element('<div modal-window=\"modal-window\"></div>');\n        angularDomEl.attr({\n          'template-url': modal.windowTemplateUrl,\n          'window-class': modal.windowClass,\n          'size': modal.size,\n          'index': openedWindows.length() - 1,\n          'animate': 'animate'\n        }).html(modal.content);\n        if (modal.animation) {\n          angularDomEl.attr('modal-animation', 'true');\n        }\n\n        var modalDomEl = $compile(angularDomEl)(modal.scope);\n        openedWindows.top().value.modalDomEl = modalDomEl;\n        openedWindows.top().value.modalOpener = modalOpener;\n        body.append(modalDomEl);\n        body.addClass(OPENED_MODAL_CLASS);\n      };\n\n      function broadcastClosing(modalWindow, resultOrReason, closing) {\n          return !modalWindow.value.modalScope.$broadcast('modal.closing', resultOrReason, closing).defaultPrevented;\n      }\n\n      $modalStack.close = function (modalInstance, result) {\n        var modalWindow = openedWindows.get(modalInstance);\n        if (modalWindow && broadcastClosing(modalWindow, result, true)) {\n          modalWindow.value.deferred.resolve(result);\n          removeModalWindow(modalInstance);\n          modalWindow.value.modalOpener.focus();\n          return true;\n        }\n        return !modalWindow;\n      };\n\n      $modalStack.dismiss = function (modalInstance, reason) {\n        var modalWindow = openedWindows.get(modalInstance);\n        if (modalWindow && broadcastClosing(modalWindow, reason, false)) {\n          modalWindow.value.deferred.reject(reason);\n          removeModalWindow(modalInstance);\n          modalWindow.value.modalOpener.focus();\n          return true;\n        }\n        return !modalWindow;\n      };\n\n      $modalStack.dismissAll = function (reason) {\n        var topModal = this.getTop();\n        while (topModal && this.dismiss(topModal.key, reason)) {\n          topModal = this.getTop();\n        }\n      };\n\n      $modalStack.getTop = function () {\n        return openedWindows.top();\n      };\n\n      $modalStack.modalRendered = function (modalInstance) {\n        var modalWindow = openedWindows.get(modalInstance);\n        if (modalWindow) {\n          modalWindow.value.renderDeferred.resolve();\n        }\n      };\n\n      return $modalStack;\n    }])\n\n  .provider('$modal', function () {\n\n    var $modalProvider = {\n      options: {\n        animation: true,\n        backdrop: true, //can also be false or 'static'\n        keyboard: true\n      },\n      $get: ['$injector', '$rootScope', '$q', '$templateRequest', '$controller', '$modalStack',\n        function ($injector, $rootScope, $q, $templateRequest, $controller, $modalStack) {\n\n          var $modal = {};\n\n          function getTemplatePromise(options) {\n            return options.template ? $q.when(options.template) :\n              $templateRequest(angular.isFunction(options.templateUrl) ? (options.templateUrl)() : options.templateUrl);\n          }\n\n          function getResolvePromises(resolves) {\n            var promisesArr = [];\n            angular.forEach(resolves, function (value) {\n              if (angular.isFunction(value) || angular.isArray(value)) {\n                promisesArr.push($q.when($injector.invoke(value)));\n              }\n            });\n            return promisesArr;\n          }\n\n          $modal.open = function (modalOptions) {\n\n            var modalResultDeferred = $q.defer();\n            var modalOpenedDeferred = $q.defer();\n            var modalRenderDeferred = $q.defer();\n\n            //prepare an instance of a modal to be injected into controllers and returned to a caller\n            var modalInstance = {\n              result: modalResultDeferred.promise,\n              opened: modalOpenedDeferred.promise,\n              rendered: modalRenderDeferred.promise,\n              close: function (result) {\n                return $modalStack.close(modalInstance, result);\n              },\n              dismiss: function (reason) {\n                return $modalStack.dismiss(modalInstance, reason);\n              }\n            };\n\n            //merge and clean up options\n            modalOptions = angular.extend({}, $modalProvider.options, modalOptions);\n            modalOptions.resolve = modalOptions.resolve || {};\n\n            //verify options\n            if (!modalOptions.template && !modalOptions.templateUrl) {\n              throw new Error('One of template or templateUrl options is required.');\n            }\n\n            var templateAndResolvePromise =\n              $q.all([getTemplatePromise(modalOptions)].concat(getResolvePromises(modalOptions.resolve)));\n\n\n            templateAndResolvePromise.then(function resolveSuccess(tplAndVars) {\n\n              var modalScope = (modalOptions.scope || $rootScope).$new();\n              modalScope.$close = modalInstance.close;\n              modalScope.$dismiss = modalInstance.dismiss;\n\n              var ctrlInstance, ctrlLocals = {};\n              var resolveIter = 1;\n\n              //controllers\n              if (modalOptions.controller) {\n                ctrlLocals.$scope = modalScope;\n                ctrlLocals.$modalInstance = modalInstance;\n                angular.forEach(modalOptions.resolve, function (value, key) {\n                  ctrlLocals[key] = tplAndVars[resolveIter++];\n                });\n\n                ctrlInstance = $controller(modalOptions.controller, ctrlLocals);\n                if (modalOptions.controllerAs) {\n                  modalScope[modalOptions.controllerAs] = ctrlInstance;\n                }\n              }\n\n              $modalStack.open(modalInstance, {\n                scope: modalScope,\n                deferred: modalResultDeferred,\n                renderDeferred: modalRenderDeferred,\n                content: tplAndVars[0],\n                animation: modalOptions.animation,\n                backdrop: modalOptions.backdrop,\n                keyboard: modalOptions.keyboard,\n                backdropClass: modalOptions.backdropClass,\n                windowClass: modalOptions.windowClass,\n                windowTemplateUrl: modalOptions.windowTemplateUrl,\n                size: modalOptions.size\n              });\n\n            }, function resolveError(reason) {\n              modalResultDeferred.reject(reason);\n            });\n\n            templateAndResolvePromise.then(function () {\n              modalOpenedDeferred.resolve(true);\n            }, function (reason) {\n              modalOpenedDeferred.reject(reason);\n            });\n\n            return modalInstance;\n          };\n\n          return $modal;\n        }]\n    };\n\n    return $modalProvider;\n  });\n\nangular.module('ui.bootstrap.pagination', [])\n\n.controller('PaginationController', ['$scope', '$attrs', '$parse', function ($scope, $attrs, $parse) {\n  var self = this,\n      ngModelCtrl = { $setViewValue: angular.noop }, // nullModelCtrl\n      setNumPages = $attrs.numPages ? $parse($attrs.numPages).assign : angular.noop;\n\n  this.init = function(ngModelCtrl_, config) {\n    ngModelCtrl = ngModelCtrl_;\n    this.config = config;\n\n    ngModelCtrl.$render = function() {\n      self.render();\n    };\n\n    if ($attrs.itemsPerPage) {\n      $scope.$parent.$watch($parse($attrs.itemsPerPage), function(value) {\n        self.itemsPerPage = parseInt(value, 10);\n        $scope.totalPages = self.calculateTotalPages();\n      });\n    } else {\n      this.itemsPerPage = config.itemsPerPage;\n    }\n\n    $scope.$watch('totalItems', function() {\n      $scope.totalPages = self.calculateTotalPages();\n    });\n\n    $scope.$watch('totalPages', function(value) {\n      setNumPages($scope.$parent, value); // Readonly variable\n\n      if ( $scope.page > value ) {\n        $scope.selectPage(value);\n      } else {\n        ngModelCtrl.$render();\n      }\n    });\n  };\n\n  this.calculateTotalPages = function() {\n    var totalPages = this.itemsPerPage < 1 ? 1 : Math.ceil($scope.totalItems / this.itemsPerPage);\n    return Math.max(totalPages || 0, 1);\n  };\n\n  this.render = function() {\n    $scope.page = parseInt(ngModelCtrl.$viewValue, 10) || 1;\n  };\n\n  $scope.selectPage = function(page, evt) {\n    if ( $scope.page !== page && page > 0 && page <= $scope.totalPages) {\n      if (evt && evt.target) {\n        evt.target.blur();\n      }\n      ngModelCtrl.$setViewValue(page);\n      ngModelCtrl.$render();\n    }\n  };\n\n  $scope.getText = function( key ) {\n    return $scope[key + 'Text'] || self.config[key + 'Text'];\n  };\n  $scope.noPrevious = function() {\n    return $scope.page === 1;\n  };\n  $scope.noNext = function() {\n    return $scope.page === $scope.totalPages;\n  };\n}])\n\n.constant('paginationConfig', {\n  itemsPerPage: 10,\n  boundaryLinks: false,\n  directionLinks: true,\n  firstText: 'First',\n  previousText: 'Previous',\n  nextText: 'Next',\n  lastText: 'Last',\n  rotate: true\n})\n\n.directive('pagination', ['$parse', 'paginationConfig', function($parse, paginationConfig) {\n  return {\n    restrict: 'EA',\n    scope: {\n      totalItems: '=',\n      firstText: '@',\n      previousText: '@',\n      nextText: '@',\n      lastText: '@'\n    },\n    require: ['pagination', '?ngModel'],\n    controller: 'PaginationController',\n    templateUrl: 'template/pagination/pagination.html',\n    replace: true,\n    link: function(scope, element, attrs, ctrls) {\n      var paginationCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      if (!ngModelCtrl) {\n         return; // do nothing if no ng-model\n      }\n\n      // Setup configuration parameters\n      var maxSize = angular.isDefined(attrs.maxSize) ? scope.$parent.$eval(attrs.maxSize) : paginationConfig.maxSize,\n          rotate = angular.isDefined(attrs.rotate) ? scope.$parent.$eval(attrs.rotate) : paginationConfig.rotate;\n      scope.boundaryLinks = angular.isDefined(attrs.boundaryLinks) ? scope.$parent.$eval(attrs.boundaryLinks) : paginationConfig.boundaryLinks;\n      scope.directionLinks = angular.isDefined(attrs.directionLinks) ? scope.$parent.$eval(attrs.directionLinks) : paginationConfig.directionLinks;\n\n      paginationCtrl.init(ngModelCtrl, paginationConfig);\n\n      if (attrs.maxSize) {\n        scope.$parent.$watch($parse(attrs.maxSize), function(value) {\n          maxSize = parseInt(value, 10);\n          paginationCtrl.render();\n        });\n      }\n\n      // Create page object used in template\n      function makePage(number, text, isActive) {\n        return {\n          number: number,\n          text: text,\n          active: isActive\n        };\n      }\n\n      function getPages(currentPage, totalPages) {\n        var pages = [];\n\n        // Default page limits\n        var startPage = 1, endPage = totalPages;\n        var isMaxSized = ( angular.isDefined(maxSize) && maxSize < totalPages );\n\n        // recompute if maxSize\n        if ( isMaxSized ) {\n          if ( rotate ) {\n            // Current page is displayed in the middle of the visible ones\n            startPage = Math.max(currentPage - Math.floor(maxSize/2), 1);\n            endPage   = startPage + maxSize - 1;\n\n            // Adjust if limit is exceeded\n            if (endPage > totalPages) {\n              endPage   = totalPages;\n              startPage = endPage - maxSize + 1;\n            }\n          } else {\n            // Visible pages are paginated with maxSize\n            startPage = ((Math.ceil(currentPage / maxSize) - 1) * maxSize) + 1;\n\n            // Adjust last page if limit is exceeded\n            endPage = Math.min(startPage + maxSize - 1, totalPages);\n          }\n        }\n\n        // Add page number links\n        for (var number = startPage; number <= endPage; number++) {\n          var page = makePage(number, number, number === currentPage);\n          pages.push(page);\n        }\n\n        // Add links to move between page sets\n        if ( isMaxSized && ! rotate ) {\n          if ( startPage > 1 ) {\n            var previousPageSet = makePage(startPage - 1, '...', false);\n            pages.unshift(previousPageSet);\n          }\n\n          if ( endPage < totalPages ) {\n            var nextPageSet = makePage(endPage + 1, '...', false);\n            pages.push(nextPageSet);\n          }\n        }\n\n        return pages;\n      }\n\n      var originalRender = paginationCtrl.render;\n      paginationCtrl.render = function() {\n        originalRender();\n        if (scope.page > 0 && scope.page <= scope.totalPages) {\n          scope.pages = getPages(scope.page, scope.totalPages);\n        }\n      };\n    }\n  };\n}])\n\n.constant('pagerConfig', {\n  itemsPerPage: 10,\n  previousText: '« Previous',\n  nextText: 'Next »',\n  align: true\n})\n\n.directive('pager', ['pagerConfig', function(pagerConfig) {\n  return {\n    restrict: 'EA',\n    scope: {\n      totalItems: '=',\n      previousText: '@',\n      nextText: '@'\n    },\n    require: ['pager', '?ngModel'],\n    controller: 'PaginationController',\n    templateUrl: 'template/pagination/pager.html',\n    replace: true,\n    link: function(scope, element, attrs, ctrls) {\n      var paginationCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      if (!ngModelCtrl) {\n         return; // do nothing if no ng-model\n      }\n\n      scope.align = angular.isDefined(attrs.align) ? scope.$parent.$eval(attrs.align) : pagerConfig.align;\n      paginationCtrl.init(ngModelCtrl, pagerConfig);\n    }\n  };\n}]);\n\n/**\n * The following features are still outstanding: animation as a\n * function, placement as a function, inside, support for more triggers than\n * just mouse enter/leave, html tooltips, and selector delegation.\n */\nangular.module( 'ui.bootstrap.tooltip', [ 'ui.bootstrap.position', 'ui.bootstrap.bindHtml' ] )\n\n/**\n * The $tooltip service creates tooltip- and popover-like directives as well as\n * houses global options for them.\n */\n.provider( '$tooltip', function () {\n  // The default options tooltip and popover.\n  var defaultOptions = {\n    placement: 'top',\n    animation: true,\n    popupDelay: 0,\n    useContentExp: false\n  };\n\n  // Default hide triggers for each show trigger\n  var triggerMap = {\n    'mouseenter': 'mouseleave',\n    'click': 'click',\n    'focus': 'blur'\n  };\n\n  // The options specified to the provider globally.\n  var globalOptions = {};\n\n  /**\n   * `options({})` allows global configuration of all tooltips in the\n   * application.\n   *\n   *   var app = angular.module( 'App', ['ui.bootstrap.tooltip'], function( $tooltipProvider ) {\n   *     // place tooltips left instead of top by default\n   *     $tooltipProvider.options( { placement: 'left' } );\n   *   });\n   */\n\tthis.options = function( value ) {\n\t\tangular.extend( globalOptions, value );\n\t};\n\n  /**\n   * This allows you to extend the set of trigger mappings available. E.g.:\n   *\n   *   $tooltipProvider.setTriggers( 'openTrigger': 'closeTrigger' );\n   */\n  this.setTriggers = function setTriggers ( triggers ) {\n    angular.extend( triggerMap, triggers );\n  };\n\n  /**\n   * This is a helper function for translating camel-case to snake-case.\n   */\n  function snake_case(name){\n    var regexp = /[A-Z]/g;\n    var separator = '-';\n    return name.replace(regexp, function(letter, pos) {\n      return (pos ? separator : '') + letter.toLowerCase();\n    });\n  }\n\n  /**\n   * Returns the actual instance of the $tooltip service.\n   * TODO support multiple triggers\n   */\n  this.$get = [ '$window', '$compile', '$timeout', '$document', '$position', '$interpolate', function ( $window, $compile, $timeout, $document, $position, $interpolate ) {\n    return function $tooltip ( type, prefix, defaultTriggerShow, options ) {\n      options = angular.extend( {}, defaultOptions, globalOptions, options );\n\n      /**\n       * Returns an object of show and hide triggers.\n       *\n       * If a trigger is supplied,\n       * it is used to show the tooltip; otherwise, it will use the `trigger`\n       * option passed to the `$tooltipProvider.options` method; else it will\n       * default to the trigger supplied to this directive factory.\n       *\n       * The hide trigger is based on the show trigger. If the `trigger` option\n       * was passed to the `$tooltipProvider.options` method, it will use the\n       * mapped trigger from `triggerMap` or the passed trigger if the map is\n       * undefined; otherwise, it uses the `triggerMap` value of the show\n       * trigger; else it will just use the show trigger.\n       */\n      function getTriggers ( trigger ) {\n        var show = trigger || options.trigger || defaultTriggerShow;\n        var hide = triggerMap[show] || show;\n        return {\n          show: show,\n          hide: hide\n        };\n      }\n\n      var directiveName = snake_case( type );\n\n      var startSym = $interpolate.startSymbol();\n      var endSym = $interpolate.endSymbol();\n      var template =\n        '<div '+ directiveName +'-popup '+\n          'title=\"'+startSym+'title'+endSym+'\" '+\n          (options.useContentExp ?\n            'content-exp=\"contentExp()\" ' :\n            'content=\"'+startSym+'content'+endSym+'\" ') +\n          'placement=\"'+startSym+'placement'+endSym+'\" '+\n          'popup-class=\"'+startSym+'popupClass'+endSym+'\" '+\n          'animation=\"animation\" '+\n          'is-open=\"isOpen\"'+\n          'origin-scope=\"origScope\" '+\n          '>'+\n        '</div>';\n\n      return {\n        restrict: 'EA',\n        compile: function (tElem, tAttrs) {\n          var tooltipLinker = $compile( template );\n\n          return function link ( scope, element, attrs, tooltipCtrl ) {\n            var tooltip;\n            var tooltipLinkedScope;\n            var transitionTimeout;\n            var popupTimeout;\n            var appendToBody = angular.isDefined( options.appendToBody ) ? options.appendToBody : false;\n            var triggers = getTriggers( undefined );\n            var hasEnableExp = angular.isDefined(attrs[prefix+'Enable']);\n            var ttScope = scope.$new(true);\n\n            var positionTooltip = function () {\n              if (!tooltip) { return; }\n\n              var ttPosition = $position.positionElements(element, tooltip, ttScope.placement, appendToBody);\n              ttPosition.top += 'px';\n              ttPosition.left += 'px';\n\n              // Now set the calculated positioning.\n              tooltip.css( ttPosition );\n            };\n\n            // Set up the correct scope to allow transclusion later\n            ttScope.origScope = scope;\n\n            // By default, the tooltip is not open.\n            // TODO add ability to start tooltip opened\n            ttScope.isOpen = false;\n\n            function toggleTooltipBind () {\n              if ( ! ttScope.isOpen ) {\n                showTooltipBind();\n              } else {\n                hideTooltipBind();\n              }\n            }\n\n            // Show the tooltip with delay if specified, otherwise show it immediately\n            function showTooltipBind() {\n              if(hasEnableExp && !scope.$eval(attrs[prefix+'Enable'])) {\n                return;\n              }\n\n              prepareTooltip();\n\n              if ( ttScope.popupDelay ) {\n                // Do nothing if the tooltip was already scheduled to pop-up.\n                // This happens if show is triggered multiple times before any hide is triggered.\n                if (!popupTimeout) {\n                  popupTimeout = $timeout( show, ttScope.popupDelay, false );\n                  popupTimeout.then(function(reposition){reposition();});\n                }\n              } else {\n                show()();\n              }\n            }\n\n            function hideTooltipBind () {\n              scope.$apply(function () {\n                hide();\n              });\n            }\n\n            // Show the tooltip popup element.\n            function show() {\n\n              popupTimeout = null;\n\n              // If there is a pending remove transition, we must cancel it, lest the\n              // tooltip be mysteriously removed.\n              if ( transitionTimeout ) {\n                $timeout.cancel( transitionTimeout );\n                transitionTimeout = null;\n              }\n\n              // Don't show empty tooltips.\n              if ( !(options.useContentExp ? ttScope.contentExp() : ttScope.content) ) {\n                return angular.noop;\n              }\n\n              createTooltip();\n\n              // Set the initial positioning.\n              tooltip.css({ top: 0, left: 0, display: 'block' });\n              ttScope.$digest();\n\n              positionTooltip();\n\n              // And show the tooltip.\n              ttScope.isOpen = true;\n              ttScope.$apply(); // digest required as $apply is not called\n\n              // Return positioning function as promise callback for correct\n              // positioning after draw.\n              return positionTooltip;\n            }\n\n            // Hide the tooltip popup element.\n            function hide() {\n              // First things first: we don't show it anymore.\n              ttScope.isOpen = false;\n\n              //if tooltip is going to be shown after delay, we must cancel this\n              $timeout.cancel( popupTimeout );\n              popupTimeout = null;\n\n              // And now we remove it from the DOM. However, if we have animation, we\n              // need to wait for it to expire beforehand.\n              // FIXME: this is a placeholder for a port of the transitions library.\n              if ( ttScope.animation ) {\n                if (!transitionTimeout) {\n                  transitionTimeout = $timeout(removeTooltip, 500);\n                }\n              } else {\n                removeTooltip();\n              }\n            }\n\n            function createTooltip() {\n              // There can only be one tooltip element per directive shown at once.\n              if (tooltip) {\n                removeTooltip();\n              }\n              tooltipLinkedScope = ttScope.$new();\n              tooltip = tooltipLinker(tooltipLinkedScope, function (tooltip) {\n                if ( appendToBody ) {\n                  $document.find( 'body' ).append( tooltip );\n                } else {\n                  element.after( tooltip );\n                }\n              });\n\n              tooltipLinkedScope.$watch(function () {\n                $timeout(positionTooltip, 0, false);\n              });\n\n              if (options.useContentExp) {\n                tooltipLinkedScope.$watch('contentExp()', function (val) {\n                  if (!val && ttScope.isOpen ) {\n                    hide();\n                  }\n                });\n              }\n            }\n\n            function removeTooltip() {\n              transitionTimeout = null;\n              if (tooltip) {\n                tooltip.remove();\n                tooltip = null;\n              }\n              if (tooltipLinkedScope) {\n                tooltipLinkedScope.$destroy();\n                tooltipLinkedScope = null;\n              }\n            }\n\n            function prepareTooltip() {\n              prepPopupClass();\n              prepPlacement();\n              prepPopupDelay();\n            }\n\n            ttScope.contentExp = function () {\n              return scope.$eval(attrs[type]);\n            };\n\n            /**\n             * Observe the relevant attributes.\n             */\n            if (!options.useContentExp) {\n              attrs.$observe( type, function ( val ) {\n                ttScope.content = val;\n\n                if (!val && ttScope.isOpen ) {\n                  hide();\n                }\n              });\n            }\n\n            attrs.$observe( 'disabled', function ( val ) {\n              if (val && ttScope.isOpen ) {\n                hide();\n              }\n            });\n\n            attrs.$observe( prefix+'Title', function ( val ) {\n              ttScope.title = val;\n            });\n\n            function prepPopupClass() {\n              ttScope.popupClass = attrs[prefix + 'Class'];\n            }\n\n            function prepPlacement() {\n              var val = attrs[ prefix + 'Placement' ];\n              ttScope.placement = angular.isDefined( val ) ? val : options.placement;\n            }\n\n            function prepPopupDelay() {\n              var val = attrs[ prefix + 'PopupDelay' ];\n              var delay = parseInt( val, 10 );\n              ttScope.popupDelay = ! isNaN(delay) ? delay : options.popupDelay;\n            }\n\n            var unregisterTriggers = function () {\n              element.unbind(triggers.show, showTooltipBind);\n              element.unbind(triggers.hide, hideTooltipBind);\n            };\n\n            function prepTriggers() {\n              var val = attrs[ prefix + 'Trigger' ];\n              unregisterTriggers();\n\n              triggers = getTriggers( val );\n\n              if ( triggers.show === triggers.hide ) {\n                element.bind( triggers.show, toggleTooltipBind );\n              } else {\n                element.bind( triggers.show, showTooltipBind );\n                element.bind( triggers.hide, hideTooltipBind );\n              }\n            }\n            prepTriggers();\n\n            var animation = scope.$eval(attrs[prefix + 'Animation']);\n            ttScope.animation = angular.isDefined(animation) ? !!animation : options.animation;\n\n            var appendToBodyVal = scope.$eval(attrs[prefix + 'AppendToBody']);\n            appendToBody = angular.isDefined(appendToBodyVal) ? appendToBodyVal : appendToBody;\n\n            // if a tooltip is attached to <body> we need to remove it on\n            // location change as its parent scope will probably not be destroyed\n            // by the change.\n            if ( appendToBody ) {\n              scope.$on('$locationChangeSuccess', function closeTooltipOnLocationChangeSuccess () {\n              if ( ttScope.isOpen ) {\n                hide();\n              }\n            });\n            }\n\n            // Make sure tooltip is destroyed and removed.\n            scope.$on('$destroy', function onDestroyTooltip() {\n              $timeout.cancel( transitionTimeout );\n              $timeout.cancel( popupTimeout );\n              unregisterTriggers();\n              removeTooltip();\n              ttScope = null;\n            });\n          };\n        }\n      };\n    };\n  }];\n})\n\n// This is mostly ngInclude code but with a custom scope\n.directive( 'tooltipTemplateTransclude', [\n         '$animate', '$sce', '$compile', '$templateRequest',\nfunction ($animate ,  $sce ,  $compile ,  $templateRequest) {\n  return {\n    link: function ( scope, elem, attrs ) {\n      var origScope = scope.$eval(attrs.tooltipTemplateTranscludeScope);\n\n      var changeCounter = 0,\n        currentScope,\n        previousElement,\n        currentElement;\n\n      var cleanupLastIncludeContent = function() {\n        if (previousElement) {\n          previousElement.remove();\n          previousElement = null;\n        }\n        if (currentScope) {\n          currentScope.$destroy();\n          currentScope = null;\n        }\n        if (currentElement) {\n          $animate.leave(currentElement).then(function() {\n            previousElement = null;\n          });\n          previousElement = currentElement;\n          currentElement = null;\n        }\n      };\n\n      scope.$watch($sce.parseAsResourceUrl(attrs.tooltipTemplateTransclude), function (src) {\n        var thisChangeId = ++changeCounter;\n\n        if (src) {\n          //set the 2nd param to true to ignore the template request error so that the inner\n          //contents and scope can be cleaned up.\n          $templateRequest(src, true).then(function(response) {\n            if (thisChangeId !== changeCounter) { return; }\n            var newScope = origScope.$new();\n            var template = response;\n\n            var clone = $compile(template)(newScope, function(clone) {\n              cleanupLastIncludeContent();\n              $animate.enter(clone, elem);\n            });\n\n            currentScope = newScope;\n            currentElement = clone;\n\n            currentScope.$emit('$includeContentLoaded', src);\n          }, function() {\n            if (thisChangeId === changeCounter) {\n              cleanupLastIncludeContent();\n              scope.$emit('$includeContentError', src);\n            }\n          });\n          scope.$emit('$includeContentRequested', src);\n        } else {\n          cleanupLastIncludeContent();\n        }\n      });\n\n      scope.$on('$destroy', cleanupLastIncludeContent);\n    }\n  };\n}])\n\n/**\n * Note that it's intentional that these classes are *not* applied through $animate.\n * They must not be animated as they're expected to be present on the tooltip on\n * initialization.\n */\n.directive('tooltipClasses', function () {\n  return {\n    restrict: 'A',\n    link: function (scope, element, attrs) {\n      if (scope.placement) {\n        element.addClass(scope.placement);\n      }\n      if (scope.popupClass) {\n        element.addClass(scope.popupClass);\n      }\n      if (scope.animation()) {\n        element.addClass(attrs.tooltipAnimationClass);\n      }\n    }\n  };\n})\n\n.directive( 'tooltipPopup', function () {\n  return {\n    restrict: 'EA',\n    replace: true,\n    scope: { content: '@', placement: '@', popupClass: '@', animation: '&', isOpen: '&' },\n    templateUrl: 'template/tooltip/tooltip-popup.html'\n  };\n})\n\n.directive( 'tooltip', [ '$tooltip', function ( $tooltip ) {\n  return $tooltip( 'tooltip', 'tooltip', 'mouseenter' );\n}])\n\n.directive( 'tooltipTemplatePopup', function () {\n  return {\n    restrict: 'EA',\n    replace: true,\n    scope: { contentExp: '&', placement: '@', popupClass: '@', animation: '&', isOpen: '&',\n      originScope: '&' },\n    templateUrl: 'template/tooltip/tooltip-template-popup.html'\n  };\n})\n\n.directive( 'tooltipTemplate', [ '$tooltip', function ( $tooltip ) {\n  return $tooltip('tooltipTemplate', 'tooltip', 'mouseenter', {\n    useContentExp: true\n  });\n}])\n\n.directive( 'tooltipHtmlPopup', function () {\n  return {\n    restrict: 'EA',\n    replace: true,\n    scope: { contentExp: '&', placement: '@', popupClass: '@', animation: '&', isOpen: '&' },\n    templateUrl: 'template/tooltip/tooltip-html-popup.html'\n  };\n})\n\n.directive( 'tooltipHtml', [ '$tooltip', function ( $tooltip ) {\n  return $tooltip('tooltipHtml', 'tooltip', 'mouseenter', {\n    useContentExp: true\n  });\n}])\n\n/*\nDeprecated\n*/\n.directive( 'tooltipHtmlUnsafePopup', function () {\n  return {\n    restrict: 'EA',\n    replace: true,\n    scope: { content: '@', placement: '@', popupClass: '@', animation: '&', isOpen: '&' },\n    templateUrl: 'template/tooltip/tooltip-html-unsafe-popup.html'\n  };\n})\n\n.value('tooltipHtmlUnsafeSuppressDeprecated', false)\n.directive( 'tooltipHtmlUnsafe', [\n          '$tooltip', 'tooltipHtmlUnsafeSuppressDeprecated', '$log',\nfunction ( $tooltip ,  tooltipHtmlUnsafeSuppressDeprecated ,  $log) {\n  if (!tooltipHtmlUnsafeSuppressDeprecated) {\n    $log.warn('tooltip-html-unsafe is now deprecated. Use tooltip-html or tooltip-template instead.');\n  }\n  return $tooltip( 'tooltipHtmlUnsafe', 'tooltip', 'mouseenter' );\n}]);\n\n/**\n * The following features are still outstanding: popup delay, animation as a\n * function, placement as a function, inside, support for more triggers than\n * just mouse enter/leave, html popovers, and selector delegatation.\n */\nangular.module( 'ui.bootstrap.popover', [ 'ui.bootstrap.tooltip' ] )\n\n.directive( 'popoverTemplatePopup', function () {\n  return {\n    restrict: 'EA',\n    replace: true,\n    scope: { title: '@', contentExp: '&', placement: '@', popupClass: '@', animation: '&', isOpen: '&',\n      originScope: '&' },\n    templateUrl: 'template/popover/popover-template.html'\n  };\n})\n\n.directive( 'popoverTemplate', [ '$tooltip', function ( $tooltip ) {\n  return $tooltip( 'popoverTemplate', 'popover', 'click', {\n    useContentExp: true\n  } );\n}])\n\n.directive( 'popoverPopup', function () {\n  return {\n    restrict: 'EA',\n    replace: true,\n    scope: { title: '@', content: '@', placement: '@', popupClass: '@', animation: '&', isOpen: '&' },\n    templateUrl: 'template/popover/popover.html'\n  };\n})\n\n.directive( 'popover', [ '$tooltip', function ( $tooltip ) {\n  return $tooltip( 'popover', 'popover', 'click' );\n}]);\n\nangular.module('ui.bootstrap.progressbar', [])\n\n.constant('progressConfig', {\n  animate: true,\n  max: 100\n})\n\n.controller('ProgressController', ['$scope', '$attrs', 'progressConfig', function($scope, $attrs, progressConfig) {\n    var self = this,\n        animate = angular.isDefined($attrs.animate) ? $scope.$parent.$eval($attrs.animate) : progressConfig.animate;\n\n    this.bars = [];\n    $scope.max = angular.isDefined($scope.max) ? $scope.max : progressConfig.max;\n\n    this.addBar = function(bar, element) {\n        if ( !animate ) {\n            element.css({'transition': 'none'});\n        }\n\n        this.bars.push(bar);\n\n        bar.$watch('value', function( value ) {\n            bar.percent = +(100 * value / $scope.max).toFixed(2);\n        });\n\n        bar.$on('$destroy', function() {\n            element = null;\n            self.removeBar(bar);\n        });\n    };\n\n    this.removeBar = function(bar) {\n        this.bars.splice(this.bars.indexOf(bar), 1);\n    };\n}])\n\n.directive('progress', function() {\n    return {\n        restrict: 'EA',\n        replace: true,\n        transclude: true,\n        controller: 'ProgressController',\n        require: 'progress',\n        scope: {},\n        templateUrl: 'template/progressbar/progress.html'\n    };\n})\n\n.directive('bar', function() {\n    return {\n        restrict: 'EA',\n        replace: true,\n        transclude: true,\n        require: '^progress',\n        scope: {\n            value: '=',\n            max: '=?',\n            type: '@'\n        },\n        templateUrl: 'template/progressbar/bar.html',\n        link: function(scope, element, attrs, progressCtrl) {\n            progressCtrl.addBar(scope, element);\n        }\n    };\n})\n\n.directive('progressbar', function() {\n    return {\n        restrict: 'EA',\n        replace: true,\n        transclude: true,\n        controller: 'ProgressController',\n        scope: {\n            value: '=',\n            max: '=?',\n            type: '@'\n        },\n        templateUrl: 'template/progressbar/progressbar.html',\n        link: function(scope, element, attrs, progressCtrl) {\n            progressCtrl.addBar(scope, angular.element(element.children()[0]));\n        }\n    };\n});\n\nangular.module('ui.bootstrap.rating', [])\n\n.constant('ratingConfig', {\n  max: 5,\n  stateOn: null,\n  stateOff: null\n})\n\n.controller('RatingController', ['$scope', '$attrs', 'ratingConfig', function($scope, $attrs, ratingConfig) {\n  var ngModelCtrl  = { $setViewValue: angular.noop };\n\n  this.init = function(ngModelCtrl_) {\n    ngModelCtrl = ngModelCtrl_;\n    ngModelCtrl.$render = this.render;\n\n    ngModelCtrl.$formatters.push(function(value) {\n      if (angular.isNumber(value) && value << 0 !== value) {\n        value = Math.round(value);\n      }\n      return value;\n    });\n\n    this.stateOn = angular.isDefined($attrs.stateOn) ? $scope.$parent.$eval($attrs.stateOn) : ratingConfig.stateOn;\n    this.stateOff = angular.isDefined($attrs.stateOff) ? $scope.$parent.$eval($attrs.stateOff) : ratingConfig.stateOff;\n\n    var ratingStates = angular.isDefined($attrs.ratingStates) ? $scope.$parent.$eval($attrs.ratingStates) :\n                        new Array( angular.isDefined($attrs.max) ? $scope.$parent.$eval($attrs.max) : ratingConfig.max );\n    $scope.range = this.buildTemplateObjects(ratingStates);\n  };\n\n  this.buildTemplateObjects = function(states) {\n    for (var i = 0, n = states.length; i < n; i++) {\n      states[i] = angular.extend({ index: i }, { stateOn: this.stateOn, stateOff: this.stateOff }, states[i]);\n    }\n    return states;\n  };\n\n  $scope.rate = function(value) {\n    if ( !$scope.readonly && value >= 0 && value <= $scope.range.length ) {\n      ngModelCtrl.$setViewValue(value);\n      ngModelCtrl.$render();\n    }\n  };\n\n  $scope.enter = function(value) {\n    if ( !$scope.readonly ) {\n      $scope.value = value;\n    }\n    $scope.onHover({value: value});\n  };\n\n  $scope.reset = function() {\n    $scope.value = ngModelCtrl.$viewValue;\n    $scope.onLeave();\n  };\n\n  $scope.onKeydown = function(evt) {\n    if (/(37|38|39|40)/.test(evt.which)) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      $scope.rate( $scope.value + (evt.which === 38 || evt.which === 39 ? 1 : -1) );\n    }\n  };\n\n  this.render = function() {\n    $scope.value = ngModelCtrl.$viewValue;\n  };\n}])\n\n.directive('rating', function() {\n  return {\n    restrict: 'EA',\n    require: ['rating', 'ngModel'],\n    scope: {\n      readonly: '=?',\n      onHover: '&',\n      onLeave: '&'\n    },\n    controller: 'RatingController',\n    templateUrl: 'template/rating/rating.html',\n    replace: true,\n    link: function(scope, element, attrs, ctrls) {\n      var ratingCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n      ratingCtrl.init( ngModelCtrl );\n    }\n  };\n});\n\n/**\n * @ngdoc overview\n * @name ui.bootstrap.tabs\n *\n * @description\n * AngularJS version of the tabs directive.\n */\n\nangular.module('ui.bootstrap.tabs', [])\n\n.controller('TabsetController', ['$scope', function TabsetCtrl($scope) {\n  var ctrl = this,\n      tabs = ctrl.tabs = $scope.tabs = [];\n\n  ctrl.select = function(selectedTab) {\n    angular.forEach(tabs, function(tab) {\n      if (tab.active && tab !== selectedTab) {\n        tab.active = false;\n        tab.onDeselect();\n      }\n    });\n    selectedTab.active = true;\n    selectedTab.onSelect();\n  };\n\n  ctrl.addTab = function addTab(tab) {\n    tabs.push(tab);\n    // we can't run the select function on the first tab\n    // since that would select it twice\n    if (tabs.length === 1 && tab.active !== false) {\n      tab.active = true;\n    } else if (tab.active) {\n      ctrl.select(tab);\n    }\n    else {\n      tab.active = false;\n    }\n  };\n\n  ctrl.removeTab = function removeTab(tab) {\n    var index = tabs.indexOf(tab);\n    //Select a new tab if the tab to be removed is selected and not destroyed\n    if (tab.active && tabs.length > 1 && !destroyed) {\n      //If this is the last tab, select the previous tab. else, the next tab.\n      var newActiveIndex = index == tabs.length - 1 ? index - 1 : index + 1;\n      ctrl.select(tabs[newActiveIndex]);\n    }\n    tabs.splice(index, 1);\n  };\n\n  var destroyed;\n  $scope.$on('$destroy', function() {\n    destroyed = true;\n  });\n}])\n\n/**\n * @ngdoc directive\n * @name ui.bootstrap.tabs.directive:tabset\n * @restrict EA\n *\n * @description\n * Tabset is the outer container for the tabs directive\n *\n * @param {boolean=} vertical Whether or not to use vertical styling for the tabs.\n * @param {boolean=} justified Whether or not to use justified styling for the tabs.\n *\n * @example\n<example module=\"ui.bootstrap\">\n  <file name=\"index.html\">\n    <tabset>\n      <tab heading=\"Tab 1\"><b>First</b> Content!</tab>\n      <tab heading=\"Tab 2\"><i>Second</i> Content!</tab>\n    </tabset>\n    <hr />\n    <tabset vertical=\"true\">\n      <tab heading=\"Vertical Tab 1\"><b>First</b> Vertical Content!</tab>\n      <tab heading=\"Vertical Tab 2\"><i>Second</i> Vertical Content!</tab>\n    </tabset>\n    <tabset justified=\"true\">\n      <tab heading=\"Justified Tab 1\"><b>First</b> Justified Content!</tab>\n      <tab heading=\"Justified Tab 2\"><i>Second</i> Justified Content!</tab>\n    </tabset>\n  </file>\n</example>\n */\n.directive('tabset', function() {\n  return {\n    restrict: 'EA',\n    transclude: true,\n    replace: true,\n    scope: {\n      type: '@'\n    },\n    controller: 'TabsetController',\n    templateUrl: 'template/tabs/tabset.html',\n    link: function(scope, element, attrs) {\n      scope.vertical = angular.isDefined(attrs.vertical) ? scope.$parent.$eval(attrs.vertical) : false;\n      scope.justified = angular.isDefined(attrs.justified) ? scope.$parent.$eval(attrs.justified) : false;\n    }\n  };\n})\n\n/**\n * @ngdoc directive\n * @name ui.bootstrap.tabs.directive:tab\n * @restrict EA\n *\n * @param {string=} heading The visible heading, or title, of the tab. Set HTML headings with {@link ui.bootstrap.tabs.directive:tabHeading tabHeading}.\n * @param {string=} select An expression to evaluate when the tab is selected.\n * @param {boolean=} active A binding, telling whether or not this tab is selected.\n * @param {boolean=} disabled A binding, telling whether or not this tab is disabled.\n *\n * @description\n * Creates a tab with a heading and content. Must be placed within a {@link ui.bootstrap.tabs.directive:tabset tabset}.\n *\n * @example\n<example module=\"ui.bootstrap\">\n  <file name=\"index.html\">\n    <div ng-controller=\"TabsDemoCtrl\">\n      <button class=\"btn btn-small\" ng-click=\"items[0].active = true\">\n        Select item 1, using active binding\n      </button>\n      <button class=\"btn btn-small\" ng-click=\"items[1].disabled = !items[1].disabled\">\n        Enable/disable item 2, using disabled binding\n      </button>\n      <br />\n      <tabset>\n        <tab heading=\"Tab 1\">First Tab</tab>\n        <tab select=\"alertMe()\">\n          <tab-heading><i class=\"icon-bell\"></i> Alert me!</tab-heading>\n          Second Tab, with alert callback and html heading!\n        </tab>\n        <tab ng-repeat=\"item in items\"\n          heading=\"{{item.title}}\"\n          disabled=\"item.disabled\"\n          active=\"item.active\">\n          {{item.content}}\n        </tab>\n      </tabset>\n    </div>\n  </file>\n  <file name=\"script.js\">\n    function TabsDemoCtrl($scope) {\n      $scope.items = [\n        { title:\"Dynamic Title 1\", content:\"Dynamic Item 0\" },\n        { title:\"Dynamic Title 2\", content:\"Dynamic Item 1\", disabled: true }\n      ];\n\n      $scope.alertMe = function() {\n        setTimeout(function() {\n          alert(\"You've selected the alert tab!\");\n        });\n      };\n    };\n  </file>\n</example>\n */\n\n/**\n * @ngdoc directive\n * @name ui.bootstrap.tabs.directive:tabHeading\n * @restrict EA\n *\n * @description\n * Creates an HTML heading for a {@link ui.bootstrap.tabs.directive:tab tab}. Must be placed as a child of a tab element.\n *\n * @example\n<example module=\"ui.bootstrap\">\n  <file name=\"index.html\">\n    <tabset>\n      <tab>\n        <tab-heading><b>HTML</b> in my titles?!</tab-heading>\n        And some content, too!\n      </tab>\n      <tab>\n        <tab-heading><i class=\"icon-heart\"></i> Icon heading?!?</tab-heading>\n        That's right.\n      </tab>\n    </tabset>\n  </file>\n</example>\n */\n.directive('tab', ['$parse', '$log', function($parse, $log) {\n  return {\n    require: '^tabset',\n    restrict: 'EA',\n    replace: true,\n    templateUrl: 'template/tabs/tab.html',\n    transclude: true,\n    scope: {\n      active: '=?',\n      heading: '@',\n      onSelect: '&select', //This callback is called in contentHeadingTransclude\n                          //once it inserts the tab's content into the dom\n      onDeselect: '&deselect'\n    },\n    controller: function() {\n      //Empty controller so other directives can require being 'under' a tab\n    },\n    compile: function(elm, attrs, transclude) {\n      return function postLink(scope, elm, attrs, tabsetCtrl) {\n        scope.$watch('active', function(active) {\n          if (active) {\n            tabsetCtrl.select(scope);\n          }\n        });\n\n        scope.disabled = false;\n        if ( attrs.disable ) {\n          scope.$parent.$watch($parse(attrs.disable), function(value) {\n            scope.disabled = !! value;\n          });\n        }\n\n        // Deprecation support of \"disabled\" parameter\n        // fix(tab): IE9 disabled attr renders grey text on enabled tab #2677\n        // This code is duplicated from the lines above to make it easy to remove once\n        // the feature has been completely deprecated\n        if ( attrs.disabled ) {\n          $log.warn('Use of \"disabled\" attribute has been deprecated, please use \"disable\"');\n          scope.$parent.$watch($parse(attrs.disabled), function(value) {\n            scope.disabled = !! value;\n          });\n        }\n\n        scope.select = function() {\n          if ( !scope.disabled ) {\n            scope.active = true;\n          }\n        };\n\n        tabsetCtrl.addTab(scope);\n        scope.$on('$destroy', function() {\n          tabsetCtrl.removeTab(scope);\n        });\n\n        //We need to transclude later, once the content container is ready.\n        //when this link happens, we're inside a tab heading.\n        scope.$transcludeFn = transclude;\n      };\n    }\n  };\n}])\n\n.directive('tabHeadingTransclude', [function() {\n  return {\n    restrict: 'A',\n    require: '^tab',\n    link: function(scope, elm, attrs, tabCtrl) {\n      scope.$watch('headingElement', function updateHeadingElement(heading) {\n        if (heading) {\n          elm.html('');\n          elm.append(heading);\n        }\n      });\n    }\n  };\n}])\n\n.directive('tabContentTransclude', function() {\n  return {\n    restrict: 'A',\n    require: '^tabset',\n    link: function(scope, elm, attrs) {\n      var tab = scope.$eval(attrs.tabContentTransclude);\n\n      //Now our tab is ready to be transcluded: both the tab heading area\n      //and the tab content area are loaded.  Transclude 'em both.\n      tab.$transcludeFn(tab.$parent, function(contents) {\n        angular.forEach(contents, function(node) {\n          if (isTabHeading(node)) {\n            //Let tabHeadingTransclude know.\n            tab.headingElement = node;\n          } else {\n            elm.append(node);\n          }\n        });\n      });\n    }\n  };\n  function isTabHeading(node) {\n    return node.tagName &&  (\n      node.hasAttribute('tab-heading') ||\n      node.hasAttribute('data-tab-heading') ||\n      node.tagName.toLowerCase() === 'tab-heading' ||\n      node.tagName.toLowerCase() === 'data-tab-heading'\n    );\n  }\n})\n\n;\n\nangular.module('ui.bootstrap.timepicker', [])\n\n.constant('timepickerConfig', {\n  hourStep: 1,\n  minuteStep: 1,\n  showMeridian: true,\n  meridians: null,\n  readonlyInput: false,\n  mousewheel: true,\n  arrowkeys: true\n})\n\n.controller('TimepickerController', ['$scope', '$attrs', '$parse', '$log', '$locale', 'timepickerConfig', function($scope, $attrs, $parse, $log, $locale, timepickerConfig) {\n  var selected = new Date(),\n      ngModelCtrl = { $setViewValue: angular.noop }, // nullModelCtrl\n      meridians = angular.isDefined($attrs.meridians) ? $scope.$parent.$eval($attrs.meridians) : timepickerConfig.meridians || $locale.DATETIME_FORMATS.AMPMS;\n\n  this.init = function( ngModelCtrl_, inputs ) {\n    ngModelCtrl = ngModelCtrl_;\n    ngModelCtrl.$render = this.render;\n\n    ngModelCtrl.$formatters.unshift(function (modelValue) {\n      return modelValue ? new Date( modelValue ) : null;\n    });\n\n    var hoursInputEl = inputs.eq(0),\n        minutesInputEl = inputs.eq(1);\n\n    var mousewheel = angular.isDefined($attrs.mousewheel) ? $scope.$parent.$eval($attrs.mousewheel) : timepickerConfig.mousewheel;\n    if ( mousewheel ) {\n      this.setupMousewheelEvents( hoursInputEl, minutesInputEl );\n    }\n\n    var arrowkeys = angular.isDefined($attrs.arrowkeys) ? $scope.$parent.$eval($attrs.arrowkeys) : timepickerConfig.arrowkeys;\n    if (arrowkeys) {\n      this.setupArrowkeyEvents( hoursInputEl, minutesInputEl );\n    }\n\n    $scope.readonlyInput = angular.isDefined($attrs.readonlyInput) ? $scope.$parent.$eval($attrs.readonlyInput) : timepickerConfig.readonlyInput;\n    this.setupInputEvents( hoursInputEl, minutesInputEl );\n  };\n\n  var hourStep = timepickerConfig.hourStep;\n  if ($attrs.hourStep) {\n    $scope.$parent.$watch($parse($attrs.hourStep), function(value) {\n      hourStep = parseInt(value, 10);\n    });\n  }\n\n  var minuteStep = timepickerConfig.minuteStep;\n  if ($attrs.minuteStep) {\n    $scope.$parent.$watch($parse($attrs.minuteStep), function(value) {\n      minuteStep = parseInt(value, 10);\n    });\n  }\n\n  // 12H / 24H mode\n  $scope.showMeridian = timepickerConfig.showMeridian;\n  if ($attrs.showMeridian) {\n    $scope.$parent.$watch($parse($attrs.showMeridian), function(value) {\n      $scope.showMeridian = !!value;\n\n      if ( ngModelCtrl.$error.time ) {\n        // Evaluate from template\n        var hours = getHoursFromTemplate(), minutes = getMinutesFromTemplate();\n        if (angular.isDefined( hours ) && angular.isDefined( minutes )) {\n          selected.setHours( hours );\n          refresh();\n        }\n      } else {\n        updateTemplate();\n      }\n    });\n  }\n\n  // Get $scope.hours in 24H mode if valid\n  function getHoursFromTemplate ( ) {\n    var hours = parseInt( $scope.hours, 10 );\n    var valid = ( $scope.showMeridian ) ? (hours > 0 && hours < 13) : (hours >= 0 && hours < 24);\n    if ( !valid ) {\n      return undefined;\n    }\n\n    if ( $scope.showMeridian ) {\n      if ( hours === 12 ) {\n        hours = 0;\n      }\n      if ( $scope.meridian === meridians[1] ) {\n        hours = hours + 12;\n      }\n    }\n    return hours;\n  }\n\n  function getMinutesFromTemplate() {\n    var minutes = parseInt($scope.minutes, 10);\n    return ( minutes >= 0 && minutes < 60 ) ? minutes : undefined;\n  }\n\n  function pad( value ) {\n    return ( angular.isDefined(value) && value.toString().length < 2 ) ? '0' + value : value.toString();\n  }\n\n  // Respond on mousewheel spin\n  this.setupMousewheelEvents = function( hoursInputEl, minutesInputEl ) {\n    var isScrollingUp = function(e) {\n      if (e.originalEvent) {\n        e = e.originalEvent;\n      }\n      //pick correct delta variable depending on event\n      var delta = (e.wheelDelta) ? e.wheelDelta : -e.deltaY;\n      return (e.detail || delta > 0);\n    };\n\n    hoursInputEl.bind('mousewheel wheel', function(e) {\n      $scope.$apply( (isScrollingUp(e)) ? $scope.incrementHours() : $scope.decrementHours() );\n      e.preventDefault();\n    });\n\n    minutesInputEl.bind('mousewheel wheel', function(e) {\n      $scope.$apply( (isScrollingUp(e)) ? $scope.incrementMinutes() : $scope.decrementMinutes() );\n      e.preventDefault();\n    });\n\n  };\n\n  // Respond on up/down arrowkeys\n  this.setupArrowkeyEvents = function( hoursInputEl, minutesInputEl ) {\n    hoursInputEl.bind('keydown', function(e) {\n      if ( e.which === 38 ) { // up\n        e.preventDefault();\n        $scope.incrementHours();\n        $scope.$apply();\n      }\n      else if ( e.which === 40 ) { // down\n        e.preventDefault();\n        $scope.decrementHours();\n        $scope.$apply();\n      }\n    });\n\n    minutesInputEl.bind('keydown', function(e) {\n      if ( e.which === 38 ) { // up\n        e.preventDefault();\n        $scope.incrementMinutes();\n        $scope.$apply();\n      }\n      else if ( e.which === 40 ) { // down\n        e.preventDefault();\n        $scope.decrementMinutes();\n        $scope.$apply();\n      }\n    });\n  };\n\n  this.setupInputEvents = function( hoursInputEl, minutesInputEl ) {\n    if ( $scope.readonlyInput ) {\n      $scope.updateHours = angular.noop;\n      $scope.updateMinutes = angular.noop;\n      return;\n    }\n\n    var invalidate = function(invalidHours, invalidMinutes) {\n      ngModelCtrl.$setViewValue( null );\n      ngModelCtrl.$setValidity('time', false);\n      if (angular.isDefined(invalidHours)) {\n        $scope.invalidHours = invalidHours;\n      }\n      if (angular.isDefined(invalidMinutes)) {\n        $scope.invalidMinutes = invalidMinutes;\n      }\n    };\n\n    $scope.updateHours = function() {\n      var hours = getHoursFromTemplate();\n\n      if ( angular.isDefined(hours) ) {\n        selected.setHours( hours );\n        refresh( 'h' );\n      } else {\n        invalidate(true);\n      }\n    };\n\n    hoursInputEl.bind('blur', function(e) {\n      if ( !$scope.invalidHours && $scope.hours < 10) {\n        $scope.$apply( function() {\n          $scope.hours = pad( $scope.hours );\n        });\n      }\n    });\n\n    $scope.updateMinutes = function() {\n      var minutes = getMinutesFromTemplate();\n\n      if ( angular.isDefined(minutes) ) {\n        selected.setMinutes( minutes );\n        refresh( 'm' );\n      } else {\n        invalidate(undefined, true);\n      }\n    };\n\n    minutesInputEl.bind('blur', function(e) {\n      if ( !$scope.invalidMinutes && $scope.minutes < 10 ) {\n        $scope.$apply( function() {\n          $scope.minutes = pad( $scope.minutes );\n        });\n      }\n    });\n\n  };\n\n  this.render = function() {\n    var date = ngModelCtrl.$viewValue;\n\n    if ( isNaN(date) ) {\n      ngModelCtrl.$setValidity('time', false);\n      $log.error('Timepicker directive: \"ng-model\" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.');\n    } else {\n      if ( date ) {\n        selected = date;\n      }\n      makeValid();\n      updateTemplate();\n    }\n  };\n\n  // Call internally when we know that model is valid.\n  function refresh( keyboardChange ) {\n    makeValid();\n    ngModelCtrl.$setViewValue( new Date(selected) );\n    updateTemplate( keyboardChange );\n  }\n\n  function makeValid() {\n    ngModelCtrl.$setValidity('time', true);\n    $scope.invalidHours = false;\n    $scope.invalidMinutes = false;\n  }\n\n  function updateTemplate( keyboardChange ) {\n    var hours = selected.getHours(), minutes = selected.getMinutes();\n\n    if ( $scope.showMeridian ) {\n      hours = ( hours === 0 || hours === 12 ) ? 12 : hours % 12; // Convert 24 to 12 hour system\n    }\n\n    $scope.hours = keyboardChange === 'h' ? hours : pad(hours);\n    if (keyboardChange !== 'm') {\n      $scope.minutes = pad(minutes);\n    }\n    $scope.meridian = selected.getHours() < 12 ? meridians[0] : meridians[1];\n  }\n\n  function addMinutes( minutes ) {\n    var dt = new Date( selected.getTime() + minutes * 60000 );\n    selected.setHours( dt.getHours(), dt.getMinutes() );\n    refresh();\n  }\n\n  $scope.incrementHours = function() {\n    addMinutes( hourStep * 60 );\n  };\n  $scope.decrementHours = function() {\n    addMinutes( - hourStep * 60 );\n  };\n  $scope.incrementMinutes = function() {\n    addMinutes( minuteStep );\n  };\n  $scope.decrementMinutes = function() {\n    addMinutes( - minuteStep );\n  };\n  $scope.toggleMeridian = function() {\n    addMinutes( 12 * 60 * (( selected.getHours() < 12 ) ? 1 : -1) );\n  };\n}])\n\n.directive('timepicker', function () {\n  return {\n    restrict: 'EA',\n    require: ['timepicker', '?^ngModel'],\n    controller:'TimepickerController',\n    replace: true,\n    scope: {},\n    templateUrl: 'template/timepicker/timepicker.html',\n    link: function(scope, element, attrs, ctrls) {\n      var timepickerCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      if ( ngModelCtrl ) {\n        timepickerCtrl.init( ngModelCtrl, element.find('input') );\n      }\n    }\n  };\n});\n\nangular.module('ui.bootstrap.transition', [])\n\n.value('$transitionSuppressDeprecated', false)\n/**\n * $transition service provides a consistent interface to trigger CSS 3 transitions and to be informed when they complete.\n * @param  {DOMElement} element  The DOMElement that will be animated.\n * @param  {string|object|function} trigger  The thing that will cause the transition to start:\n *   - As a string, it represents the css class to be added to the element.\n *   - As an object, it represents a hash of style attributes to be applied to the element.\n *   - As a function, it represents a function to be called that will cause the transition to occur.\n * @return {Promise}  A promise that is resolved when the transition finishes.\n */\n.factory('$transition', [\n        '$q', '$timeout', '$rootScope', '$log', '$transitionSuppressDeprecated',\nfunction($q ,  $timeout ,  $rootScope ,  $log ,  $transitionSuppressDeprecated) {\n\n  if (!$transitionSuppressDeprecated) {\n    $log.warn('$transition is now deprecated. Use $animate from ngAnimate instead.');\n  }\n\n  var $transition = function(element, trigger, options) {\n    options = options || {};\n    var deferred = $q.defer();\n    var endEventName = $transition[options.animation ? 'animationEndEventName' : 'transitionEndEventName'];\n\n    var transitionEndHandler = function(event) {\n      $rootScope.$apply(function() {\n        element.unbind(endEventName, transitionEndHandler);\n        deferred.resolve(element);\n      });\n    };\n\n    if (endEventName) {\n      element.bind(endEventName, transitionEndHandler);\n    }\n\n    // Wrap in a timeout to allow the browser time to update the DOM before the transition is to occur\n    $timeout(function() {\n      if ( angular.isString(trigger) ) {\n        element.addClass(trigger);\n      } else if ( angular.isFunction(trigger) ) {\n        trigger(element);\n      } else if ( angular.isObject(trigger) ) {\n        element.css(trigger);\n      }\n      //If browser does not support transitions, instantly resolve\n      if ( !endEventName ) {\n        deferred.resolve(element);\n      }\n    });\n\n    // Add our custom cancel function to the promise that is returned\n    // We can call this if we are about to run a new transition, which we know will prevent this transition from ending,\n    // i.e. it will therefore never raise a transitionEnd event for that transition\n    deferred.promise.cancel = function() {\n      if ( endEventName ) {\n        element.unbind(endEventName, transitionEndHandler);\n      }\n      deferred.reject('Transition cancelled');\n    };\n\n    return deferred.promise;\n  };\n\n  // Work out the name of the transitionEnd event\n  var transElement = document.createElement('trans');\n  var transitionEndEventNames = {\n    'WebkitTransition': 'webkitTransitionEnd',\n    'MozTransition': 'transitionend',\n    'OTransition': 'oTransitionEnd',\n    'transition': 'transitionend'\n  };\n  var animationEndEventNames = {\n    'WebkitTransition': 'webkitAnimationEnd',\n    'MozTransition': 'animationend',\n    'OTransition': 'oAnimationEnd',\n    'transition': 'animationend'\n  };\n  function findEndEventName(endEventNames) {\n    for (var name in endEventNames){\n      if (transElement.style[name] !== undefined) {\n        return endEventNames[name];\n      }\n    }\n  }\n  $transition.transitionEndEventName = findEndEventName(transitionEndEventNames);\n  $transition.animationEndEventName = findEndEventName(animationEndEventNames);\n  return $transition;\n}]);\n\nangular.module('ui.bootstrap.typeahead', ['ui.bootstrap.position', 'ui.bootstrap.bindHtml'])\n\n/**\n * A helper service that can parse typeahead's syntax (string provided by users)\n * Extracted to a separate service for ease of unit testing\n */\n  .factory('typeaheadParser', ['$parse', function ($parse) {\n\n  //                      00000111000000000000022200000000000000003333333333333330000000000044000\n  var TYPEAHEAD_REGEXP = /^\\s*([\\s\\S]+?)(?:\\s+as\\s+([\\s\\S]+?))?\\s+for\\s+(?:([\\$\\w][\\$\\w\\d]*))\\s+in\\s+([\\s\\S]+?)$/;\n\n  return {\n    parse:function (input) {\n\n      var match = input.match(TYPEAHEAD_REGEXP);\n      if (!match) {\n        throw new Error(\n          'Expected typeahead specification in form of \"_modelValue_ (as _label_)? for _item_ in _collection_\"' +\n            ' but got \"' + input + '\".');\n      }\n\n      return {\n        itemName:match[3],\n        source:$parse(match[4]),\n        viewMapper:$parse(match[2] || match[1]),\n        modelMapper:$parse(match[1])\n      };\n    }\n  };\n}])\n\n  .directive('typeahead', ['$compile', '$parse', '$q', '$timeout', '$document', '$position', 'typeaheadParser',\n    function ($compile, $parse, $q, $timeout, $document, $position, typeaheadParser) {\n\n  var HOT_KEYS = [9, 13, 27, 38, 40];\n\n  return {\n    require:'ngModel',\n    link:function (originalScope, element, attrs, modelCtrl) {\n\n      //SUPPORTED ATTRIBUTES (OPTIONS)\n\n      //minimal no of characters that needs to be entered before typeahead kicks-in\n      var minSearch = originalScope.$eval(attrs.typeaheadMinLength) || 1;\n\n      //minimal wait time after last character typed before typeahead kicks-in\n      var waitTime = originalScope.$eval(attrs.typeaheadWaitMs) || 0;\n\n      //should it restrict model values to the ones selected from the popup only?\n      var isEditable = originalScope.$eval(attrs.typeaheadEditable) !== false;\n\n      //binding to a variable that indicates if matches are being retrieved asynchronously\n      var isLoadingSetter = $parse(attrs.typeaheadLoading).assign || angular.noop;\n\n      //a callback executed when a match is selected\n      var onSelectCallback = $parse(attrs.typeaheadOnSelect);\n\n      var inputFormatter = attrs.typeaheadInputFormatter ? $parse(attrs.typeaheadInputFormatter) : undefined;\n\n      var appendToBody =  attrs.typeaheadAppendToBody ? originalScope.$eval(attrs.typeaheadAppendToBody) : false;\n\n      var focusFirst = originalScope.$eval(attrs.typeaheadFocusFirst) !== false;\n\n      //INTERNAL VARIABLES\n\n      //model setter executed upon match selection\n      var $setModelValue = $parse(attrs.ngModel).assign;\n\n      //expressions used by typeahead\n      var parserResult = typeaheadParser.parse(attrs.typeahead);\n\n      var hasFocus;\n\n      //create a child scope for the typeahead directive so we are not polluting original scope\n      //with typeahead-specific data (matches, query etc.)\n      var scope = originalScope.$new();\n      originalScope.$on('$destroy', function(){\n        scope.$destroy();\n      });\n\n      // WAI-ARIA\n      var popupId = 'typeahead-' + scope.$id + '-' + Math.floor(Math.random() * 10000);\n      element.attr({\n        'aria-autocomplete': 'list',\n        'aria-expanded': false,\n        'aria-owns': popupId\n      });\n\n      //pop-up element used to display matches\n      var popUpEl = angular.element('<div typeahead-popup></div>');\n      popUpEl.attr({\n        id: popupId,\n        matches: 'matches',\n        active: 'activeIdx',\n        select: 'select(activeIdx)',\n        query: 'query',\n        position: 'position'\n      });\n      //custom item template\n      if (angular.isDefined(attrs.typeaheadTemplateUrl)) {\n        popUpEl.attr('template-url', attrs.typeaheadTemplateUrl);\n      }\n\n      var resetMatches = function() {\n        scope.matches = [];\n        scope.activeIdx = -1;\n        element.attr('aria-expanded', false);\n      };\n\n      var getMatchId = function(index) {\n        return popupId + '-option-' + index;\n      };\n\n      // Indicate that the specified match is the active (pre-selected) item in the list owned by this typeahead.\n      // This attribute is added or removed automatically when the `activeIdx` changes.\n      scope.$watch('activeIdx', function(index) {\n        if (index < 0) {\n          element.removeAttr('aria-activedescendant');\n        } else {\n          element.attr('aria-activedescendant', getMatchId(index));\n        }\n      });\n\n      var getMatchesAsync = function(inputValue) {\n\n        var locals = {$viewValue: inputValue};\n        isLoadingSetter(originalScope, true);\n        $q.when(parserResult.source(originalScope, locals)).then(function(matches) {\n\n          //it might happen that several async queries were in progress if a user were typing fast\n          //but we are interested only in responses that correspond to the current view value\n          var onCurrentRequest = (inputValue === modelCtrl.$viewValue);\n          if (onCurrentRequest && hasFocus) {\n            if (matches && matches.length > 0) {\n\n              scope.activeIdx = focusFirst ? 0 : -1;\n              scope.matches.length = 0;\n\n              //transform labels\n              for(var i=0; i<matches.length; i++) {\n                locals[parserResult.itemName] = matches[i];\n                scope.matches.push({\n                  id: getMatchId(i),\n                  label: parserResult.viewMapper(scope, locals),\n                  model: matches[i]\n                });\n              }\n\n              scope.query = inputValue;\n              //position pop-up with matches - we need to re-calculate its position each time we are opening a window\n              //with matches as a pop-up might be absolute-positioned and position of an input might have changed on a page\n              //due to other elements being rendered\n              scope.position = appendToBody ? $position.offset(element) : $position.position(element);\n              scope.position.top = scope.position.top + element.prop('offsetHeight');\n\n              element.attr('aria-expanded', true);\n            } else {\n              resetMatches();\n            }\n          }\n          if (onCurrentRequest) {\n            isLoadingSetter(originalScope, false);\n          }\n        }, function(){\n          resetMatches();\n          isLoadingSetter(originalScope, false);\n        });\n      };\n\n      resetMatches();\n\n      //we need to propagate user's query so we can higlight matches\n      scope.query = undefined;\n\n      //Declare the timeout promise var outside the function scope so that stacked calls can be cancelled later\n      var timeoutPromise;\n\n      var scheduleSearchWithTimeout = function(inputValue) {\n        timeoutPromise = $timeout(function () {\n          getMatchesAsync(inputValue);\n        }, waitTime);\n      };\n\n      var cancelPreviousTimeout = function() {\n        if (timeoutPromise) {\n          $timeout.cancel(timeoutPromise);\n        }\n      };\n\n      //plug into $parsers pipeline to open a typeahead on view changes initiated from DOM\n      //$parsers kick-in on all the changes coming from the view as well as manually triggered by $setViewValue\n      modelCtrl.$parsers.unshift(function (inputValue) {\n\n        hasFocus = true;\n\n        if (inputValue && inputValue.length >= minSearch) {\n          if (waitTime > 0) {\n            cancelPreviousTimeout();\n            scheduleSearchWithTimeout(inputValue);\n          } else {\n            getMatchesAsync(inputValue);\n          }\n        } else {\n          isLoadingSetter(originalScope, false);\n          cancelPreviousTimeout();\n          resetMatches();\n        }\n\n        if (isEditable) {\n          return inputValue;\n        } else {\n          if (!inputValue) {\n            // Reset in case user had typed something previously.\n            modelCtrl.$setValidity('editable', true);\n            return inputValue;\n          } else {\n            modelCtrl.$setValidity('editable', false);\n            return undefined;\n          }\n        }\n      });\n\n      modelCtrl.$formatters.push(function (modelValue) {\n\n        var candidateViewValue, emptyViewValue;\n        var locals = {};\n\n        // The validity may be set to false via $parsers (see above) if\n        // the model is restricted to selected values. If the model\n        // is set manually it is considered to be valid.\n        if (!isEditable) {\n          modelCtrl.$setValidity('editable', true);\n        }\n\n        if (inputFormatter) {\n\n          locals.$model = modelValue;\n          return inputFormatter(originalScope, locals);\n\n        } else {\n\n          //it might happen that we don't have enough info to properly render input value\n          //we need to check for this situation and simply return model value if we can't apply custom formatting\n          locals[parserResult.itemName] = modelValue;\n          candidateViewValue = parserResult.viewMapper(originalScope, locals);\n          locals[parserResult.itemName] = undefined;\n          emptyViewValue = parserResult.viewMapper(originalScope, locals);\n\n          return candidateViewValue!== emptyViewValue ? candidateViewValue : modelValue;\n        }\n      });\n\n      scope.select = function (activeIdx) {\n        //called from within the $digest() cycle\n        var locals = {};\n        var model, item;\n\n        locals[parserResult.itemName] = item = scope.matches[activeIdx].model;\n        model = parserResult.modelMapper(originalScope, locals);\n        $setModelValue(originalScope, model);\n        modelCtrl.$setValidity('editable', true);\n        modelCtrl.$setValidity('parse', true);\n\n        onSelectCallback(originalScope, {\n          $item: item,\n          $model: model,\n          $label: parserResult.viewMapper(originalScope, locals)\n        });\n\n        resetMatches();\n\n        //return focus to the input element if a match was selected via a mouse click event\n        // use timeout to avoid $rootScope:inprog error\n        $timeout(function() { element[0].focus(); }, 0, false);\n      };\n\n      //bind keyboard events: arrows up(38) / down(40), enter(13) and tab(9), esc(27)\n      element.bind('keydown', function (evt) {\n\n        //typeahead is open and an \"interesting\" key was pressed\n        if (scope.matches.length === 0 || HOT_KEYS.indexOf(evt.which) === -1) {\n          return;\n        }\n\n        // if there's nothing selected (i.e. focusFirst) and enter is hit, don't do anything\n        if (scope.activeIdx == -1 && (evt.which === 13 || evt.which === 9)) {\n          return;\n        }\n\n        evt.preventDefault();\n\n        if (evt.which === 40) {\n          scope.activeIdx = (scope.activeIdx + 1) % scope.matches.length;\n          scope.$digest();\n\n        } else if (evt.which === 38) {\n          scope.activeIdx = (scope.activeIdx > 0 ? scope.activeIdx : scope.matches.length) - 1;\n          scope.$digest();\n\n        } else if (evt.which === 13 || evt.which === 9) {\n          scope.$apply(function () {\n            scope.select(scope.activeIdx);\n          });\n\n        } else if (evt.which === 27) {\n          evt.stopPropagation();\n\n          resetMatches();\n          scope.$digest();\n        }\n      });\n\n      element.bind('blur', function (evt) {\n        hasFocus = false;\n      });\n\n      // Keep reference to click handler to unbind it.\n      var dismissClickHandler = function (evt) {\n        if (element[0] !== evt.target) {\n          resetMatches();\n          scope.$digest();\n        }\n      };\n\n      $document.bind('click', dismissClickHandler);\n\n      originalScope.$on('$destroy', function(){\n        $document.unbind('click', dismissClickHandler);\n        if (appendToBody) {\n          $popup.remove();\n        }\n        // Prevent jQuery cache memory leak\n        popUpEl.remove();\n      });\n\n      var $popup = $compile(popUpEl)(scope);\n\n      if (appendToBody) {\n        $document.find('body').append($popup);\n      } else {\n        element.after($popup);\n      }\n    }\n  };\n\n}])\n\n  .directive('typeaheadPopup', function () {\n    return {\n      restrict:'EA',\n      scope:{\n        matches:'=',\n        query:'=',\n        active:'=',\n        position:'=',\n        select:'&'\n      },\n      replace:true,\n      templateUrl:'template/typeahead/typeahead-popup.html',\n      link:function (scope, element, attrs) {\n\n        scope.templateUrl = attrs.templateUrl;\n\n        scope.isOpen = function () {\n          return scope.matches.length > 0;\n        };\n\n        scope.isActive = function (matchIdx) {\n          return scope.active == matchIdx;\n        };\n\n        scope.selectActive = function (matchIdx) {\n          scope.active = matchIdx;\n        };\n\n        scope.selectMatch = function (activeIdx) {\n          scope.select({activeIdx:activeIdx});\n        };\n      }\n    };\n  })\n\n  .directive('typeaheadMatch', ['$templateRequest', '$compile', '$parse', function ($templateRequest, $compile, $parse) {\n    return {\n      restrict:'EA',\n      scope:{\n        index:'=',\n        match:'=',\n        query:'='\n      },\n      link:function (scope, element, attrs) {\n        var tplUrl = $parse(attrs.templateUrl)(scope.$parent) || 'template/typeahead/typeahead-match.html';\n        $templateRequest(tplUrl).then(function(tplContent) {\n          $compile(tplContent.trim())(scope, function(clonedElement){\n            element.replaceWith(clonedElement);\n          });\n        });\n      }\n    };\n  }])\n\n  .filter('typeaheadHighlight', function() {\n\n    function escapeRegexp(queryToEscape) {\n      return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n    }\n\n    return function(matchItem, query) {\n      return query ? ('' + matchItem).replace(new RegExp(escapeRegexp(query), 'gi'), '<strong>$&</strong>') : matchItem;\n    };\n  });\n\nangular.module(\"template/accordion/accordion-group.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/accordion/accordion-group.html\",\n    \"<div class=\\\"panel panel-default\\\">\\n\" +\n    \"  <div class=\\\"panel-heading\\\">\\n\" +\n    \"    <h4 class=\\\"panel-title\\\">\\n\" +\n    \"      <a href=\\\"javascript:void(0)\\\" tabindex=\\\"0\\\" class=\\\"accordion-toggle\\\" ng-click=\\\"toggleOpen()\\\" accordion-transclude=\\\"heading\\\"><span ng-class=\\\"{'text-muted': isDisabled}\\\">{{heading}}</span></a>\\n\" +\n    \"    </h4>\\n\" +\n    \"  </div>\\n\" +\n    \"  <div class=\\\"panel-collapse collapse\\\" collapse=\\\"!isOpen\\\">\\n\" +\n    \"\t  <div class=\\\"panel-body\\\" ng-transclude></div>\\n\" +\n    \"  </div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/accordion/accordion.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/accordion/accordion.html\",\n    \"<div class=\\\"panel-group\\\" ng-transclude></div>\");\n}]);\n\nangular.module(\"template/alert/alert.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/alert/alert.html\",\n    \"<div class=\\\"alert\\\" ng-class=\\\"['alert-' + (type || 'warning'), closeable ? 'alert-dismissable' : null]\\\" role=\\\"alert\\\">\\n\" +\n    \"    <button ng-show=\\\"closeable\\\" type=\\\"button\\\" class=\\\"close\\\" ng-click=\\\"close()\\\">\\n\" +\n    \"        <span aria-hidden=\\\"true\\\">&times;</span>\\n\" +\n    \"        <span class=\\\"sr-only\\\">Close</span>\\n\" +\n    \"    </button>\\n\" +\n    \"    <div ng-transclude></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/carousel/carousel.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/carousel/carousel.html\",\n    \"<div ng-mouseenter=\\\"pause()\\\" ng-mouseleave=\\\"play()\\\" class=\\\"carousel\\\" ng-swipe-right=\\\"prev()\\\" ng-swipe-left=\\\"next()\\\">\\n\" +\n    \"    <ol class=\\\"carousel-indicators\\\" ng-show=\\\"slides.length > 1\\\">\\n\" +\n    \"        <li ng-repeat=\\\"slide in slides | orderBy:'index' track by $index\\\" ng-class=\\\"{active: isActive(slide)}\\\" ng-click=\\\"select(slide)\\\"></li>\\n\" +\n    \"    </ol>\\n\" +\n    \"    <div class=\\\"carousel-inner\\\" ng-transclude></div>\\n\" +\n    \"    <a class=\\\"left carousel-control\\\" ng-click=\\\"prev()\\\" ng-show=\\\"slides.length > 1\\\"><span class=\\\"glyphicon glyphicon-chevron-left\\\"></span></a>\\n\" +\n    \"    <a class=\\\"right carousel-control\\\" ng-click=\\\"next()\\\" ng-show=\\\"slides.length > 1\\\"><span class=\\\"glyphicon glyphicon-chevron-right\\\"></span></a>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/carousel/slide.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/carousel/slide.html\",\n    \"<div ng-class=\\\"{\\n\" +\n    \"    'active': active\\n\" +\n    \"  }\\\" class=\\\"item text-center\\\" ng-transclude></div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/datepicker/datepicker.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/datepicker/datepicker.html\",\n    \"<div ng-switch=\\\"datepickerMode\\\" role=\\\"application\\\" ng-keydown=\\\"keydown($event)\\\">\\n\" +\n    \"  <daypicker ng-switch-when=\\\"day\\\" tabindex=\\\"0\\\"></daypicker>\\n\" +\n    \"  <monthpicker ng-switch-when=\\\"month\\\" tabindex=\\\"0\\\"></monthpicker>\\n\" +\n    \"  <yearpicker ng-switch-when=\\\"year\\\" tabindex=\\\"0\\\"></yearpicker>\\n\" +\n    \"</div>\");\n}]);\n\nangular.module(\"template/datepicker/day.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/datepicker/day.html\",\n    \"<table role=\\\"grid\\\" aria-labelledby=\\\"{{uniqueId}}-title\\\" aria-activedescendant=\\\"{{activeDateId}}\\\">\\n\" +\n    \"  <thead>\\n\" +\n    \"    <tr>\\n\" +\n    \"      <th><button type=\\\"button\\\" class=\\\"btn btn-default btn-sm pull-left\\\" ng-click=\\\"move(-1)\\\" tabindex=\\\"-1\\\"><i class=\\\"glyphicon glyphicon-chevron-left\\\"></i></button></th>\\n\" +\n    \"      <th colspan=\\\"{{5 + showWeeks}}\\\"><button id=\\\"{{uniqueId}}-title\\\" role=\\\"heading\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-sm\\\" ng-click=\\\"toggleMode()\\\" ng-disabled=\\\"datepickerMode === maxMode\\\" tabindex=\\\"-1\\\" style=\\\"width:100%;\\\"><strong>{{title}}</strong></button></th>\\n\" +\n    \"      <th><button type=\\\"button\\\" class=\\\"btn btn-default btn-sm pull-right\\\" ng-click=\\\"move(1)\\\" tabindex=\\\"-1\\\"><i class=\\\"glyphicon glyphicon-chevron-right\\\"></i></button></th>\\n\" +\n    \"    </tr>\\n\" +\n    \"    <tr>\\n\" +\n    \"      <th ng-show=\\\"showWeeks\\\" class=\\\"text-center\\\"></th>\\n\" +\n    \"      <th ng-repeat=\\\"label in labels track by $index\\\" class=\\\"text-center\\\"><small aria-label=\\\"{{label.full}}\\\">{{label.abbr}}</small></th>\\n\" +\n    \"    </tr>\\n\" +\n    \"  </thead>\\n\" +\n    \"  <tbody>\\n\" +\n    \"    <tr ng-repeat=\\\"row in rows track by $index\\\">\\n\" +\n    \"      <td ng-show=\\\"showWeeks\\\" class=\\\"text-center h6\\\"><em>{{ weekNumbers[$index] }}</em></td>\\n\" +\n    \"      <td ng-repeat=\\\"dt in row track by dt.date\\\" class=\\\"text-center\\\" role=\\\"gridcell\\\" id=\\\"{{dt.uid}}\\\" aria-disabled=\\\"{{!!dt.disabled}}\\\" ng-class=\\\"dt.customClass\\\">\\n\" +\n    \"        <button type=\\\"button\\\" style=\\\"width:100%;\\\" class=\\\"btn btn-default btn-sm\\\" ng-class=\\\"{'btn-info': dt.selected, active: isActive(dt)}\\\" ng-click=\\\"select(dt.date)\\\" ng-disabled=\\\"dt.disabled\\\" tabindex=\\\"-1\\\"><span ng-class=\\\"{'text-muted': dt.secondary, 'text-info': dt.current}\\\">{{dt.label}}</span></button>\\n\" +\n    \"      </td>\\n\" +\n    \"    </tr>\\n\" +\n    \"  </tbody>\\n\" +\n    \"</table>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/datepicker/month.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/datepicker/month.html\",\n    \"<table role=\\\"grid\\\" aria-labelledby=\\\"{{uniqueId}}-title\\\" aria-activedescendant=\\\"{{activeDateId}}\\\">\\n\" +\n    \"  <thead>\\n\" +\n    \"    <tr>\\n\" +\n    \"      <th><button type=\\\"button\\\" class=\\\"btn btn-default btn-sm pull-left\\\" ng-click=\\\"move(-1)\\\" tabindex=\\\"-1\\\"><i class=\\\"glyphicon glyphicon-chevron-left\\\"></i></button></th>\\n\" +\n    \"      <th><button id=\\\"{{uniqueId}}-title\\\" role=\\\"heading\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-sm\\\" ng-click=\\\"toggleMode()\\\" ng-disabled=\\\"datepickerMode === maxMode\\\" tabindex=\\\"-1\\\" style=\\\"width:100%;\\\"><strong>{{title}}</strong></button></th>\\n\" +\n    \"      <th><button type=\\\"button\\\" class=\\\"btn btn-default btn-sm pull-right\\\" ng-click=\\\"move(1)\\\" tabindex=\\\"-1\\\"><i class=\\\"glyphicon glyphicon-chevron-right\\\"></i></button></th>\\n\" +\n    \"    </tr>\\n\" +\n    \"  </thead>\\n\" +\n    \"  <tbody>\\n\" +\n    \"    <tr ng-repeat=\\\"row in rows track by $index\\\">\\n\" +\n    \"      <td ng-repeat=\\\"dt in row track by dt.date\\\" class=\\\"text-center\\\" role=\\\"gridcell\\\" id=\\\"{{dt.uid}}\\\" aria-disabled=\\\"{{!!dt.disabled}}\\\">\\n\" +\n    \"        <button type=\\\"button\\\" style=\\\"width:100%;\\\" class=\\\"btn btn-default\\\" ng-class=\\\"{'btn-info': dt.selected, active: isActive(dt)}\\\" ng-click=\\\"select(dt.date)\\\" ng-disabled=\\\"dt.disabled\\\" tabindex=\\\"-1\\\"><span ng-class=\\\"{'text-info': dt.current}\\\">{{dt.label}}</span></button>\\n\" +\n    \"      </td>\\n\" +\n    \"    </tr>\\n\" +\n    \"  </tbody>\\n\" +\n    \"</table>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/datepicker/popup.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/datepicker/popup.html\",\n    \"<ul class=\\\"dropdown-menu\\\" ng-style=\\\"{display: (isOpen && 'block') || 'none', top: position.top+'px', left: position.left+'px'}\\\" ng-keydown=\\\"keydown($event)\\\">\\n\" +\n    \"\t<li ng-transclude></li>\\n\" +\n    \"\t<li ng-if=\\\"showButtonBar\\\" style=\\\"padding:10px 9px 2px\\\">\\n\" +\n    \"\t\t<span class=\\\"btn-group pull-left\\\">\\n\" +\n    \"\t\t\t<button type=\\\"button\\\" class=\\\"btn btn-sm btn-info\\\" ng-click=\\\"select('today')\\\">{{ getText('current') }}</button>\\n\" +\n    \"\t\t\t<button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" ng-click=\\\"select(null)\\\">{{ getText('clear') }}</button>\\n\" +\n    \"\t\t</span>\\n\" +\n    \"\t\t<button type=\\\"button\\\" class=\\\"btn btn-sm btn-success pull-right\\\" ng-click=\\\"close()\\\">{{ getText('close') }}</button>\\n\" +\n    \"\t</li>\\n\" +\n    \"</ul>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/datepicker/year.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/datepicker/year.html\",\n    \"<table role=\\\"grid\\\" aria-labelledby=\\\"{{uniqueId}}-title\\\" aria-activedescendant=\\\"{{activeDateId}}\\\">\\n\" +\n    \"  <thead>\\n\" +\n    \"    <tr>\\n\" +\n    \"      <th><button type=\\\"button\\\" class=\\\"btn btn-default btn-sm pull-left\\\" ng-click=\\\"move(-1)\\\" tabindex=\\\"-1\\\"><i class=\\\"glyphicon glyphicon-chevron-left\\\"></i></button></th>\\n\" +\n    \"      <th colspan=\\\"3\\\"><button id=\\\"{{uniqueId}}-title\\\" role=\\\"heading\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-sm\\\" ng-click=\\\"toggleMode()\\\" ng-disabled=\\\"datepickerMode === maxMode\\\" tabindex=\\\"-1\\\" style=\\\"width:100%;\\\"><strong>{{title}}</strong></button></th>\\n\" +\n    \"      <th><button type=\\\"button\\\" class=\\\"btn btn-default btn-sm pull-right\\\" ng-click=\\\"move(1)\\\" tabindex=\\\"-1\\\"><i class=\\\"glyphicon glyphicon-chevron-right\\\"></i></button></th>\\n\" +\n    \"    </tr>\\n\" +\n    \"  </thead>\\n\" +\n    \"  <tbody>\\n\" +\n    \"    <tr ng-repeat=\\\"row in rows track by $index\\\">\\n\" +\n    \"      <td ng-repeat=\\\"dt in row track by dt.date\\\" class=\\\"text-center\\\" role=\\\"gridcell\\\" id=\\\"{{dt.uid}}\\\" aria-disabled=\\\"{{!!dt.disabled}}\\\">\\n\" +\n    \"        <button type=\\\"button\\\" style=\\\"width:100%;\\\" class=\\\"btn btn-default\\\" ng-class=\\\"{'btn-info': dt.selected, active: isActive(dt)}\\\" ng-click=\\\"select(dt.date)\\\" ng-disabled=\\\"dt.disabled\\\" tabindex=\\\"-1\\\"><span ng-class=\\\"{'text-info': dt.current}\\\">{{dt.label}}</span></button>\\n\" +\n    \"      </td>\\n\" +\n    \"    </tr>\\n\" +\n    \"  </tbody>\\n\" +\n    \"</table>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/modal/backdrop.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/modal/backdrop.html\",\n    \"<div class=\\\"modal-backdrop\\\"\\n\" +\n    \"     modal-animation-class=\\\"fade\\\"\\n\" +\n    \"     ng-class=\\\"{in: animate}\\\"\\n\" +\n    \"     ng-style=\\\"{'z-index': 1040 + (index && 1 || 0) + index*10}\\\"\\n\" +\n    \"></div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/modal/window.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/modal/window.html\",\n    \"<div modal-render=\\\"{{$isRendered}}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" class=\\\"modal\\\"\\n\" +\n    \"    modal-animation-class=\\\"fade\\\"\\n\" +\n    \"\tng-class=\\\"{in: animate}\\\" ng-style=\\\"{'z-index': 1050 + index*10, display: 'block'}\\\" ng-click=\\\"close($event)\\\">\\n\" +\n    \"    <div class=\\\"modal-dialog\\\" ng-class=\\\"size ? 'modal-' + size : ''\\\"><div class=\\\"modal-content\\\" modal-transclude></div></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/pagination/pager.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/pagination/pager.html\",\n    \"<ul class=\\\"pager\\\">\\n\" +\n    \"  <li ng-class=\\\"{disabled: noPrevious(), previous: align}\\\"><a href ng-click=\\\"selectPage(page - 1, $event)\\\">{{getText('previous')}}</a></li>\\n\" +\n    \"  <li ng-class=\\\"{disabled: noNext(), next: align}\\\"><a href ng-click=\\\"selectPage(page + 1, $event)\\\">{{getText('next')}}</a></li>\\n\" +\n    \"</ul>\");\n}]);\n\nangular.module(\"template/pagination/pagination.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/pagination/pagination.html\",\n    \"<ul class=\\\"pagination\\\">\\n\" +\n    \"  <li ng-if=\\\"boundaryLinks\\\" ng-class=\\\"{disabled: noPrevious()}\\\"><a href ng-click=\\\"selectPage(1, $event)\\\">{{getText('first')}}</a></li>\\n\" +\n    \"  <li ng-if=\\\"directionLinks\\\" ng-class=\\\"{disabled: noPrevious()}\\\"><a href ng-click=\\\"selectPage(page - 1, $event)\\\">{{getText('previous')}}</a></li>\\n\" +\n    \"  <li ng-repeat=\\\"page in pages track by $index\\\" ng-class=\\\"{active: page.active}\\\"><a href ng-click=\\\"selectPage(page.number, $event)\\\">{{page.text}}</a></li>\\n\" +\n    \"  <li ng-if=\\\"directionLinks\\\" ng-class=\\\"{disabled: noNext()}\\\"><a href ng-click=\\\"selectPage(page + 1, $event)\\\">{{getText('next')}}</a></li>\\n\" +\n    \"  <li ng-if=\\\"boundaryLinks\\\" ng-class=\\\"{disabled: noNext()}\\\"><a href ng-click=\\\"selectPage(totalPages, $event)\\\">{{getText('last')}}</a></li>\\n\" +\n    \"</ul>\");\n}]);\n\nangular.module(\"template/tooltip/tooltip-html-popup.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/tooltip/tooltip-html-popup.html\",\n    \"<div class=\\\"tooltip\\\"\\n\" +\n    \"  tooltip-animation-class=\\\"fade\\\"\\n\" +\n    \"  tooltip-classes\\n\" +\n    \"  ng-class=\\\"{ in: isOpen() }\\\">\\n\" +\n    \"  <div class=\\\"tooltip-arrow\\\"></div>\\n\" +\n    \"  <div class=\\\"tooltip-inner\\\" ng-bind-html=\\\"contentExp()\\\"></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/tooltip/tooltip-html-unsafe-popup.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/tooltip/tooltip-html-unsafe-popup.html\",\n    \"<div class=\\\"tooltip\\\"\\n\" +\n    \"  tooltip-animation-class=\\\"fade\\\"\\n\" +\n    \"  tooltip-classes\\n\" +\n    \"  ng-class=\\\"{ in: isOpen() }\\\">\\n\" +\n    \"  <div class=\\\"tooltip-arrow\\\"></div>\\n\" +\n    \"  <div class=\\\"tooltip-inner\\\" bind-html-unsafe=\\\"content\\\"></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/tooltip/tooltip-popup.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/tooltip/tooltip-popup.html\",\n    \"<div class=\\\"tooltip\\\"\\n\" +\n    \"  tooltip-animation-class=\\\"fade\\\"\\n\" +\n    \"  tooltip-classes\\n\" +\n    \"  ng-class=\\\"{ in: isOpen() }\\\">\\n\" +\n    \"  <div class=\\\"tooltip-arrow\\\"></div>\\n\" +\n    \"  <div class=\\\"tooltip-inner\\\" ng-bind=\\\"content\\\"></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/tooltip/tooltip-template-popup.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/tooltip/tooltip-template-popup.html\",\n    \"<div class=\\\"tooltip\\\"\\n\" +\n    \"  tooltip-animation-class=\\\"fade\\\"\\n\" +\n    \"  tooltip-classes\\n\" +\n    \"  ng-class=\\\"{ in: isOpen() }\\\">\\n\" +\n    \"  <div class=\\\"tooltip-arrow\\\"></div>\\n\" +\n    \"  <div class=\\\"tooltip-inner\\\"\\n\" +\n    \"    tooltip-template-transclude=\\\"contentExp()\\\"\\n\" +\n    \"    tooltip-template-transclude-scope=\\\"originScope()\\\"></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/popover/popover-template.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/popover/popover-template.html\",\n    \"<div class=\\\"popover\\\"\\n\" +\n    \"  tooltip-animation-class=\\\"fade\\\"\\n\" +\n    \"  tooltip-classes\\n\" +\n    \"  ng-class=\\\"{ in: isOpen() }\\\">\\n\" +\n    \"  <div class=\\\"arrow\\\"></div>\\n\" +\n    \"\\n\" +\n    \"  <div class=\\\"popover-inner\\\">\\n\" +\n    \"      <h3 class=\\\"popover-title\\\" ng-bind=\\\"title\\\" ng-if=\\\"title\\\"></h3>\\n\" +\n    \"      <div class=\\\"popover-content\\\"\\n\" +\n    \"        tooltip-template-transclude=\\\"contentExp()\\\"\\n\" +\n    \"        tooltip-template-transclude-scope=\\\"originScope()\\\"></div>\\n\" +\n    \"  </div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/popover/popover-window.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/popover/popover-window.html\",\n    \"<div class=\\\"popover {{placement}}\\\" ng-class=\\\"{ in: isOpen, fade: animation }\\\">\\n\" +\n    \"  <div class=\\\"arrow\\\"></div>\\n\" +\n    \"\\n\" +\n    \"  <div class=\\\"popover-inner\\\">\\n\" +\n    \"      <h3 class=\\\"popover-title\\\" ng-bind=\\\"title\\\" ng-show=\\\"title\\\"></h3>\\n\" +\n    \"      <div class=\\\"popover-content\\\" tooltip-template-transclude></div>\\n\" +\n    \"  </div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/popover/popover.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/popover/popover.html\",\n    \"<div class=\\\"popover\\\"\\n\" +\n    \"  tooltip-animation-class=\\\"fade\\\"\\n\" +\n    \"  tooltip-classes\\n\" +\n    \"  ng-class=\\\"{ in: isOpen() }\\\">\\n\" +\n    \"  <div class=\\\"arrow\\\"></div>\\n\" +\n    \"\\n\" +\n    \"  <div class=\\\"popover-inner\\\">\\n\" +\n    \"      <h3 class=\\\"popover-title\\\" ng-bind=\\\"title\\\" ng-if=\\\"title\\\"></h3>\\n\" +\n    \"      <div class=\\\"popover-content\\\" ng-bind=\\\"content\\\"></div>\\n\" +\n    \"  </div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/progressbar/bar.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/progressbar/bar.html\",\n    \"<div class=\\\"progress-bar\\\" ng-class=\\\"type && 'progress-bar-' + type\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"{{value}}\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"{{max}}\\\" ng-style=\\\"{width: (percent < 100 ? percent : 100) + '%'}\\\" aria-valuetext=\\\"{{percent | number:0}}%\\\" ng-transclude></div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/progressbar/progress.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/progressbar/progress.html\",\n    \"<div class=\\\"progress\\\" ng-transclude></div>\");\n}]);\n\nangular.module(\"template/progressbar/progressbar.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/progressbar/progressbar.html\",\n    \"<div class=\\\"progress\\\">\\n\" +\n    \"  <div class=\\\"progress-bar\\\" ng-class=\\\"type && 'progress-bar-' + type\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"{{value}}\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"{{max}}\\\" ng-style=\\\"{width: (percent < 100 ? percent : 100) + '%'}\\\" aria-valuetext=\\\"{{percent | number:0}}%\\\" ng-transclude></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/rating/rating.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/rating/rating.html\",\n    \"<span ng-mouseleave=\\\"reset()\\\" ng-keydown=\\\"onKeydown($event)\\\" tabindex=\\\"0\\\" role=\\\"slider\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"{{range.length}}\\\" aria-valuenow=\\\"{{value}}\\\">\\n\" +\n    \"    <i ng-repeat=\\\"r in range track by $index\\\" ng-mouseenter=\\\"enter($index + 1)\\\" ng-click=\\\"rate($index + 1)\\\" class=\\\"glyphicon\\\" ng-class=\\\"$index < value && (r.stateOn || 'glyphicon-star') || (r.stateOff || 'glyphicon-star-empty')\\\">\\n\" +\n    \"        <span class=\\\"sr-only\\\">({{ $index < value ? '*' : ' ' }})</span>\\n\" +\n    \"    </i>\\n\" +\n    \"</span>\");\n}]);\n\nangular.module(\"template/tabs/tab.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/tabs/tab.html\",\n    \"<li ng-class=\\\"{active: active, disabled: disabled}\\\">\\n\" +\n    \"  <a href ng-click=\\\"select()\\\" tab-heading-transclude>{{heading}}</a>\\n\" +\n    \"</li>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/tabs/tabset.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/tabs/tabset.html\",\n    \"<div>\\n\" +\n    \"  <ul class=\\\"nav nav-{{type || 'tabs'}}\\\" ng-class=\\\"{'nav-stacked': vertical, 'nav-justified': justified}\\\" ng-transclude></ul>\\n\" +\n    \"  <div class=\\\"tab-content\\\">\\n\" +\n    \"    <div class=\\\"tab-pane\\\" \\n\" +\n    \"         ng-repeat=\\\"tab in tabs\\\" \\n\" +\n    \"         ng-class=\\\"{active: tab.active}\\\"\\n\" +\n    \"         tab-content-transclude=\\\"tab\\\">\\n\" +\n    \"    </div>\\n\" +\n    \"  </div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/timepicker/timepicker.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/timepicker/timepicker.html\",\n    \"<table>\\n\" +\n    \"\t<tbody>\\n\" +\n    \"\t\t<tr class=\\\"text-center\\\">\\n\" +\n    \"\t\t\t<td><a ng-click=\\\"incrementHours()\\\" class=\\\"btn btn-link\\\"><span class=\\\"glyphicon glyphicon-chevron-up\\\"></span></a></td>\\n\" +\n    \"\t\t\t<td>&nbsp;</td>\\n\" +\n    \"\t\t\t<td><a ng-click=\\\"incrementMinutes()\\\" class=\\\"btn btn-link\\\"><span class=\\\"glyphicon glyphicon-chevron-up\\\"></span></a></td>\\n\" +\n    \"\t\t\t<td ng-show=\\\"showMeridian\\\"></td>\\n\" +\n    \"\t\t</tr>\\n\" +\n    \"\t\t<tr>\\n\" +\n    \"\t\t\t<td class=\\\"form-group\\\" ng-class=\\\"{'has-error': invalidHours}\\\">\\n\" +\n    \"\t\t\t\t<input style=\\\"width:50px;\\\" type=\\\"text\\\" ng-model=\\\"hours\\\" ng-change=\\\"updateHours()\\\" class=\\\"form-control text-center\\\" ng-readonly=\\\"readonlyInput\\\" maxlength=\\\"2\\\">\\n\" +\n    \"\t\t\t</td>\\n\" +\n    \"\t\t\t<td>:</td>\\n\" +\n    \"\t\t\t<td class=\\\"form-group\\\" ng-class=\\\"{'has-error': invalidMinutes}\\\">\\n\" +\n    \"\t\t\t\t<input style=\\\"width:50px;\\\" type=\\\"text\\\" ng-model=\\\"minutes\\\" ng-change=\\\"updateMinutes()\\\" class=\\\"form-control text-center\\\" ng-readonly=\\\"readonlyInput\\\" maxlength=\\\"2\\\">\\n\" +\n    \"\t\t\t</td>\\n\" +\n    \"\t\t\t<td ng-show=\\\"showMeridian\\\"><button type=\\\"button\\\" class=\\\"btn btn-default text-center\\\" ng-click=\\\"toggleMeridian()\\\">{{meridian}}</button></td>\\n\" +\n    \"\t\t</tr>\\n\" +\n    \"\t\t<tr class=\\\"text-center\\\">\\n\" +\n    \"\t\t\t<td><a ng-click=\\\"decrementHours()\\\" class=\\\"btn btn-link\\\"><span class=\\\"glyphicon glyphicon-chevron-down\\\"></span></a></td>\\n\" +\n    \"\t\t\t<td>&nbsp;</td>\\n\" +\n    \"\t\t\t<td><a ng-click=\\\"decrementMinutes()\\\" class=\\\"btn btn-link\\\"><span class=\\\"glyphicon glyphicon-chevron-down\\\"></span></a></td>\\n\" +\n    \"\t\t\t<td ng-show=\\\"showMeridian\\\"></td>\\n\" +\n    \"\t\t</tr>\\n\" +\n    \"\t</tbody>\\n\" +\n    \"</table>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"template/typeahead/typeahead-match.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/typeahead/typeahead-match.html\",\n    \"<a tabindex=\\\"-1\\\" bind-html-unsafe=\\\"match.label | typeaheadHighlight:query\\\"></a>\");\n}]);\n\nangular.module(\"template/typeahead/typeahead-popup.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"template/typeahead/typeahead-popup.html\",\n    \"<ul class=\\\"dropdown-menu\\\" ng-show=\\\"isOpen()\\\" ng-style=\\\"{top: position.top+'px', left: position.left+'px'}\\\" style=\\\"display: block;\\\" role=\\\"listbox\\\" aria-hidden=\\\"{{!isOpen()}}\\\">\\n\" +\n    \"    <li ng-repeat=\\\"match in matches track by $index\\\" ng-class=\\\"{active: isActive($index) }\\\" ng-mouseenter=\\\"selectActive($index)\\\" ng-click=\\\"selectMatch($index)\\\" role=\\\"option\\\" id=\\\"{{match.id}}\\\">\\n\" +\n    \"        <div typeahead-match index=\\\"$index\\\" match=\\\"match\\\" query=\\\"query\\\" template-url=\\\"templateUrl\\\"></div>\\n\" +\n    \"    </li>\\n\" +\n    \"</ul>\\n\" +\n    \"\");\n}]);\n!angular.$$csp() && angular.element(document).find('head').prepend('<style type=\"text/css\">.ng-animate.item:not(.left):not(.right){-webkit-transition:0s ease-in-out left;transition:0s ease-in-out left}</style>');"]}